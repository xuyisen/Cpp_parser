1: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


2: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


3: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


4: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


5: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:49:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73462411.cpp:48:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 


score: 1.0


6: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:73:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:75:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 1.0


7: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/C_73661836.cpp:17:5

int main ( ) { memset ( head , - 1 , sizeof head ) ; int n ; cin >> n ; if ( n == 2 ) { cout << 0 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) { cin >> u [ i ] >> v [ i ] ; add ( u [ i ] , v [ i ] ) , add ( v [ i ] , u [ i ] ) ; deg [ u [ i ] ] ++ , deg [ v [ i ] ] ++ ; } dfs ( 1 , 0 ) ; for ( int i = 1 ; i < n ; i ++ ) { if ( deg [ u [ i ] ] > 1 && deg [ v [ i ] ] > 1 ) cout << idx ++ << '\n' ; else { if ( deg [ u [ i ] ] == 1 ) cout << ans [ u [ i ] ] << '\n' ; else cout << ans [ v [ i ] ] << '\n' ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73661162.cpp:17:5

int main ( ) { memset ( head , - 1 , sizeof head ) ; int n ; cin >> n ; if ( n == 2 ) { cout << 0 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) { cin >> u [ i ] >> v [ i ] ; add ( u [ i ] , v [ i ] ) , add ( v [ i ] , u [ i ] ) ; deg [ u [ i ] ] ++ , deg [ v [ i ] ] ++ ; } dfs ( 1 , 0 ) ; for ( int i = 1 ; i < n ; i ++ ) { if ( deg [ u [ i ] ] > 1 && deg [ v [ i ] ] > 1 ) cout << idx ++ << '\n' ; else { if ( deg [ u [ i ] ] == 1 ) cout << ans [ u [ i ] ] << '\n' ; else cout << ans [ v [ i ] ] << '\n' ; } } return 0 ; } 


score: 1.0


8: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/D_73379521.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73379535.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 1.0


9: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/D_73379521.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379235.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 1.0


10: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/D_73379521.cpp:17:5

int main ( ) { std :: cin >> A >> B ; if ( ( A & 1 ) != ( B & 1 ) || A > B ) return puts ( "-1" ) , 0 ; if ( A == B ) return { if ( A == 0 ) puts ( "0" ) ; else std :: cout << 1 << '\n' << A << '\n' , 0 ; } if ( check ( ) ) return 0 ; std :: cout << 3 << '\n' << A << ' ' << ( B - A ) / 2 << ' ' << ( B - A ) / 2 << '\n' ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73379535.cpp:17:5

int main ( ) { std :: cin >> A >> B ; if ( ( A & 1 ) != ( B & 1 ) || A > B ) return puts ( "-1" ) , 0 ; if ( A == B ) { if ( A == 0 ) puts ( "0" ) ; else std :: cout << 1 << '\n' << A << '\n' ; return 0 ; } if ( check ( ) ) return 0 ; std :: cout << 3 << '\n' << A << ' ' << ( B - A ) / 2 << ' ' << ( B - A ) / 2 << '\n' ; } 


score: 1.0


11: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/C_73297619.cpp:11:5

int main ( ) { int n ; cin >> n ; memset ( ans , - 1 , sizeof ( ans ) ) ; int pr = - 1 ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; in [ u ] ++ , in [ v ] ++ ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } int tot = 0 ; for ( int i = 1 ; i < n ; ++ i ) { if ( a [ i ] . u == pr && tot < 3 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot < 3 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { cout << ans [ i ] << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/C_73302072.cpp:11:5

int main ( ) { int n ; cin >> n ; memset ( ans , - 1 , sizeof ( ans ) ) ; int pr = - 1 ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; ++ in [ u ] , ++ in [ v ] ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } int tot = 0 ; for ( int i = 1 ; i < n ; ++ i ) { if ( a [ i ] . u == pr && tot < 3 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot < 3 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { cout << ans [ i ] << endl ; } return 0 ; } 


score: 1.0


12: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


13: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


14: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


15: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/D_73799468.cpp:21:6

void init ( ) { cin >> x >> y ; if ( x == y && x == 0 ) puts ( "0" ) , exit ( 0 ) ; if ( x == 0 ) { if ( y & 1 ) puts ( "-1" ) ; else cout << "2\n" << y / 2 << " " << y / 2 ; return ; } if ( x == y ) cout << "1\n" << x << endl , exit ( 0 ) ; a [ 1 ] = x ; y -= x ; if ( ! y ) cout << "1\n" << a [ 1 ] ; else if ( y & 1 ) puts ( "-1" ) ; else { if ( a [ 1 ] & ( y / 2 ) ) cout << "3\n" << a [ 1 ] << " " << y / 2 << " " << y / 2 ; else cout << "2\n" << a [ 1 ] + y / 2 << " " << y / 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73799573.cpp:21:6

void init ( ) { cin >> x >> y ; if ( x == y && x == 0 ) puts ( "0" ) , exit ( 0 ) ; if ( x == 0 ) { if ( y & 1 ) puts ( "-1" ) ; else cout << "2\n" << y / 2 << " " << y / 2 ; return ; } if ( x == y ) cout << "1\n" << x << endl , exit ( 0 ) ; a [ 1 ] = x ; y -= x ; if ( ! y ) cout << "1\n" << a [ 1 ] ; else if ( y & 1 ) puts ( "-1" ) ; else { if ( a [ 1 ] & ( y / 2 ) ) cout << "3\n" << a [ 1 ] << " " << y / 2 << " " << y / 2 ; else cout << "2\n" << a [ 1 ] + y / 2 << " " << y / 2 ; } } 


score: 1.0


16: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/D_73294393.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/D_73294463.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 


score: 1.0


17: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/D_73294393.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73294414.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 


score: 1.0


18: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 1.0


19: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73585766.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 1.0


20: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73462411.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/E_73462344.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 


score: 1.0


21: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/B_73617968.cpp:9:5

int main ( ) { cin >> t ; while ( t -- ) { cin >> n ; long a [ N ] = { 0 } , count_ = 0 ; for ( register int i = 1 ; i <= n ; ++ i ) { cin >> mid ; if ( ! a [ mid ] ) { a [ mid ] = 1 ; count_ ++ ; } } cout << count_ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/B_73617771.cpp:9:5

int main ( ) { cin >> t ; while ( t -- ) { cin >> n ; long a [ N ] = { 0 } , count_ = 0 ; for ( register int i = 1 ; i <= n ; ++ i ) { cin >> mid ; if ( ! a [ mid ] ) { a [ mid ] = 1 ; count_ ++ ; } } cout << count_ << endl ; } return 0 ; } 


score: 1.0


22: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


23: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


24: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer17/C_73298284.cpp:10:5

int main ( ) { int n ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> q [ i ] . u >> q [ i ] . v ; book [ q [ i ] . u ] ++ ; book [ q [ i ] . v ] ++ ; } int flag = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( book [ i ] > 2 ) { flag = 0 ; break ; } } if ( flag ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( i < 3 ) { st . push ( i ) ; } else { ct . push ( i ) ; } } int op ; for ( int i = 1 ; i <= n ; i ++ ) { if ( book [ i ] == 3 ) { op = i ; break ; } } for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( op == q [ i ] . u || q [ i ] . v == op ) { if ( ! st . empty ( ) ) { cout << st . top ( ) << endl ; st . pop ( ) ; } else { cout << ct . top ( ) << endl ; ct . pop ( ) ; } } else { cout << ct . top ( ) << endl ; ct . pop ( ) ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer17/C_73298505.cpp:10:5

int main ( ) { int n ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> q [ i ] . u >> q [ i ] . v ; book [ q [ i ] . u ] ++ ; book [ q [ i ] . v ] ++ ; } int flag = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( book [ i ] > 2 ) { flag = 0 ; break ; } } if ( flag ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( i < 3 ) { st . push ( i ) ; } else { ct . push ( i ) ; } } int op ; for ( int i = 1 ; i <= n ; i ++ ) { if ( book [ i ] >= 3 ) { op = i ; break ; } } for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( op == q [ i ] . u || q [ i ] . v == op ) { if ( ! st . empty ( ) ) { cout << st . top ( ) << endl ; st . pop ( ) ; } else { cout << ct . top ( ) << endl ; ct . pop ( ) ; } } else { cout << ct . top ( ) << endl ; ct . pop ( ) ; } } return 0 ; } 


score: 1.0


25: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madoka__1995/C_73270100.cpp:44:5

int main ( ) { cnt = 0 ; cin >> n ; kotae = n - 2 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a , b ; cin >> a >> b ; a -- ; b -- ; g [ a ] . push_back ( b ) ; g [ b ] . push_back ( a ) ; bangou [ a ] [ b ] = i ; } dfs ( 0 ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << ans [ i ] << '\n' ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madoka__1995/C_73272339.cpp:44:5

int main ( ) { cnt = 0 ; cin >> n ; kotae = n - 2 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a , b ; cin >> a >> b ; a -- ; b -- ; g [ a ] . push_back ( b ) ; g [ b ] . push_back ( a ) ; bangou [ a ] [ b ] = i ; } dfs ( 0 ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << ans [ i ] << '\n' ; } return 0 ; } 


score: 1.0


26: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73393176.cpp:36:6

void init ( ) //input and other initiation { cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> fr [ i ] >> to [ i ] ; addEdge ( fr [ i ] , to [ i ] ) ; addEdge ( to [ i ] , fr [ i ] ) ; } //这些情况叶子会相连 if ( n == 2 ) { cout << 0 << endl ; return ; } if ( n == 3 ) { cout << 0 << endl << 1 << endl ; return ; } //否则任取3个叶子赋值0,1,2	 int p [ 3 ] = { - 1 , - 1 , - 1 } ; for ( int i = 1 ; i <= n ; i ++ ) if ( degIn [ i ] == 1 ) { for ( int j = 0 ; j <= 2 ; j ++ ) if ( p [ j ] == - 1 ) { p [ j ] = i ; break ; } } int cur = n - 2 ; for ( int i = 1 ; i < n ; i ++ ) { if ( fr [ i ] == p [ 0 ] || to [ i ] == p [ 0 ] ) cout << 0 << endl ; else if ( fr [ i ] == p [ 1 ] || to [ i ] == p [ 1 ] ) cout << 1 << endl ; else if ( fr [ i ] == p [ 2 ] || to [ i ] == p [ 2 ] ) cout << 2 << endl ; else cout << cur -- << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/C_73393081.cpp:36:6

void init ( ) //input and other initiation { cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> fr [ i ] >> to [ i ] ; addEdge ( fr [ i ] , to [ i ] ) ; addEdge ( to [ i ] , fr [ i ] ) ; } //这些情况叶子会相连 if ( n == 2 ) { cout << 0 << endl ; return ; } if ( n == 3 ) { cout << 0 << endl << 1 << endl ; return ; } //否则任取3个叶子赋值0,1,2	 int p [ 3 ] = { - 1 , - 1 , - 1 } ; for ( int i = 1 ; i <= n ; i ++ ) if ( degIn [ i ] == 1 ) { for ( int j = 0 ; j <= 2 ; j ++ ) if ( p [ j ] == - 1 ) { p [ j ] = i ; break ; } } int cur = n - 2 ; for ( int i = 1 ; i < n ; i ++ ) { if ( fr [ i ] == p [ 0 ] || to [ i ] == p [ 0 ] ) cout << 0 << endl ; else if ( fr [ i ] == p [ 1 ] || to [ i ] == p [ 1 ] ) cout << 1 << endl ; else if ( fr [ i ] == p [ 2 ] || to [ i ] == p [ 2 ] ) cout << 2 << endl ; else cout << cur -- << endl ; } } 


score: 1.0


27: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73295382.cpp:11:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } if ( N == 2 ) { printf ( "%d" , 0 ) ; return ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) { if ( answer [ i ] ) { printf ( "%d\n" , answer [ i ] - 1 ) ; } else { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73661964.cpp:11:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } if ( N == 2 ) //注意特判2 { printf ( "%d" , 0 ) ; return ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) //在前三个度为1的点的出边赋值上0,1,2,为了方便处理这里就用了1,2,3 { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) //输出 { if ( answer [ i ] ) //如果有答案就输出答案 { printf ( "%d\n" , answer [ i ] - 1 ) ; } else //没有反正可以乱输出 { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 


score: 1.0


28: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/D_73294463.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73294414.cpp:12:8

signed main ( ) { scanf ( "%lld%lld" , & a , & b ) ; if ( ( a - b ) % 2 == 1 || a > b ) { printf ( "-1" ) ; return 0 ; } for ( int i = 60 ; i >= 0 ; i -- ) { int flaga = ( ( a >> i ) & 1ll ) , flagb = ( ( b >> i ) & 1ll ) ; if ( flaga == 1 && flagb == 1 ) que ( i ) ; if ( flaga == 0 && flagb == 1 ) { que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a -= ( 1ll << ( i - 1 ) ) ; if ( i > 0 ) if ( ( ( b >> i ) & 1ll ) ) que ( i - 1 ) , b -= ( 1ll << ( i - 1 ) ) , a += ( 1ll << ( i - 1 ) ) ; } if ( flaga == 1 && flagb == 0 ) { printf ( "-1" ) ; return 0 ; } } printf ( "%lld\n" , n ) ; for ( int i = 1 ; i <= n ; i ++ ) printf ( "%lld " , s [ i ] ) ; return 0 ; } 


score: 1.0


29: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/E_73464179.cpp:50:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:49:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 


score: 1.0


30: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/E_73464179.cpp:50:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73464300.cpp:50:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 


score: 1.0


31: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293136.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293187.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 1.0


32: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292945.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292857.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 1.0


33: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292945.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292665.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || u ^ v ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 1.0


34: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292857.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292665.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || u ^ v ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 1.0


35: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73331402.cpp:11:5

int main ( ) { cin . tie ( 0 ) ; cout . tie ( 0 ) ; ios_base :: sync_with_stdio ( false ) ; ll u , v ; cin >> u >> v ; if ( u > v || ( v - u ) & 1 ) { cout << - 1 << endl ; return 0 ; } if ( u == v ) { if ( ! u ) cout << 0 << endl ; else cout << 1 << endl << u << endl ; return 0 ; } ll half = ( ( v - u ) >> 1 ) ; if ( ( half & u ) == 0 ) { cout << 2 << endl << half << " " << ( half ^ u ) << endl ; } else { cout << 3 << endl << half << " " << half << " " << u << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73331303.cpp:11:5

int main ( ) { cin . tie ( 0 ) ; cout . tie ( 0 ) ; ios_base :: sync_with_stdio ( false ) ; ll u , v ; cin >> u >> v ; if ( u > v || ( v - u ) & 1 ) { cout << - 1 << endl ; return 0 ; } if ( u == v ) { if ( ! u ) cout << 0 << endl ; else cout << 1 << endl << u << endl ; return 0 ; } ll half = ( ( v - u ) >> 1 ) ; if ( half & u == 0 ) { cout << 2 << endl << half << " " << ( half ^ u ) << endl ; } else { cout << 3 << endl << half << " " << half << " " << u << endl ; } return 0 ; } 


score: 1.0


36: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73585766.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 1.0


37: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73379535.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379235.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 1.0


38: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 1.0


39: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 1.0


40: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 


score: 1.0


41: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 


score: 1.0


42: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 


score: 1.0


43: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 


score: 1.0


44: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 


score: 1.0


45: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 


score: 1.0


46: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 


score: 1.0


47: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/A_73310101.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/C_73351386.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 


score: 1.0


48: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/A_73310101.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/B_73310980.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 


score: 1.0


49: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/C_73351386.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lovecc/B_73310980.cpp:30:5

int qread ( ) { using namespace _buff ; int ret = 0 ; bool pos = true ; char c = getc ( ) ; for ( ; ( c < '0' || c > '9' ) && c != '-' ; c = getc ( ) ) { assert ( ~ c ) ; } if ( c == '-' ) { pos = false ; c = getc ( ) ; } for ( ; c >= '0' && c <= '9' ; c = getc ( ) ) { ret = ( ret << 3 ) + ( ret << 1 ) + ( c ^ 48 ) ; } return pos ? ret : - ret ; } 


score: 1.0


50: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283548.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289775.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


51: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283548.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289836.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


52: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283548.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289795.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


53: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283548.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283635.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


54: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289775.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289836.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


55: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289775.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289795.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


56: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289775.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283635.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


57: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289836.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289795.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


58: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289836.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283635.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


59: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289795.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283635.cpp:44:6

bool solve ( ) { carry = false ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { return false ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) return false ; if ( arr [ 1 ] & ( 1ll << ( i - 1 ) ) ) return false ; arr [ 1 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { return false ; } // TRACE(arr[1] _ arr[2]); ll x = 0 ; ll y = 0 ; fore ( i , 1 , 2 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) return false ; cout << 2 << endl ; fore ( i , 1 , 2 ) { cout << arr [ i ] << " " ; } sout ; return true ; } 


score: 1.0


60: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


61: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


62: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


63: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


64: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


65: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


66: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 1.0


67: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


68: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


69: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


70: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


71: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


72: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


73: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


74: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


75: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


76: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303858.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; rep ( j , depth [ i ] - 1 , depth [ place ] ) { output ( used [ j ] ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; rep ( j , depth [ i ] - 1 , depth [ place ] ) { output ( used [ j ] ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 1.0


77: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


78: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


79: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


80: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


81: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303684.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


82: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:86:6

void init ( ) { n = in ( ) ; m = in ( ) ; edges . resize ( n + 1 ) ; depth . resize ( n + 1 , 0 ) ; cant . resize ( n + 1 , false ) ; rep ( i , m ) { int a = in ( ) ; int b = in ( ) ; edges [ a ] . push_back ( b ) ; edges [ b ] . push_back ( a ) ; } sqn = sqrt ( n ) ; if ( sqn * sqn < n ) ++ sqn ; } 


score: 1.0


83: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 1.0


84: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MAFIA_21/A_73224764.cpp:19:4

long long # define M 998244353 # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define fr first # define sc second # define endl "\n" # define vc vector # define pb push_back # define pii pair < ll , ll > # define psi pair < string , ll > # define mii map < ll , ll > # define mp make_pair # define fast ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define PI 3.14159265 # define r0 return using namespace std ; ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MAFIA_21/C_73256627.cpp:19:4

long long # define M 998244353 # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define fr first # define sc second # define endl "\n" # define vc vector # define pb push_back # define pii pair < ll , ll > # define psi pair < string , ll > # define mii map < ll , ll > # define mp make_pair # define fast ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define PI 3.14159265 # define r0 return using namespace std ; ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 1.0


85: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383543.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383571.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 1.0


86: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383666.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ x ] - dep [ to ] + 1 >= lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] + 1 << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383571.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ x ] - dep [ to ] + 1 >= lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] + 1 << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 


score: 1.0


87: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luotc_why/F_73295466.cpp:27:13

inline void dfs ( int x , int fa ) { dep [ x ] = dep [ fa ] + 1 ; f [ x ] = fa ; for ( int i = head [ x ] ; i ; i = nxt [ i ] ) { int y = ver [ i ] ; if ( ! dep [ y ] ) dfs ( y , x ) ; else if ( dep [ y ] - dep [ x ] + 1 >= k ) { cout << 2 << endl << dep [ y ] - dep [ x ] + 1 << endl ; while ( y != x ) cout << y << " " , y = f [ y ] ; cout << x << endl ; exit ( 0 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luotc_why/F_73295499.cpp:27:13

inline void dfs ( int x , int fa ) { dep [ x ] = dep [ fa ] + 1 ; f [ x ] = fa ; for ( int i = head [ x ] ; i ; i = nxt [ i ] ) { int y = ver [ i ] ; if ( ! dep [ y ] ) dfs ( y , x ) ; else if ( dep [ y ] - dep [ x ] + 1 >= k ) { cout << 2 << endl << dep [ y ] - dep [ x ] + 1 << endl ; while ( y != x ) cout << y << " " , y = f [ y ] ; cout << x << endl ; exit ( 0 ) ; } } } 


score: 1.0


88: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73271255.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73270227.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 


score: 1.0


89: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73271255.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73318809.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 


score: 1.0


90: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73270227.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LudwigVanBeethoven/D_73318809.cpp:75:5

long long int len = 1 ; int Cin = 0 ; ll ans [ 77 ] = { 0 } ; ll yet [ 77 ] = { 0 } ; int getFree ( int b ) { int ret = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ans [ i ] & 1LL << b ) ret ++ ; else break ; } return ret ; } 


score: 1.0


91: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306780.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73307189.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 


score: 1.0


92: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306780.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306927.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 


score: 1.0


93: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306780.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73307189.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 


score: 1.0


94: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306780.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306927.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 


score: 1.0


95: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73307189.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306927.cpp:53:4

long long int # define D double # define S second # define F first # define pb push_back # define ff fflush ( stdout ) # define ppb pop_back # define B ( c ) ( c ) . begin ( ) # define E ( c ) ( c ) . end ( ) # define all ( c ) ( c ) . begin ( ) , ( c ) . end ( ) # define rall ( c ) ( c ) . rbegin ( ) , ( c ) . rend ( ) # define SORT ( v ) sort ( ALL ( v ) ) # define lb lower_bound # define ub upper_bound # define si ( c ) ( ll ) ( ( c ) . size ( ) ) # define L ( c ) si ( c ) - 1 # define gcd ( a , b ) __gcd ( a , b ) # define lcm ( a , b ) ( a * ( b / gcd ( a , b ) ) ) # define sqr ( a ) ( ( a ) * ( a ) ) # define fast ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; # define accuracy cout << fixed << setprecision ( 18 ) ; # define inf ( ll ) 2e16 # define pow ( i , n ) ( int ) pow ( ( int ) i , n ) # define inputarr ( a , n ) for ( int xxx = 0 ; xxx < n ; ++ xxx ) cin >> a [ xxx ] # define maxc ( v ) * max_element ( ALL ( v ) ) # define minc ( v ) * min_element ( ALL ( v ) ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) typedef vector < ll > vi ; typedef pair < ll , ll > pii ; typedef pair < pii , ll > pipii ; typedef vector < vector < ll > > vvi ; typedef map < ll , ll > mp ; typedef priority_queue < pii , vector < pii > , greater < pii > > pq ; inline void normal ( ll & a ) { a = ( a + MOD ) % MOD ; } inline int modMul ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a * b ) % MOD ; } inline int modAdd ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; return ( a + b ) % MOD ; } inline int modSub ( ll a , ll b ) { a %= MOD , b %= MOD ; normal ( a ) , normal ( b ) ; a -= b ; normal ( a ) ; return a ; } inline int modPow ( ll b , ll p ) { int r = 1 ; while ( p ) { if ( p & 1 ) r = modMul ( r , b ) ; b = modMul ( b , b ) ; p >>= 1 ; } return r ; } inline int modInv ( int a ) { return modPow ( a , MOD - 2 ) ; } inline int modDiv ( int a , int b ) { return modMul ( a , modInv ( b ) ) ; } inline int fact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , r ) , r -- ; return ans ; } inline int invfact ( int r ) { int ans = 1 ; while ( r ) ans = modMul ( ans , modInv ( r ) ) , r -- ; return ans ; } inline D dgcd ( D a , D b ) { if ( a < b ) return dgcd ( b , a ) ; if ( b < .0001 ) return a ; return dgcd ( b , fmod ( a , b ) ) ; } const ll N = 305 ; const ll INF = ( ll ) 1e12 ; ll power ( ll base , ll exp ) { ll res = 1 ; while ( exp > 0 ) { if ( exp % 2 == 1 ) res = ( res * base ) ; base = ( base * base ) ; exp /= 2 ; } return res ; } 


score: 1.0


96: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73307189.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magneto_07/D_73306927.cpp:110:8

signed main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int t = 1 ; clock_t start , end ; start = clock ( ) ; cout << fixed << setprecision ( 11 ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif //cin>>t; while ( t -- ) { Abesaale ( ) ; } end = clock ( ) ; double time_taken = double ( end - start ) / double ( CLOCKS_PER_SEC ) ; //cerr<<time_taken; } 


score: 1.0


97: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73267261.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; cout < endl ; break ; x = true ; } if ( x = true ) { break ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73267534.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; cout < endl ; break ; x = true ; } if ( x = true ) { break ; } } } } } 


score: 1.0


98: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 1.0


99: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73270101.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; ll temp = 0 ; for ( auto x : ans1 ) { temp ^= x ; } if ( temp != a ) { cout << "-1\n" ; return 0 ; } cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73272521.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; ll temp = 0 ; for ( auto x : ans1 ) { temp ^= x ; } if ( temp != a ) { cout << "-1\n" ; return 0 ; } cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 


score: 1.0


100: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 1.0


101: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


102: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


103: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


104: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


105: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


106: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


107: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


108: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


109: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


110: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:172:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:159:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 1.0


111: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


112: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


113: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


114: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


115: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


116: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


117: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 1.0


118: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 1.0


119: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 1.0


120: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:81:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:75:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 1.0


121: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558298.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558170.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 


score: 1.0


122: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558298.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558126.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 


score: 1.0


123: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558298.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MAX ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558170.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MAX ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 


score: 1.0


124: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558170.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558126.cpp:29:5

int bfs ( int start ) { queue < int > q ; memset ( h , 0 , sizeof ( h ) ) ; memset ( pr , 0 , sizeof ( pr ) ) ; h [ start ] = 1 ; q . push ( start ) ; while ( ! q . empty ( ) ) { int now = q . front ( ) ; q . pop ( ) ; for ( auto i : g [ now ] ) { if ( pr [ now ] == i ) continue ; if ( h [ i ] ) { return h [ now ] + h [ i ] - 1 ; } pr [ i ] = now , h [ i ] = h [ now ] + 1 ; q . push ( i ) ; } } return INT_MAX ; } 


score: 1.0


125: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301335.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301101.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 


score: 1.0


126: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301335.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73300750.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 


score: 1.0


127: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301101.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73300750.cpp:21:6

void dfs ( int now ) { for ( auto to : g [ now ] ) { if ( mark [ to ] ) { int circle_size = h [ now ] - h [ to ] + 1 ; if ( circle_size >= up ) { int t = now ; cout << 2 << '\n' << circle_size << '\n' ; cout << t << ' ' ; t = pre [ t ] ; while ( t != to ) { cout << t << ' ' ; t = pre [ t ] ; } cout << to << '\n' ; exit ( 0 ) ; } continue ; } h [ to ] = h [ now ] + 1 ; ans [ h [ to ] % low ] . push_back ( to ) ; mark [ to ] = 1 ; pre [ to ] = now ; dfs ( to ) ; } } 


score: 1.0


128: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LowR/F_73761900.cpp:18:5

int dfs ( int v , int p ) { done [ v ] = 1 ; int u = - 1 ; bool colorable = true ; for ( int to : g [ v ] ) { if ( to == p ) continue ; if ( done [ to ] ) { if ( depth [ v ] > depth [ to ] ) { if ( u == - 1 || depth [ u ] > depth [ to ] ) u = to ; } } else { depth [ to ] = depth [ v ] + 1 ; const int r = dfs ( to , v ) ; if ( r >= 0 ) { printf ( "%d " , v ) ; if ( r == v ) { printf ( "\n" ) ; exit ( 0 ) ; } else { return r ; } } } if ( cc [ to ] ) colorable = false ; } if ( u != - 1 && depth [ v ] - depth [ u ] >= sq - 1 ) { printf ( "2\n%d\n%d " , depth [ v ] - depth [ u ] + 1 , v ) ; return u ; } else if ( colorable ) { ss . push_back ( v ) ; cc [ v ] = 1 ; } return - 1 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LowR/F_73736852.cpp:18:5

int dfs ( int v , int p ) { done [ v ] = 1 ; int u = - 1 ; bool colorable = true ; for ( int to : g [ v ] ) { if ( to == p ) continue ; if ( done [ to ] ) { if ( depth [ v ] > depth [ to ] ) { if ( u == - 1 || depth [ u ] > depth [ to ] ) u = to ; } } else { depth [ to ] = depth [ v ] + 1 ; const int r = dfs ( to , v ) ; if ( r >= 0 ) { printf ( "%d " , v ) ; if ( r == v ) { printf ( "\n" ) ; exit ( 0 ) ; } else { return r ; } } } if ( cc [ to ] ) colorable = false ; } if ( u != - 1 && depth [ v ] - depth [ u ] >= sq - 1 ) { printf ( "2\n%d\n%d " , depth [ v ] - depth [ u ] + 1 , v ) ; return u ; } else if ( colorable ) { ss . push_back ( v ) ; cc [ v ] = 1 ; } return - 1 ; } 


score: 1.0


129: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LowR/F_73761900.cpp:56:5

int main ( ) { int n , m ; scanf ( "%d%d" , & n , & m ) ; sq = sqrt ( n ) ; g . resize ( n + 1 ) ; done . resize ( n + 1 ) ; depth . resize ( n + 1 ) ; cc . resize ( n + 1 ) ; for ( int i = 0 ; i < m ; i ++ ) { int u , v ; scanf ( "%d%d" , & u , & v ) ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; i ++ ) printf ( "%d " , ss [ i ] ) ; printf ( "\n" ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LowR/F_73736852.cpp:56:5

int main ( ) { int n , m ; scanf ( "%d%d" , & n , & m ) ; sq = sqrt ( n ) ; g . resize ( n + 1 ) ; done . resize ( n + 1 ) ; depth . resize ( n + 1 ) ; cc . resize ( n + 1 ) ; for ( int i = 0 ; i < m ; i ++ ) { int u , v ; scanf ( "%d%d" , & u , & v ) ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; i ++ ) printf ( "%d " , ss [ i ] ) ; printf ( "\n" ) ; return 0 ; } 


score: 1.0


130: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer1004/F_73378554.cpp:60:5

int main ( ) { int n , m ; cin >> n >> m ; adj . assign ( n + 1 , { } ) ; depth . assign ( n + 1 , 0 ) ; parent . assign ( n + 1 , 0 ) ; vis . assign ( n + 1 , 0 ) ; threshold = int ( ceil ( sqrt ( n ) ) ) ; for ( int i = 0 ; i < m ; ++ i ) { int u , v ; cin >> u >> v ; adj [ u ] . emplace_back ( v ) ; adj [ v ] . emplace_back ( u ) ; } dfs ( 1 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer1004/F_73378427.cpp:52:5

int main ( ) { int n , m ; cin >> n >> m ; adj . assign ( n + 1 , { } ) ; depth . assign ( n + 1 , 0 ) ; parent . assign ( n + 1 , 0 ) ; vis . assign ( n + 1 , 0 ) ; threshold = int ( ceil ( sqrt ( n ) ) ) ; for ( int i = 0 ; i < m ; ++ i ) { int u , v ; cin >> u >> v ; adj [ u ] . emplace_back ( v ) ; adj [ v ] . emplace_back ( u ) ; } dfs ( 1 ) ; } 


score: 1.0


131: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


132: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


133: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


134: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


135: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


136: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580961.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


137: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


138: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:72:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


139: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


140: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73580897.cpp:88:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


141: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:73:6

void bfs ( int s ) { memset ( d , 63 , sizeof ( d ) ) ; d [ s ] = 0 ; memset ( p , 0 , sizeof ( p ) ) ; //  memset(v,0,sizeof(v)); v[s] = 1; while ( ! q . empty ( ) ) q . pop ( ) ; q . push ( s ) ; while ( ! q . empty ( ) ) { int x = q . front ( ) ; for ( const int & u : g [ x ] ) { if ( p [ x ] == u ) continue ; if ( d [ u ] < inf ) { ans = min ( ans , d [ u ] + d [ x ] + 1 ) ; } else if ( d [ u ] > d [ x ] + 1 ) { d [ u ] = d [ x ] + 1 ; p [ u ] = x ; q . push ( u ) ; } } q . pop ( ) ; // v[x] = 0; } } 


score: 1.0


142: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581805.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lovestarry/E_73581608.cpp:89:8

signed main ( ) { n = rd ( ) ; rep ( i , 1 , n ) a [ i ] = rd ( ) , f ( a [ i ] ) ; if ( ans == 1 ) printf ( "%lld\n" , 1ll ) ; else { rep ( i , 1 , 1000 ) bfs ( i ) ; printf ( "%lld\n" , ( ans == inf ) ? - 1ll : ans ) ; } return 0 ; } 


score: 1.0


143: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406801.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406677.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; long long a [ v ] ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 


score: 1.0


144: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73414193.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413399.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v ^ u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 1.0


145: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 1.0


146: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


147: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


148: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


149: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


150: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


151: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


152: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


153: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 10 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:59:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 10 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


154: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73323503.cpp:25:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73323610.cpp:25:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 


score: 1.0


155: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73323503.cpp:25:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73335867.cpp:24:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 


score: 1.0


156: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/C_73321981.cpp:45:6

void dfs ( int u , int f , int d ) { int v ; if ( d > M ) M = d , rt = u ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ( v = e [ i ] . to ) != f ) fa [ v ] = mp ( u , e [ i ] . id ) , dfs ( v , u , d + 1 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/C_73335860.cpp:44:6

void dfs ( int u , int f , int d ) { int v ; if ( d > M ) M = d , rt = u ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ( v = e [ i ] . to ) != f ) fa [ v ] = mp ( u , e [ i ] . id ) , dfs ( v , u , d + 1 ) ; } 


score: 1.0


157: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/C_73321981.cpp:52:5

int main ( ) { n = rd ( ) ; memset ( ans + 1 , - 1 , n << 2 ) ; for ( int i = 1 ; i < n ; ++ i ) add ( rd ( ) , rd ( ) , i ) , st . insert ( i - 1 ) ; dfs ( 1 , 0 , 1 ) ; M = 0 ; fa [ rt ] = mp ( 0 , 0 ) ; dfs ( rt , 0 , 1 ) ; for ( int i = rt ; i ; i = fa [ i ] . fr ) stk [ ++ top ] = fa [ i ] . sc ; -- top ; if ( top == n - 1 ) { for ( int i = 1 ; i < n ; ++ i ) printf ( "%d\n" , i - 1 ) ; return 0 ; } ans [ stk [ 1 ] ] = 0 ; st . erase ( 0 ) ; ans [ stk [ top ] ] = 1 ; st . erase ( 1 ) ; for ( int i = 2 ; i < top ; ++ i ) ans [ stk [ i ] ] = i + 1 , st . erase ( i + 1 ) ; for ( int i = 1 ; i < n ; ++ i ) if ( ! ~ ans [ i ] ) ans [ i ] = * st . begin ( ) , st . erase ( st . begin ( ) ) ; for ( int i = 1 ; i < n ; ++ i ) printf ( "%d\n" , ans [ i ] ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/C_73335860.cpp:51:5

int main ( ) { n = rd ( ) ; memset ( ans + 1 , - 1 , n << 2 ) ; for ( int i = 1 ; i < n ; ++ i ) add ( rd ( ) , rd ( ) , i ) , st . insert ( i - 1 ) ; dfs ( 1 , 0 , 1 ) ; M = 0 ; fa [ rt ] = mp ( 0 , 0 ) ; dfs ( rt , 0 , 1 ) ; for ( int i = rt ; i ; i = fa [ i ] . fr ) stk [ ++ top ] = fa [ i ] . sc ; -- top ; if ( top == n - 1 ) { for ( int i = 1 ; i < n ; ++ i ) printf ( "%d\n" , i - 1 ) ; return 0 ; } ans [ stk [ 1 ] ] = 0 ; st . erase ( 0 ) ; ans [ stk [ top ] ] = 1 ; st . erase ( 1 ) ; for ( int i = 2 ; i < top ; ++ i ) ans [ stk [ i ] ] = i + 1 , st . erase ( i + 1 ) ; for ( int i = 1 ; i < n ; ++ i ) if ( ! ~ ans [ i ] ) ans [ i ] = * st . begin ( ) , st . erase ( st . begin ( ) ) ; for ( int i = 1 ; i < n ; ++ i ) printf ( "%d\n" , ans [ i ] ) ; return 0 ; } 


score: 1.0


158: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73327073.cpp:61:5

int main ( ) { n = rd ( ) ; init ( ) ; ans = 1e9 ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) ans = 1 ; if ( vis [ a [ i ] ] ) chkmin ( ans , 2 ) ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; if ( A == 1 && B == 1 ) return puts ( "1" ) , 0 ; } memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73335876.cpp:60:5

int main ( ) { n = rd ( ) ; init ( ) ; ans = 1e9 ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) ans = 1 ; if ( vis [ a [ i ] ] ) chkmin ( ans , 2 ) ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; if ( A == 1 && B == 1 ) return puts ( "1" ) , 0 ; } memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 


score: 1.0


159: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


160: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


161: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


162: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


163: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


164: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


165: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


166: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


167: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


168: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


169: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


170: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


171: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


172: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


173: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73323610.cpp:25:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73335867.cpp:24:4

long long # define ldb long double # define ull unsigned long long # define pb push_back # define ppb pop_back # define pf push_front # define pul pair < ull , LL > # define pii pair < int , int > # define mp make_pair # define fr first # define sc second # define x1 faqx1 # define y1 faqy1 # define x2 faqx2 # define y2 faqy2 using namespace std ; const int mod = 998244353 ; template < typename T > void chkmin ( T & x , T y ) { if ( y < x ) x = y ; } template < typename T > void chkmax ( T & x , T y ) { if ( y > x ) x = y ; } template < typename T > void upd ( T & x , T y ) { if ( ( x += y ) >= mod ) x -= mod ; } LL A , B , sl , fh ; LL rd ( ) { sl = 0 ; fh = 1 ; char ch = getchar ( ) ; while ( ch < '0' || '9' < ch ) { if ( ch == '-' ) fh = - 1 ; ch = getchar ( ) ; } while ( '0' <= ch && ch <= '9' ) sl = sl * 10 + ch - '0' , ch = getchar ( ) ; return sl * fh ; } 


score: 1.0


174: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73323610.cpp:33:5

int main ( ) { A = rd ( ) ; B = rd ( ) ; if ( A > B ) return puts ( "-1" ) , 0 ; if ( ( B - A ) & 1 ) return puts ( "-1" ) , 0 ; if ( A == 0 && B == 0 ) return puts ( "0" ) , 0 ; if ( A == B ) return printf ( "1\n%lld\n" , A ) , 0 ; LL x = ( B - A ) / 2 , y = A ^ x ; if ( x + y == B ) return printf ( "2\n%lld %lld\n" , x , y ) , 0 ; printf ( "3\n%lld %lld %lld\n" , A , ( B - A ) / 2 , ( B - A ) / 2 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/D_73335867.cpp:32:5

int main ( ) { A = rd ( ) ; B = rd ( ) ; if ( A > B ) return puts ( "-1" ) , 0 ; if ( ( B - A ) & 1 ) return puts ( "-1" ) , 0 ; if ( A == 0 && B == 0 ) return puts ( "0" ) , 0 ; if ( A == B ) return printf ( "1\n%lld\n" , A ) , 0 ; LL x = ( B - A ) / 2 , y = A ^ x ; if ( x + y == B ) return printf ( "2\n%lld %lld\n" , x , y ) , 0 ; printf ( "3\n%lld %lld %lld\n" , A , ( B - A ) / 2 , ( B - A ) / 2 ) ; return 0 ; } 


score: 1.0


175: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


176: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


177: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


178: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


179: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


180: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 1.0


181: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


182: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


183: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


184: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


185: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


186: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 1.0


187: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


188: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


189: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 1.0


190: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:100:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:95:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


191: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:100:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288661.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


192: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:100:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


193: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:100:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:96:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


194: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:95:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288661.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


195: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:95:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


196: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:95:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:96:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


197: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { //cout << s << " " << x << endl; ckmin ( ret , dist [ x ] + minDistMarked + 2 ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { //cout << s << " " << x << endl; ckmin ( ret , dist [ x ] + minDistMarked + 2 ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 


score: 1.0


198: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288661.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


199: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288661.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:96:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


200: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:96:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 1.0


201: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


202: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


203: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


204: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


205: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


206: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


207: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


208: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


209: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


210: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


211: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


212: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


213: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


214: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/B_73232285.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


215: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


216: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


217: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


218: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73312220.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


219: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:20:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } 


score: 1.0


220: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/A_73226779.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:38:4

long long # define ld long double # define pll pair < long long , long long > # define vll vector < long long > # define pb push_back # define mp make_pair # define ff first # define ss second # define F ( i , a , b ) for ( ll i = a ; i <= b ; i ++ ) # define RF ( i , a , b ) for ( ll i = a ; i >= b ; i -- ) # define in ( a , n ) F ( i , 0 , n - 1 ) cin >> a [ i ] # define out ( a , n ) F ( i , 0 , n - 1 ) cout << a [ i ] << " " ; cout << endl # define IOS ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define mod 1000000007 ; ll power ( ll base , ll e ) { ll answer = 1 ; //ll e=1000000005; while ( e ) { if ( e % 2 == 1 ) { answer *= base ; } base *= base ; // base%=mod; e /= 2 ; // answer%=mod; } return answer ; } ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


221: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/magomed_koder/B_73331564.cpp:4:5

int main ( ) { int t , n ; long long int elem ; std :: unordered_set < int > set ; std :: cin >> t ; while ( t -- ) { std :: cin >> n ; for ( int i = 0 ; i < n ; ++ i ) { std :: cin >> elem ; set . insert ( elem ) ; } std :: cout << set . size << '\n' ; set . clear ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/magomed_koder/B_73331656.cpp:4:5

int main ( ) { int t , n ; long long int elem ; std :: unordered_set < int > set ; std :: cin >> t ; while ( t -- ) { std :: cin >> n ; for ( int i = 0 ; i < n ; ++ i ) { std :: cin >> elem ; set . insert ( elem ) ; } std :: cout << set . size ( ) << '\n' ; set . clear ( ) ; } return 0 ; } 


score: 1.0


222: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahadi97/D_73336484.cpp:50:4

long long # define ld long double //#define pi              3.1415926536 # define pi acos ( - 1 ) //#define mod             1000000007 # define newline printf ( "\n" ) # define printminusone printf ( "-1\n" ) # define scl1 ( n ) scanf ( "%lld" , & n ) # define scl2 ( a , b ) scanf ( "%lld %lld" , & a , & b ) # define scl3 ( a , b , c ) scanf ( "%lld %lld %lld" , & a , & b , & c ) # define printl ( n ) printf ( "%lld\n" , n ) # define ssl1 ( str ) scanf ( " %[^\n]" , str ) # define scd1 ( n ) scanf ( "%lf" , & n ) # define scd2 ( a , b ) scanf ( "%lf %lf" , & a , & b ) # define printd ( n ) printf ( "%lf\n" , n ) # define printld ( n ) printf ( "%Lf\n" , n ) # define printcase printf ( "Case %lld: " , i ) # define reversed ( s ) reverse ( s . begin ( ) , s . end ( ) ) # define asorted ( s ) sort ( s . begin ( ) , s . end ( ) ) # define dsorted ( s ) sort ( s . begin ( ) , s . end ( ) , cmp ) # define for0 ( i , n ) for ( i = 0 ; i < n ; i ++ ) # define for1 ( i , n ) for ( i = 1 ; i <= n ; i ++ ) # define fori ( itt , stt ) for ( auto itt = stt . begin ( ) ; itt != stt . end ( ) ; itt ++ ) # define pii pair < ll , ll > # define piii pair < ll , pii > //#define SIZE            100005 //#define INF             1000000005 # define F first # define S second # define FR ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) # define ms ( arr , x ) memset ( arr , x , sizeof arr ) # define bitcount ( n ) __builtin_popcountll ( n ) const ll INF = LLONG_MAX ; const ll SIZE = 4e5 + 5 ; const ll mod = 1e9 + 7 ; bool check ( ll x , ll pos ) { return ( x & ( 1LL << pos ) ) ; } ll set1 ( ll x , ll pos ) { return ( x = x | ( 1LL << pos ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahadi97/D_73330892.cpp:50:4

long long # define ld long double //#define pi              3.1415926536 # define pi acos ( - 1 ) //#define mod             1000000007 # define newline printf ( "\n" ) # define printminusone printf ( "-1\n" ) # define scl1 ( n ) scanf ( "%lld" , & n ) # define scl2 ( a , b ) scanf ( "%lld %lld" , & a , & b ) # define scl3 ( a , b , c ) scanf ( "%lld %lld %lld" , & a , & b , & c ) # define printl ( n ) printf ( "%lld\n" , n ) # define ssl1 ( str ) scanf ( " %[^\n]" , str ) # define scd1 ( n ) scanf ( "%lf" , & n ) # define scd2 ( a , b ) scanf ( "%lf %lf" , & a , & b ) # define printd ( n ) printf ( "%lf\n" , n ) # define printld ( n ) printf ( "%Lf\n" , n ) # define printcase printf ( "Case %lld: " , i ) # define reversed ( s ) reverse ( s . begin ( ) , s . end ( ) ) # define asorted ( s ) sort ( s . begin ( ) , s . end ( ) ) # define dsorted ( s ) sort ( s . begin ( ) , s . end ( ) , cmp ) # define for0 ( i , n ) for ( i = 0 ; i < n ; i ++ ) # define for1 ( i , n ) for ( i = 1 ; i <= n ; i ++ ) # define fori ( itt , stt ) for ( auto itt = stt . begin ( ) ; itt != stt . end ( ) ; itt ++ ) # define pii pair < ll , ll > # define piii pair < ll , pii > //#define SIZE            100005 //#define INF             1000000005 # define F first # define S second # define FR ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) # define ms ( arr , x ) memset ( arr , x , sizeof arr ) # define bitcount ( n ) __builtin_popcountll ( n ) const ll INF = LLONG_MAX ; const ll SIZE = 4e5 + 5 ; const ll mod = 1e9 + 7 ; bool check ( ll x , ll pos ) { return ( x & ( 1LL << pos ) ) ; } ll set1 ( ll x , ll pos ) { return ( x = x | ( 1LL << pos ) ) ; } 


score: 1.0


223: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 


score: 1.0


224: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 


score: 1.0


225: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 1.0


226: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 1.0


227: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 1.0


228: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:53:6

void solve ( ) { int ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vi dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < int > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { int s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:53:6

void solve ( ) { int ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vi dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < int > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { int s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


229: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; //cout << norm(n) << "\n"; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 1.0


230: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; //cout << norm(n) << "\n"; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 1.0


231: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:72:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73499953.cpp:83:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 1.0


232: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 1.0


233: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


234: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


235: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


236: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


237: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


238: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 1.0


239: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:53:6

void solve ( ) { ll ans = INT_MAX ; f ( src , 1 , 1005 ) { vll visited ; visited . pb ( src ) ; dist [ src ] = 0 ; queue < ll > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { ll s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ child ] == - 1 ) { visited . pb ( child ) ; dist [ child ] = 1 + dist [ s ] ; par [ child ] = s ; if ( child < 1005 ) qu . push ( child ) ; } else if ( par [ child ] != s && par [ s ] != child ) { ans = min ( ans , dist [ s ] + dist [ child ] + 1 ) ; } } } for ( auto i : visited ) { dist [ i ] = - 1 ; par [ i ] = - 1 ; } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:53:6

void solve ( ) { ll ans = INT_MAX ; f ( src , 1 , 1005 ) { vll visited ; visited . pb ( src ) ; dist [ src ] = 0 ; queue < ll > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { ll s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ child ] == - 1 ) { visited . pb ( child ) ; dist [ child ] = 1 + dist [ s ] ; par [ child ] = s ; if ( child < 1005 ) qu . push ( child ) ; } else if ( par [ child ] != s && par [ s ] != child ) { ans = min ( ans , dist [ s ] + dist [ child ] + 1 ) ; } } } for ( auto i : visited ) { dist [ i ] = - 1 ; par [ i ] = - 1 ; } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


240: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


241: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


242: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


243: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


244: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


245: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


246: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


247: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


248: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


249: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 1.0


250: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:49:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73464300.cpp:50:6

void Bfs ( int s ) { p [ s ] = - 1 ; sum [ s ] = 1 ; int cnt = 0 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; rec [ cnt ++ ] = u ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } for ( int i = 0 ; i < cnt ; i ++ ) { int u = rec [ i ] ; p [ u ] = sum [ u ] = 0 ; } } 


score: 1.0


251: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luzivanlt/D_73293935.cpp:84:6

void solve ( ) { if ( xors > sums || xors % 2 != sums % 2 ) { printf ( "-1" ) ; return ; } prepare ( ) ; if ( ! find_result ( ) ) { printf ( "-1" ) ; return ; } sort ( bit_row + 1 , bit_row + mem + 1 ) ; int times = 0 ; for ( int i = 1 ; i <= mem ; i ++ ) { while ( times - bit_row [ i ] . fi ) result_row [ ++ result ] = first_num , times ++ ; first_num ^= ( long long ) 1 << ( bit_row [ i ] . sc - 1 ) ; } printf ( "%d\n" , result ) ; //long long one = 0 , two = 0; for ( int i = 1 ; i <= result ; i ++ ) { printf ( "%lld " , result_row [ i ] ) ; //one ^= result_row[i]; //  two += result_row[i]; } //printf("\n%lld %lld\n", one , two ); } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luzivanlt/D_73293877.cpp:84:6

void solve ( ) { if ( xors > sums || xors % 2 != sums % 2 ) { printf ( "-1" ) ; return ; } prepare ( ) ; if ( ! find_result ( ) ) { printf ( "-1" ) ; return ; } sort ( bit_row + 1 , bit_row + mem + 1 ) ; int times = 0 ; for ( int i = 1 ; i <= mem ; i ++ ) { while ( times - bit_row [ i ] . fi ) result_row [ ++ result ] = first_num , times ++ ; first_num ^= ( long long ) 1 << ( bit_row [ i ] . sc - 1 ) ; } printf ( "%d\n" , result ) ; //long long one = 0 , two = 0; for ( int i = 1 ; i <= result ; i ++ ) { printf ( "%lld " , result_row [ i ] ) ; //one ^= result_row[i]; //  two += result_row[i]; } //printf("\n%lld %lld\n", one , two ); } 


score: 1.0


252: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73340822.cpp:15:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341535.cpp:14:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 


score: 1.0


253: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73340822.cpp:15:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341603.cpp:14:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 


score: 1.0


254: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341535.cpp:14:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341603.cpp:14:5

int bfs ( int x ) { memset ( viz , 0 , sizeof ( viz ) ) ; memset ( dist , 0 , sizeof ( dist ) ) ; viz [ x ] = 1 ; while ( ! Q . empty ( ) ) Q . pop ( ) ; Q . push ( make_pair ( x , 0 ) ) ; while ( ! Q . empty ( ) ) { pair < int , int > a = Q . front ( ) ; Q . pop ( ) ; for ( int i = 0 ; i < nod [ a . first ] . size ( ) ; i ++ ) { if ( ! viz [ nod [ a . first ] [ i ] ] ) { viz [ nod [ a . first ] [ i ] ] = 1 ; dist [ nod [ a . first ] [ i ] ] = dist [ a . first ] + 1 ; Q . push ( make_pair ( nod [ a . first ] [ i ] , a . first ) ) ; } else if ( nod [ a . first ] [ i ] != a . second ) return dist [ a . first ] + dist [ nod [ a . first ] [ i ] ] + 1 ; } } return inf ; } 


score: 1.0


255: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luka/B_73836342.cpp:35:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luka/A_73836079.cpp:35:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } 


score: 1.0


256: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luka/B_73836342.cpp:39:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luka/A_73836079.cpp:39:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } 


score: 1.0


257: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luka/B_73836342.cpp:47:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } long mod_inv ( long x ) { return power ( x , MOD - 2 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luka/A_73836079.cpp:47:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } long mod_inv ( long x ) { return power ( x , MOD - 2 ) ; } 


score: 1.0


258: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luka/B_73836342.cpp:51:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } long mod_inv ( long x ) { return power ( x , MOD - 2 ) ; } long nCr ( long n , long r ) { if ( ! n ) return ! r ; if ( r > n ) return 0 ; return mul ( fact [ n ] , mul ( fact_inv [ n - r ] , fact_inv [ r ] ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luka/A_73836079.cpp:51:6

long long //#include <ext/numeric> //#include <ext/pb_ds/assoc_container.hpp> // Common file //#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update //#define oo 0x3f3f3f3f //#define OO 0x3f3f3f3f3f3f3f3f //#define popcount(n) __builtin_popcount(n) //#define popcountll(n) __builtin_popcountll(n) using namespace std ; //using namespace __gnu_cxx; //using namespace __gnu_pbds; //template<typename T> //using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; //struct mul { //    long operator()(const long &n1, const long &n2) const { //        return (n1 * n2) % Mod; //    } //}; // //long identity_element(const mul &m) { //    return 1LL; //} //long rand_int(long l, long r) { //[l, r] //    static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count()); //    return uniform_int_distribution<long>(l, r)(gen); //} const double PI = acos ( - 1.0 ) ; const int N = 200005 , M = 200005 , MOD = 998244353 ; long fact [ N ] , fact_inv [ N ] ; long mul ( long a , long b ) { return a * b % MOD ; } long power ( long a , long b ) { if ( ! b ) return 1 ; long r = power ( a , b / 2 ) ; r = mul ( r , r ) ; if ( b & 1 ) return mul ( r , a ) ; return r ; } long mod_inv ( long x ) { return power ( x , MOD - 2 ) ; } long nCr ( long n , long r ) { if ( ! n ) return ! r ; if ( r > n ) return 0 ; return mul ( fact [ n ] , mul ( fact_inv [ n - r ] , fact_inv [ r ] ) ) ; } 


score: 1.0


259: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luka/C_73838458.cpp:63:5

int main ( ) { # ifndef ONLINE_JUDGE freopen ( "input.txt" , "rt" , stdin ) ; //    freopen("friday.out", "w", stdout); # endif ios :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) , cout . precision ( 10 ) , cout << fixed ; int n ; cin >> n ; vector < pair < int , int >> edges ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; if ( v < u ) swap ( u , v ) ; edges . emplace_back ( u , v ) ; adjList [ u ] . push_back ( v ) ; adjList [ v ] . push_back ( u ) ; } int u = dfs1 ( 1 , 0 ) ; //    cout << u << '\n'; mp [ { min ( u , adjList [ u ] [ 0 ] ) , max ( u , adjList [ u ] [ 0 ] ) } ] = 0 ; c = n - 2 ; dfs2 ( adjList [ u ] [ 0 ] , u ) ; for ( auto p : edges ) { if ( mp . find ( p ) != mp . end ( ) ) { cout << mp [ p ] << '\n' ; } else { cout << c -- << '\n' ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luka/C_73838259.cpp:62:5

int main ( ) { # ifndef ONLINE_JUDGE freopen ( "input.txt" , "rt" , stdin ) ; //    freopen("friday.out", "w", stdout); # endif ios :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) , cout . precision ( 10 ) , cout << fixed ; int n ; cin >> n ; vector < pair < int , int >> edges ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; if ( v < u ) swap ( u , v ) ; edges . emplace_back ( u , v ) ; adjList [ u ] . push_back ( v ) ; adjList [ v ] . push_back ( u ) ; } int u = dfs1 ( 1 , 0 ) ; //    cout << u << '\n'; mp [ { min ( u , adjList [ u ] [ 0 ] ) , max ( u , adjList [ u ] [ 0 ] ) } ] = 0 ; c = n - 2 ; dfs2 ( adjList [ u ] [ 0 ] , u ) ; for ( auto p : edges ) { if ( mp . find ( p ) != mp . end ( ) ) { cout << mp [ p ] << '\n' ; } else { cout << c -- << '\n' ; } } return 0 ; } 


score: 1.0


260: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


261: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73316144.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/F_73316117.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


262: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


263: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


264: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


265: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


266: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


267: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


268: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


269: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


270: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


271: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 1.0


272: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 1.0


273: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594097.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n - 1 , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594410.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n + 1 , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 


score: 1.0


274: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/B_73294109.cpp:6:5

int main ( ) { scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , & a [ i ] ) ; } sort ( a + 1 , a + n + 1 ) ; unique ( a + 1 , a + n + 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) { ans ++ ; if ( a [ i ] >= a [ i + 1 ] ) { break ; } } printf ( "%d\n" , ans ) ; ans = 0 ; memset ( a , 0 , sizeof ( a ) ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/B_73248557.cpp:6:5

int main ( ) { scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , & a [ i ] ) ; } sort ( a + 1 , a + n + 1 ) ; unique ( a + 1 , a + n + 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) { ans ++ ; if ( a [ i ] >= a [ i + 1 ] ) { break ; } } printf ( "%d\n" , ans ) ; ans = 0 ; memset ( a , 0 , sizeof ( a ) ) ; } return 0 ; } 


score: 1.0


275: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295120.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295135.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( v - u ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( v - u ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 1.0


276: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


277: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


278: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


279: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


280: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


281: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


282: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


283: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


284: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


285: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


286: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


287: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


288: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


289: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


290: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


291: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


292: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


293: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


294: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 1.0


295: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424348.cpp:37:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73425617.cpp:38:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 


score: 1.0


296: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424348.cpp:37:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424231.cpp:36:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 


score: 1.0


297: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


298: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


299: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


300: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


301: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


302: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


303: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 1.0


304: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


305: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


306: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


307: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


308: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


309: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 1.0


310: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


311: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


312: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


313: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


314: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


315: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


316: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


317: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


318: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


319: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73425617.cpp:38:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424231.cpp:36:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a >> b ; sq = sqrt ( a ) ; if ( sq * sq < a ) sq ++ ; for ( i = 1 ; i <= b ; i ++ ) { cin >> c >> d ; v [ c ] . push_back ( d ) ; v [ d ] . push_back ( c ) ; } dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( i = 1 ; i <= sq ; i ++ ) cout << p [ i ] << " " ; return 0 ; } 


score: 1.0


320: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


321: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


322: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:7:6

void dfs ( int q , int w ) { tim ++ ; lf [ q ] = rg [ q ] = tim ; dep [ q ] = dep [ w ] + 1 ; bo [ q ] = cnt ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( lf [ ( * it ) ] < lf [ q ] && pas > dep [ q ] - dep [ ( * it ) ] + 1 ) pas = dep [ q ] - dep [ ( * it ) ] + 1 ; continue ; } dfs ( ( * it ) , q ) ; if ( rg [ q ] < rg [ ( * it ) ] ) rg [ q ] = rg [ ( * it ) ] ; } } 


score: 1.0


323: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 1.0


324: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 


score: 1.0


325: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 


score: 1.0


326: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 


score: 1.0


327: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 


score: 1.0


328: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:36:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } ll powerLL ( ll x , ll n ) { ll result = 1 ; while ( n ) { if ( n & 1 ) result = result * x % mod ; n = n / 2 ; x = x * x % mod ; } return result ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:36:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } ll powerLL ( ll x , ll n ) { ll result = 1 ; while ( n ) { if ( n & 1 ) result = result * x % mod ; n = n / 2 ; x = x * x % mod ; } return result ; } 


score: 1.0


329: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368503.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 


score: 1.0


330: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/E_73294457.cpp:15:6

void sieve ( ) { SPF [ 2 ] = 0 ; idx = 0 ; for ( int i = 2 ; i <= MAX_N ; ++ i ) { if ( ! SPF [ i ] ) { primes [ idx ++ ] = i ; SPF [ i ] = i ; } for ( int j = 0 ; j < idx && primes [ j ] <= SPF [ i ] && primes [ j ] * i <= MAX_N ; ++ j ) { SPF [ primes [ j ] * i ] = primes [ j ] ; } norm [ i ] = norm [ i / SPF [ i ] ] ; vector < int > :: iterator it = find ( norm [ i ] . begin ( ) , norm [ i ] . end ( ) , SPF [ i ] ) ; if ( it != norm [ i ] . end ( ) ) norm [ i ] . erase ( it ) ; //at most 10 unique factors 10!~1e6 else norm [ i ] . push_back ( SPF [ i ] ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/E_73294474.cpp:15:6

void sieve ( ) { SPF [ 2 ] = 0 ; idx = 0 ; for ( int i = 2 ; i <= MAX_N ; ++ i ) { if ( ! SPF [ i ] ) { primes [ idx ++ ] = i ; SPF [ i ] = i ; } for ( int j = 0 ; j < idx && primes [ j ] <= SPF [ i ] && primes [ j ] * i <= MAX_N ; ++ j ) { SPF [ primes [ j ] * i ] = primes [ j ] ; } norm [ i ] = norm [ i / SPF [ i ] ] ; vector < int > :: iterator it = find ( norm [ i ] . begin ( ) , norm [ i ] . end ( ) , SPF [ i ] ) ; if ( it != norm [ i ] . end ( ) ) norm [ i ] . erase ( it ) ; //at most 10 unique factors 10!~1e6 else norm [ i ] . push_back ( SPF [ i ] ) ; } } 


score: 1.0


331: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368218.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ u ] - disc [ v ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ u ] - disc [ v ] + 1 ) ; for ( int i = disc [ v ] ; i <= disc [ u ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 


score: 1.0


332: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:182:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73443081.cpp:181:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 


score: 1.0


333: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/D_73372947.cpp:140:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll u , v , x ; cin >> u >> v ; if ( u > v || ! sameParity ( u , v ) ) fn ( - 1 ) ; if ( ! u && ! v ) fn ( 0 ) ; if ( u == v ) { cout << 1 << '\n' ; fn ( u ) ; } x = ( v - u ) >> 1 ; if ( ( x ^ ( v - x ) ) == u ) { cout << 2 << '\n' ; cout << x << " " << v - x ; } else { cout << 3 << '\n' ; cout << u << " " << ( ( v - u ) >> 1 ) << " " << ( ( v - u ) >> 1 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/D_73373058.cpp:140:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll u , v , x ; cin >> u >> v ; if ( u > v || ! sameParity ( u , v ) ) fn ( - 1 ) ; if ( ! u && ! v ) fn ( 0 ) ; if ( u == v ) { cout << 1 << '\n' ; fn ( u ) ; } x = ( v - u ) >> 1 ; if ( ( x ^ ( v - x ) ) == u ) { cout << 2 << '\n' ; cout << x << " " << v - x ; } else { cout << 3 << '\n' ; cout << u << " " << ( ( v - u ) >> 1 ) << " " << ( ( v - u ) >> 1 ) ; } } 


score: 1.0


334: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423163.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73425159.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 


score: 1.0


335: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423163.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423692.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 


score: 1.0


336: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73425159.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423692.cpp:186:5

int bfs ( int source , int n ) { queue < int > q ; visited . clear ( ) , parent . clear ( ) , dist . clear ( ) ; visited . resize ( n + 5 ) , parent . resize ( n + 5 ) , dist . resize ( n + 5 ) ; visited [ source ] = true ; q . push ( source ) ; parent [ source ] = - 1 ; while ( ! q . empty ( ) ) { auto v = q . front ( ) ; q . pop ( ) ; for ( auto vv : Graph [ v ] ) if ( vv != parent [ v ] || ! visited [ vv ] ) { if ( visited [ vv ] && vv != parent [ v ] ) return dist [ v ] + dist [ vv ] + 1 ; visited [ vv ] = true ; q . push ( vv ) ; parent [ vv ] = v ; dist [ vv ] = dist [ v ] + 1 ; } } return INT_MAX ; } 


score: 1.0


337: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73443081.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73442997.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 


score: 1.0


338: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


339: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


340: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


341: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


342: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


343: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


344: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


345: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


346: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


347: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


348: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


349: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


350: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


351: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


352: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


353: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


354: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


355: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73557226.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


356: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


357: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


358: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


359: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


360: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


361: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


362: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


363: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


364: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


365: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


366: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


367: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


368: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


369: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


370: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558117.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


371: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


372: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


373: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


374: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


375: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


376: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


377: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


378: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


379: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


380: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


381: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


382: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/D_73558273.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


383: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


384: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


385: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


386: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


387: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


388: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


389: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


390: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


391: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


392: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:67:6

void dfs ( vll adj [ ] , ll root , ll par , ll & d , map < pll , ll > & mp , vll & ans ) { for ( auto it : adj [ root ] ) { if ( it != par ) { ll u = root ; ll v = it ; if ( u > v ) swap ( u , v ) ; ll ind = mp [ { u , v } ] ; ans [ ind ] = d ; d -- ; dfs ( adj , it , root , d , mp , ans ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:67:6

void dfs ( vll adj [ ] , ll root , ll par , ll & d , map < pll , ll > & mp , vll & ans ) { for ( auto it : adj [ root ] ) { if ( it != par ) { ll u = root ; ll v = it ; if ( u > v ) swap ( u , v ) ; ll ind = mp [ { u , v } ] ; ans [ ind ] = d ; d ++ ; dfs ( adj , it , root , d , mp , ans ) ; } } } 


score: 1.0


393: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


394: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


395: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


396: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


397: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


398: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/B_73388097.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


399: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:39:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } 


score: 1.0


400: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:44:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } 


score: 1.0


401: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/A_73387976.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:59:4

long long # define ld long double # define pb push_back # define fi first # define se second # define vll vector < ll > # define pll pair < ll , ll > # define vpll vector < pll > # define all ( v ) ( v ) . begin ( ) , ( v ) . end ( ) # define sz ( x ) ( ll ) x . size ( ) # define out ( n ) cout << n << " " # define outl ( n ) cout << n << endl # define bug ( n ) { outl ( n ) ; return ; } # define pii pair < int , int > # define N 200002 # define M 998244353 ll gcd ( ll a , ll b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } ll vpow ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; if ( b == 1 ) return a ; ll temp = vpow ( a , b / 2 , p ) ; temp *= temp ; temp %= p ; if ( b % 2 == 0 ) return temp ; temp = temp * a ; temp %= p ; return temp ; } ll inverseMod ( ll a , ll b , ll p ) { if ( b == 0 ) return 1 ; ll temp = vpow ( b , p - 2 , p ) ; ll ans = temp * a ; ans %= p ; return ans ; } 


score: 1.0


402: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 1.0


403: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 1.0


404: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/made_in_vietnam/D_73269790.cpp:28:13

pair < ll , ll > compute ( ll S , ll X ) { ll A = ( S - X ) / 2 ; ll a = 0 , b = 0 ; for ( ll i = 0 ; i < 8 * sizeof ( S ) ; i ++ ) { ll Xi = ( X & ( 1 << i ) ) ; ll Ai = ( A & ( 1 << i ) ) ; if ( Xi == 0 && Ai == 0 ) { } else if ( Xi == 0 && Ai > 0 ) { a = ( ( 1 << i ) | a ) ; b = ( ( 1 << i ) | b ) ; } else if ( Xi > 0 && Ai == 0 ) { a = ( ( 1 << i ) | a ) ; } else { return mp ( - 1 , - 1 ) ; } } return mp ( a , b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/made_in_vietnam/D_73271016.cpp:28:13

pair < ll , ll > compute ( ll S , ll X ) { ll A = ( S - X ) / 2 ; ll a = 0 , b = 0 ; for ( ll i = 0 ; i < 8 * sizeof ( S ) ; i ++ ) { ll Xi = ( X & ( 1 << i ) ) ; ll Ai = ( A & ( 1 << i ) ) ; if ( Xi == 0 && Ai == 0 ) { } else if ( Xi == 0 && Ai > 0 ) { a = ( ( 1 << i ) | a ) ; b = ( ( 1 << i ) | b ) ; } else if ( Xi > 0 && Ai == 0 ) { a = ( ( 1 << i ) | a ) ; } else { return mp ( - 1 , - 1 ) ; } } return mp ( a , b ) ; } 


score: 1.0


405: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 


score: 1.0


406: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 


score: 1.0


407: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 


score: 1.0


408: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 1.0


409: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 1.0


410: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 1.0


411: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 1.0


412: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 1.0


413: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 1.0


414: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 1.0


415: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 1.0


416: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 1.0


417: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 1.0


418: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahabub.rahman/A_73428017.cpp:55:8

long long int # define ull unsigned long long int # define veci vector < int > # define vecc vector < char > # define vecs vector < string > # define vecl vector < long long int > # define vecp vector < pair < int , int > > # define mapstrint map < string , int > # define mapstrstr map < string , string > # define mapint map < int , int > # define pb push_back # define pob pop_back # define mp make_pair ////============ CONSTANT ===============//// # define mx9 1000000009 # define mx7 10000007 # define mx6 1000006 # define mx5 100005 # define inf 1 << 30 //infinity value # define eps 1e-9 # define mx ( 65540 ) # define mod 1000000007 ////=====================================//// long double PI = acosl ( - 1 ) ; bool compare_int ( int a , int b ) //This function is use for descending order. { return ( a > b ) ; } bool compare_string ( string a , string b ) { return a . size ( ) < b . size ( ) ; } bool compare_pair ( const pair < int , int > & a , const pair < int , int > & b ) { if ( a . second == b . second ) return a . first > b . first ; else return ( a . second > b . second ) ; } ll fact ( ll n ) { if ( n == 0 || n == 1 ) return 1 ; else return n * fact ( n - 1 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahabub.rahman/B_73428268.cpp:55:8

long long int # define ull unsigned long long int # define veci vector < int > # define vecc vector < char > # define vecs vector < string > # define vecl vector < long long int > # define vecp vector < pair < int , int > > # define mapstrint map < string , int > # define mapstrstr map < string , string > # define mapint map < int , int > # define pb push_back # define pob pop_back # define mp make_pair ////============ CONSTANT ===============//// # define mx9 1000000009 # define mx7 10000007 # define mx6 1000006 # define mx5 100005 # define inf 1 << 30 //infinity value # define eps 1e-9 # define mx ( 65540 ) # define mod 1000000007 ////=====================================//// long double PI = acosl ( - 1 ) ; bool compare_int ( int a , int b ) //This function is use for descending order. { return ( a > b ) ; } bool compare_string ( string a , string b ) { return a . size ( ) < b . size ( ) ; } bool compare_pair ( const pair < int , int > & a , const pair < int , int > & b ) { if ( a . second == b . second ) return a . first > b . first ; else return ( a . second > b . second ) ; } ll fact ( ll n ) { if ( n == 0 || n == 1 ) return 1 ; else return n * fact ( n - 1 ) ; } 


score: 1.0


419: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MAD_ROBO/C_73299608.cpp:32:5

int main ( ) { faad_do ; int n , x , y ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> x >> y ; a [ i ] . ff = x ; a [ i ] . ss = y ; v [ x ] . pb ( y ) ; v [ y ] . pb ( x ) ; } DFS ( 1 ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( m [ mp ( a [ i ] . ff , a [ i ] . ss ) ] == 0 ) { cout << k - 1 << endl ; k ++ ; } else cout << m [ mp ( a [ i ] . ff , a [ i ] . ss ) ] - 1 << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MAD_ROBO/C_73299487.cpp:32:5

int main ( ) { faad_do ; int n , x , y ; cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> x >> y ; a [ i ] . ff = x ; a [ i ] . ss = y ; v [ x ] . pb ( y ) ; v [ y ] . pb ( x ) ; } DFS ( 1 ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( m [ mp ( a [ i ] . ff , a [ i ] . ss ) ] == 0 ) { cout << k - 1 << endl ; k ++ ; } else cout << m [ mp ( a [ i ] . ff , a [ i ] . ss ) ] - 1 << endl ; } } 


score: 1.0


420: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/F_73350494.cpp:73:5

int main ( ) { read ( n ) ; read ( m ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { read ( u ) ; read ( v ) ; addedge ( u , v ) ; addedge ( v , u ) ; } sz = ceil ( sqrt ( 1.0 * n ) ) ; dfs ( 1 ) ; puts ( "1" ) ; for ( int i = 1 ; i <= sz ; i ++ ) printf ( "%d " , ans [ i - 1 ] ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/F_73350381.cpp:73:5

int main ( ) { read ( n ) ; read ( m ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { read ( u ) ; read ( v ) ; addedge ( u , v ) ; addedge ( v , u ) ; } sz = ceil ( sqrt ( 1.0 * n ) ) ; dfs ( 1 ) ; puts ( "1" ) ; for ( int i = 1 ; i <= sz ; i ++ ) printf ( "%d " , ans [ i - 1 ] ) ; return 0 ; } 


score: 1.0


421: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/C_73246013.cpp:55:5

int main ( ) { read ( n ) ; for ( int i = 1 , u , v ; i < n ; i ++ ) { read ( u ) ; read ( v ) ; e [ i ] . u = u ; e [ i ] . v = v ; e [ i ] . id = i ; in [ u ] ++ ; in [ v ] ++ ; } for ( int i = 1 ; i < n ; i ++ ) e [ i ] . ret = min ( in [ e [ i ] . u ] , in [ e [ i ] . v ] ) ; sort ( e + 1 , e + n , cmp ) ; for ( int i = 1 ; i < n ; i ++ ) e [ i ] . ans = i ; sort ( e + 1 , e + n , cmp1 ) ; for ( int i = 1 ; i < n ; i ++ ) printf ( "%d\n" , e [ i ] . ans - 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/C_73306397.cpp:55:5

int main ( ) { read ( n ) ; for ( int i = 1 , u , v ; i < n ; i ++ ) { read ( u ) ; read ( v ) ; e [ i ] . u = u ; e [ i ] . v = v ; e [ i ] . id = i ; in [ u ] ++ ; in [ v ] ++ ; } for ( int i = 1 ; i < n ; i ++ ) e [ i ] . ret = min ( in [ e [ i ] . u ] , in [ e [ i ] . v ] ) ; sort ( e + 1 , e + n , cmp ) ; for ( int i = 1 ; i < n ; i ++ ) e [ i ] . ans = i ; sort ( e + 1 , e + n , cmp1 ) ; for ( int i = 1 ; i < n ; i ++ ) printf ( "%d\n" , e [ i ] . ans - 1 ) ; return 0 ; } 


score: 1.0


422: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 1.0


423: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


424: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


425: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


426: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 


score: 1.0


427: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 


score: 1.0


428: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 1.0


429: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


430: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


431: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 


score: 1.0


432: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:55:13

inline void BFS ( int s ) { queue < pair < int , int > > q ; vector < int > d ( 1e6 , - 1 ) ; d [ s ] = 0 ; q . push ( make_pair ( s , - 1 ) ) ; while ( ! q . empty ( ) ) { pair < int , int > p = q . front ( ) ; q . pop ( ) ; int u = p . first , fa = p . second ; for ( int i = 0 ; i < G [ u ] . size ( ) ; i ++ ) { int v = G [ u ] [ i ] ; if ( d [ v ] == - 1 ) { d [ v ] = d [ u ] + 1 ; q . push ( make_pair ( v , u ) ) ; } else if ( v != fa ) ans = min ( ans , d [ u ] + d [ v ] + 1 ) ; } } } 


score: 1.0


433: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9975845410628019


434: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9974747474747475


435: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9974424552429667


436: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9971428571428571


437: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315946.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315753.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ 0 ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9969512195121951


438: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322380.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321952.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9964285714285714


439: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9957983193277311


440: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9957983193277311


441: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9951456310679612


442: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9951456310679612


443: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272997.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 400 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272893.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 500 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


444: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272997.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 400 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272686.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 800 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


445: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272997.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 400 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272353.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 6000 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


446: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272893.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 500 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272686.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 800 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


447: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272893.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 500 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272353.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 6000 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


448: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272686.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 800 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272353.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 6000 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.9949748743718593


449: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9949748743718593


450: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9949238578680203


451: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9949238578680203


452: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9949238578680203


453: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9949238578680203


454: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9949109414758269


455: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9948717948717949


456: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9948717948717949


457: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73369849.cpp:28:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , discTime - nxt . first + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370313.cpp:27:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; // cout << curr.first << ' ' << curr.second << endl; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , discTime - nxt . first + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] + 1 ) ; } } 


score: 0.9946808510638298


458: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558298.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MAX ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558126.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MIN ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 


score: 0.994475138121547


459: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558170.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MAX ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/E_73558126.cpp:46:5

int main ( ) { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) { divfj ( a [ i ] , i ) ; } for ( int i = 1 ; i <= n ; i ++ ) { map < int , int > ma ; for ( auto j : dv [ i ] ) ma [ j ] ++ ; for ( auto & j : ma ) j . SE %= 2 ; dv [ i ] . clear ( ) ; for ( auto j : ma ) { if ( j . SE ) dv [ i ] . push_back ( j . FI ) ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 0 ) { puts ( "1" ) ; return 0 ; } } set < vector < int > > st ; for ( int i = 1 ; i <= n ; i ++ ) { if ( st . find ( dv [ i ] ) != st . end ( ) ) return puts ( "2" ) , 0 ; st . insert ( dv [ i ] ) ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( SZ ( dv [ i ] ) == 1 ) { g [ dv [ i ] [ 0 ] ] . push_back ( 1 ) ; g [ 1 ] . push_back ( dv [ i ] [ 0 ] ) ; } if ( SZ ( dv [ i ] ) == 2 ) { g [ dv [ i ] [ 1 ] ] . push_back ( dv [ i ] [ 0 ] ) ; g [ dv [ i ] [ 0 ] ] . push_back ( dv [ i ] [ 1 ] ) ; } } int ans = INT_MAX ; for ( int i = 1 ; i <= 1e3 ; i ++ ) { ans = min ( ans , bfs ( i ) ) ; } if ( ans == INT_MIN ) puts ( "-1" ) ; else cout << ans << '\n' ; return 0 ; } 


score: 0.994475138121547


460: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << ' '; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } //cout << "\n"; f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.994413407821229


461: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283548.cpp:116:5

int main ( ) { cin >> xr >> add ; if ( xr == 0 && add == 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == add ) { cout << 1 << endl ; cout << add << endl ; return 0 ; } if ( solve ( ) ) return 0 ; carry = false ; arr [ 1 ] = arr [ 2 ] = arr [ 3 ] = 0 ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { ret ( - 1 ) ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1 << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { ret ( - 1 ) ; } ll x = 0 ; ll y = 0 ; fore ( i , 1 , 3 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) ret ( - 1 ) ; cout << 3 << endl ; fore ( i , 1 , 3 ) { cout << arr [ i ] << " " ; } sout ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73283635.cpp:116:5

int main ( ) { cin >> xr >> add ; if ( xr == 0 && add == 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == add ) { cout << 1 << endl ; cout << add << endl ; return 0 ; } if ( solve ( ) ) return 0 ; carry = false ; arr [ 1 ] = arr [ 2 ] = arr [ 3 ] = 0 ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { ret ( - 1 ) ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { ret ( - 1 ) ; } ll x = 0 ; ll y = 0 ; fore ( i , 1 , 3 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) ret ( - 1 ) ; cout << 3 << endl ; fore ( i , 1 , 3 ) { cout << arr [ i ] << " " ; } sout ; } 


score: 0.9941860465116279


462: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9939759036144579


463: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9939759036144579


464: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9936305732484076


465: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788576.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788292.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n + 1 ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 


score: 0.9933333333333333


466: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 10 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 100 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.993006993006993


467: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:59:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 10 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; random_shuffle ( id + 1 , id + n + 1 ) ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int i = 1 ; i <= 100 ; ++ i ) { memset ( vis + 1 , 0 , n << 2 ) ; fa [ id [ i ] ] = 0 ; dep [ id [ i ] ] = 1 ; dfs ( id [ i ] ) ; } for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.993006993006993


468: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321952.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321424.cpp:18:5

int main ( ) { return 0 ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9929078014184397


469: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; nw = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { nq [ ++ nw ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( nw > cnt ) { cnt = nw ; for ( int i = 1 ; i <= nw ; ++ i ) q [ i ] = nq [ i ] ; } } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d%c" , q [ i ] , " \n" [ i == V ] ) ; return 0 ; } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 300 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; nw = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { nq [ ++ nw ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( nw > cnt ) { cnt = nw ; for ( int i = 1 ; i <= nw ; ++ i ) q [ i ] = nq [ i ] ; } } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d%c" , q [ i ] , " \n" [ i == V ] ) ; return 0 ; } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 


score: 0.9928571428571429


470: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341535.cpp:35:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= n ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341603.cpp:35:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= 1000 ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 


score: 0.9928057553956835


471: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg + 1 >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9915966386554622


472: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9915966386554622


473: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg + 1 >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9915966386554622


474: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9914772727272727


475: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.991304347826087


476: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.991304347826087


477: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.991304347826087


478: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.991304347826087


479: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424348.cpp:6:6

void dfs ( int q , int w ) { bo [ q ] = 1 ; dep [ q ] = dep [ w ] + 1 ; pai ++ ; pa [ pai ] = q ; l [ q ] = pai ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( bo [ ( * it ) ] == 1 ) { if ( dep [ q ] - dep [ ( * it ) ] + 1 >= sq ) { cout << 2 << endl ; cout << l [ q ] - l [ ( * it ) ] + 1 << endl ; for ( i = l [ ( * it ) ] ; i <= l [ q ] ; i ++ ) { cout << pa [ i ] << " " ; } exit ( 0 ) ; } if ( ka [ ( * it ) ] == 1 ) ka [ q ] = 1 ; } } if ( ka [ q ] == 1 ) { ka [ q ] = 0 ; } else { ka [ q ] = 1 ; pi ++ ; p [ pi ] = q ; } for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( bo [ ( * it ) ] == 1 ) continue ; dfs ( ( * it ) , q ) ; } pai -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/F_73424231.cpp:6:6

void dfs ( int q , int w ) { bo [ q ] = 1 ; dep [ q ] = dep [ w ] + 1 ; pai ++ ; pa [ pai ] = q ; l [ q ] = pai ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( bo [ ( * it ) ] == 1 ) { if ( dep [ q ] - dep [ ( * it ) ] + 1 >= sq ) { cout << 2 << endl ; cout << l [ q ] - l [ ( * it ) ] + 1 << endl ; for ( i = l [ ( * it ) ] ; i <= l [ q ] ; i ++ ) { cout << pa [ i ] << " " ; } exit ( 0 ) ; } if ( ka [ ( * it ) ] == 1 ) ka [ q ] = 1 ; } } if ( ka [ q ] == 1 ) { ka [ q ] = 0 ; } else { ka [ q ] = 1 ; pi ++ ; p [ pi ] = q ; } for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( bo [ ( * it ) ] == 1 ) continue ; dfs ( ( * it ) , q ) ; } } 


score: 0.9911504424778761


480: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahfuzz/C_73875620.cpp:16:5

int main ( int argc , char * argv [ ] ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; int curr = 0 ; memset ( ans , - 1 , sizeof ans ) ; int n ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { int u , v ; cin >> u >> v ; u -- ; v -- ; vec [ u ] . push_back ( i ) ; vec [ v ] . push_back ( i ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( vec [ i ] . size ( ) > 2 ) { ans [ vec [ i ] [ 0 ] ] = 0 ; ans [ vec [ i ] [ 1 ] ] = 1 ; ans [ vec [ i ] [ 2 ] ] = 2 ; curr = 3 ; break ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( ans [ i ] == - 1 ) { ans [ i ] = curr ; curr ++ ; } } for ( int i = 1 ; i < n ; i ++ ) { cout << ans [ i ] << "\n" ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahfuzz/C_73874650.cpp:16:5

int main ( int argc , char * argv [ ] ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; int curr = 0 ; memset ( ans , - 1 , sizeof ans ) ; int n ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { int u , v ; cin >> u >> v ; u -- ; v -- ; vec [ u ] . push_back ( i ) ; vec [ v ] . push_back ( i ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( vec [ i ] . size ( ) > 2 ) { ans [ vec [ i ] [ 0 ] ] = 0 ; ans [ vec [ i ] [ 1 ] ] = 1 ; ans [ vec [ i ] [ 2 ] ] = 2 ; curr = 3 ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( ans [ i ] == - 1 ) { ans [ i ] = curr ; curr ++ ; } } for ( int i = 1 ; i < n ; i ++ ) { cout << ans [ i ] << "\n" ; } return 0 ; } 


score: 0.9904761904761905


481: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73634031.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u == v ) { cout << 1 << "\n" << u ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1 << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73658767.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u == v ) { cout << 1 << "\n" << u ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1LL << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 


score: 0.9903846153846154


482: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594097.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n - 1 , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594202.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 


score: 0.9900990099009901


483: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594410.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n + 1 , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madsanker/C_73594202.cpp:17:5

int main ( ) { int n ; cin >> n ; nbcnt . assign ( n , 0 ) ; int pivot = - 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int from , to ; cin >> from >> to ; nbcnt [ from ] ++ ; nbcnt [ to ] ++ ; edges . push_back ( make_pair ( from , to ) ) ; if ( nbcnt [ from ] > 2 ) pivot = from ; if ( nbcnt [ to ] > 2 ) pivot = to ; } if ( pivot == - 1 ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << i << endl ; } return 0 ; } int on = 0 ; int other = 3 ; for ( int i = 0 ; i < edges . size ( ) ; i ++ ) { if ( ( edges [ i ] . first == pivot or edges [ i ] . second == pivot ) and on < 3 ) cout << on ++ << endl ; else cout << other ++ << endl ; } return 0 ; } 


score: 0.9900990099009901


484: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.989821882951654


485: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.989821882951654


486: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322380.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321424.cpp:18:5

int main ( ) { return 0 ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9893617021276596


487: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73369788.cpp:28:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , nxt . first - curr . second + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73369849.cpp:28:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , discTime - nxt . first + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] ) ; } } 


score: 0.9893617021276596


488: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73369788.cpp:28:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , nxt . first - curr . second + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370313.cpp:27:5

int main ( ) { cin >> n >> m ; sq = 1 ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < n ; ++ i ) { deg [ i ] = del [ i ] = disc [ i ] = 0 ; } int u , v ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; deg [ u ] ++ ; deg [ v ] ++ ; } for ( int i = 0 ; i < n ; ++ i ) { s . insert ( { deg [ i ] , i } ) ; } vector < int > ans ; while ( ! s . empty ( ) ) { ii curr = * s . begin ( ) ; s . erase ( s . begin ( ) ) ; // cout << curr.first << ' ' << curr.second << endl; if ( curr . first + 1 >= sq ) { printf ( "2\n" ) ; disc [ curr . second ] = discTime = 1 ; st [ 0 ] = curr . second ; ii nxt = make_pair ( MAX_N + 100 , 0 ) ; while ( 1 ) { nxt = make_pair ( MAX_N + 100 , 0 ) ; for ( int v : g [ st [ discTime - 1 ] ] ) { if ( ! del [ v ] ) nxt = min ( nxt , { disc [ v ] , v } ) ; } // cout << nxt.first << ' ' << nxt.second << endl; if ( nxt . first ) { printf ( "%d\n" , discTime - nxt . first + 1 ) ; for ( int i = nxt . first - 1 ; i < discTime ; ++ i ) { printf ( "%d " , st [ i ] + 1 ) ; } puts ( "" ) ; return 0 ; } st [ discTime ++ ] = nxt . second ; disc [ nxt . second ] = discTime ; } } ans . push_back ( curr . second ) ; remove ( curr . second ) ; for ( int v : g [ curr . second ] ) remove ( v ) ; } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; ++ i ) { printf ( "%d " , ans [ i ] + 1 ) ; } } 


score: 0.9893617021276596


489: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Luzivanlt/D_73293935.cpp:44:6

bool find_result ( ) { for ( int i = 1 ; i <= 64 ; i ++ ) if ( bits_sums [ i ] ) { if ( bits_xor [ i ] ) bit_count [ i ] ++ ; else bit_count [ i - 1 ] += 2 ; } for ( int i = 64 ; i >= 1 ; i -- ) if ( bits_xor [ i ] && ! ( bit_count [ i ] % 2 ) ) { int two = 0 ; for ( int j = i ; j <= 64 ; j ++ ) if ( bit_count [ j ] >= 2 ) { two = j ; break ; } for ( ; two > i ; two -- ) { bit_count [ two ] -= 2 ; bit_count [ two - 1 ] += 4 ; } bit_count [ i ] -- , bit_count [ i - 1 ] += 2 ; } for ( int i = 1 ; i <= 64 ; i ++ ) if ( bit_count [ i ] ) { bit_row [ ++ mem ] = II ( bit_count [ i ] , i ) ; first_num ^= ( long long ) 1 << ( i - 1 ) ; } return true ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Luzivanlt/D_73293877.cpp:44:6

bool find_result ( ) { for ( int i = 1 ; i <= 64 ; i ++ ) if ( bits_sums [ i ] ) { if ( bits_xor [ i ] ) bit_count [ i ] ++ ; else bit_count [ i - 1 ] += 2 ; } for ( int i = 64 ; i >= 1 ; i -- ) if ( bits_xor [ i ] && ! ( bits_xor [ i ] % 2 ) ) { int two = 0 ; for ( int j = i ; j <= 64 ; j ++ ) if ( bit_count [ j ] >= 2 ) { two = j ; break ; } for ( ; two > i ; two -- ) { bit_count [ two ] -= 2 ; bit_count [ two - 1 ] += 4 ; } bit_count [ i ] -- , bit_count [ i - 1 ] += 2 ; } for ( int i = 1 ; i <= 64 ; i ++ ) if ( bit_count [ i ] ) { bit_row [ ++ mem ] = II ( bit_count [ i ] , i ) ; first_num ^= ( long long ) 1 << ( i - 1 ) ; } return true ; } 


score: 0.989247311827957


490: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301335.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = up - 1 ; for ( int i = 1 ; i <= m ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73300750.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = up - 1 ; for ( int i = 1 ; i <= n ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 


score: 0.9891304347826086


491: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289775.cpp:116:5

int main ( ) { cin >> xr >> add ; if ( xr == 0 && add == 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == add ) { cout << 1 << endl ; cout << add << endl ; return 0 ; } if ( solve ( ) ) return 0 ; if ( xr < add && ( add - xr ) % 2 == 0 ) { cout << 3 << endl ; ll s = ( add - xr ) / 2 ; cout << xr << " " << s << " " << s << endl ; return 0 ; } carry = false ; arr [ 1 ] = arr [ 2 ] = arr [ 3 ] = 0 ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { if ( i == 0 ) ret ( - 1 ) ; if ( ( xr & ( 1ll << ( i - 1 ) ) ) && ! ( add & ( 1ll << ( i - 1 ) ) ) ) { arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; continue ; } if ( ( xr & ( 1ll << ( i - 1 ) ) ) && ( add & ( 1ll << ( i - 1 ) ) ) ) { arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; continue ; } TRACE ( i _ ( xr & ( 1ll << ( i - 1 ) ) ) _ ( add & ( 1ll << ( i - 1 ) ) ) _ carry ) ; ret ( - 1 ) ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { ret ( - 1 ) ; } ll x = 0 ; ll y = 0 ; fore ( i , 1 , 3 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) ret ( - 1 ) ; cout << 3 << endl ; fore ( i , 1 , 3 ) { cout << arr [ i ] << " " ; } sout ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m.mahdi2414/D_73289795.cpp:116:5

int main ( ) { cin >> xr >> add ; if ( xr == 0 && add == 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == add ) { cout << 1 << endl ; cout << add << endl ; return 0 ; } if ( solve ( ) ) return 0 ; if ( xr < add && ( add - xr ) % 2 == 0 ) { cout << 3 << endl ; ll s = ( add - xr ) / 2 ; cout << xr << " " << s << " " << s << endl ; return 0 ; } else ret ( - 1 ) ; carry = false ; arr [ 1 ] = arr [ 2 ] = arr [ 3 ] = 0 ; fore ( i , 0 , 62 ) { if ( ( xr & ( 1ll << i ) ) && ( add & ( 1ll << i ) ) ) { if ( carry ) { if ( i == 0 ) ret ( - 1 ) ; if ( ( xr & ( 1ll << ( i - 1 ) ) ) && ! ( add & ( 1ll << ( i - 1 ) ) ) ) { arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; continue ; } if ( ( xr & ( 1ll << ( i - 1 ) ) ) && ( add & ( 1ll << ( i - 1 ) ) ) ) { arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; continue ; } TRACE ( i _ ( xr & ( 1ll << ( i - 1 ) ) ) _ ( add & ( 1ll << ( i - 1 ) ) ) _ carry ) ; ret ( - 1 ) ; } else { arr [ 1 ] |= ( 1ll << i ) ; } } else if ( xr & ( 1ll << i ) ) { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 1 ] |= ( 1ll << i ) ; carry = true ; } } else if ( add & ( 1ll << i ) ) { if ( carry ) { carry = false ; continue ; } else { if ( i == 0 ) ret ( - 1 ) ; arr [ 2 ] |= ( 1ll << ( i - 1 ) ) ; arr [ 3 ] |= ( 1ll << ( i - 1 ) ) ; carry = false ; } } else { if ( carry ) { arr [ 1 ] |= ( 1ll << i ) ; arr [ 2 ] |= ( 1ll << i ) ; } else { continue ; } } } if ( carry ) { ret ( - 1 ) ; } ll x = 0 ; ll y = 0 ; fore ( i , 1 , 3 ) { x += arr [ i ] ; y ^= arr [ i ] ; } if ( x != add || xr != y ) ret ( - 1 ) ; cout << 3 << endl ; fore ( i , 1 , 3 ) { cout << arr [ i ] << " " ; } sout ; } 


score: 0.9888059701492538


492: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73298600.cpp:41:6

void solve ( ) { init ( ) ; //cout << pc << endl; for ( int i = 0 ; i < 200 * 200 ; ++ i ) val [ 0 ] [ i ] = inf ; cin >> n ; int ans = INT_MAX ; for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; if ( sqrt ( a [ i ] ) * sqrt ( a [ i ] ) == a [ i ] ) ans = 1 ; } if ( ans == 1 ) { cout << ans << endl ; return ; } sort ( a , a + n ) ; for ( int i = 1 ; i < n ; ++ i ) if ( a [ i ] == a [ i - 1 ] ) { ans = 2 ; break ; } if ( ans == 2 ) { cout << ans << endl ; return ; } for ( int i = 0 ; i < n ; ++ i ) { int t = a [ i ] ; for ( int j = 0 ; j < pc && prime [ j ] * prime [ j ] <= t ; ++ j ) { if ( t % prime [ j ] == 0 ) { int x = prime [ j ] , y = t / prime [ j ] ; s2 . insert ( { x , y } ) ; if ( ! mmp . count ( x ) ) mmp [ x ] = ++ mpc ; if ( ! mmp . count ( y ) ) mmp [ y ] = ++ mpc ; val [ mmp [ x ] ] [ mmp [ y ] ] = 1 ; val [ mmp [ y ] ] [ mmp [ x ] ] = 1 ; t = 0 ; break ; } } if ( t ) { ss . insert ( t ) ; } } for ( auto it : s2 ) { if ( ss . count ( it . first ) && ss . count ( it . second ) ) ans = 3 ; } if ( ans == 3 ) { cout << ans << endl ; return ; } cout << floyd ( mpc ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73305054.cpp:41:6

void solve ( ) { init ( ) ; //cout << pc << endl; for ( int i = 0 ; i < 200 * 200 ; ++ i ) val [ 0 ] [ i ] = inf ; cin >> n ; int ans = INT_MAX ; for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) == a [ i ] ) ans = 1 ; } if ( ans == 1 ) { cout << ans << endl ; return ; } sort ( a , a + n ) ; for ( int i = 1 ; i < n ; ++ i ) if ( a [ i ] == a [ i - 1 ] ) { ans = 2 ; break ; } if ( ans == 2 ) { cout << ans << endl ; return ; } for ( int i = 0 ; i < n ; ++ i ) { int t = a [ i ] ; for ( int j = 0 ; j < pc && prime [ j ] * prime [ j ] <= t ; ++ j ) { if ( t % prime [ j ] == 0 ) { int x = prime [ j ] , y = t / prime [ j ] ; s2 . insert ( { x , y } ) ; if ( ! mmp . count ( x ) ) mmp [ x ] = ++ mpc ; if ( ! mmp . count ( y ) ) mmp [ y ] = ++ mpc ; val [ mmp [ x ] ] [ mmp [ y ] ] = 1 ; val [ mmp [ y ] ] [ mmp [ x ] ] = 1 ; t = 0 ; break ; } } if ( t ) { ss . insert ( t ) ; } } for ( auto it : s2 ) { if ( ss . count ( it . first ) && ss . count ( it . second ) ) ans = 3 ; } if ( ans == 3 ) { cout << ans << endl ; return ; } cout << floyd ( mpc ) << endl ; } 


score: 0.9887005649717514


493: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9886363636363636


494: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73307708.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } if ( n == 2 ) { cout << "1" << endl ; return 0 ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73308207.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } if ( n == 2 ) { cout << "0" << endl ; return 0 ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 


score: 0.9880952380952381


495: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73425159.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( ( ll ) v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( ( ll ) v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i * i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i * i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423692.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i * i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i * i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 


score: 0.9880239520958084


496: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423163.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423692.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i * i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i * i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 


score: 0.9878787878787879


497: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9876543209876543


498: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9876543209876543


499: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9876543209876543


500: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahinr10/D_73272016.cpp:64:5

int main ( ) { # ifdef home freopen ( "input.txt" , "r" , stdin ) ; //freopen("output.txt", "r",stdin); # endif // home ios :: sync_with_stdio ( false ) ; cin . tie ( nullptr ) ; ll u , v ; while ( cin >> u >> v ) { //   u = 1e18; //   v = u + 4; vector < ll > ans ; if ( v >= u ) { int mask [ 1000 ] ; for ( int i = 62 ; i >= 0 ; i -- ) { if ( ( v & ( 1LL << i ) ) ) { mask [ i ] = 1 ; } else { mask [ i ] = 0 ; } } //   dbgA(mask, 10) bool got = true ; for ( int i = 62 ; i >= 0 ; i -- ) { if ( mask [ i ] % 2 == 1 && ( u & ( 1LL << i ) ) ) { } else if ( mask [ i ] & 1 ) { //  dbg(i) if ( i == 0 ) { got = false ; break ; } mask [ i - 1 ] += 2 ; mask [ i ] -- ; } else if ( ( u & ( 1LL << i ) ) ) { if ( i == 0 ) { got = false ; break ; } if ( mask [ i ] == 0 ) { got = false ; } else { mask [ i ] -- ; mask [ i - 1 ] += 2 ; } } //     dbgA(mask, 10) } //        for(int i = 62; i >= 0; i--){ //            if((u & (1LL << i))){ //                mask[i]++; //            } // //        } if ( ! got ) { cout << "-1" << endl ; continue ; } ans . clear ( ) ; while ( true ) { ll x = 0 ; for ( int i = 62 ; i >= 0 ; i -- ) { if ( mask [ i ] ) { mask [ i ] -- ; x |= ( 1LL << i ) ; } } if ( x == 0 ) { break ; } ans . push_back ( x ) ; } cout << ans . size ( ) << endl ; forn ( i , ans . size ( ) ) { cout << ans [ i ] << " " ; } cout << endl ; } else { cout << "-1" << endl ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahinr10/D_73272335.cpp:64:5

int main ( ) { # ifdef home freopen ( "input.txt" , "r" , stdin ) ; //freopen("output.txt", "r",stdin); # endif // home ios :: sync_with_stdio ( false ) ; cin . tie ( nullptr ) ; ll u , v ; while ( cin >> u >> v ) { //   u = 1e18; //   v = u + 4; vector < ll > ans ; if ( v >= u ) { int mask [ 1000 ] ; for ( int i = 63 ; i >= 0 ; i -- ) { if ( ( v & ( 1LL << i ) ) ) { mask [ i ] = 1 ; } else { mask [ i ] = 0 ; } } //   dbgA(mask, 10) bool got = true ; for ( int i = 63 ; i >= 0 ; i -- ) { if ( mask [ i ] % 2 == 1 && ( u & ( 1LL << i ) ) ) { } else if ( mask [ i ] & 1 ) { //  dbg(i) if ( i == 0 ) { got = false ; break ; } mask [ i - 1 ] += 2 ; mask [ i ] -- ; } else if ( ( u & ( 1LL << i ) ) ) { if ( i == 0 ) { got = false ; break ; } if ( mask [ i ] == 0 ) { got = false ; } else { mask [ i ] -- ; mask [ i - 1 ] += 2 ; } } //     dbgA(mask, 10) } //        for(int i = 62; i >= 0; i--){ //            if((u & (1LL << i))){ //                mask[i]++; //            } // //        } if ( ! got ) { cout << "-1" << endl ; continue ; } ans . clear ( ) ; while ( true ) { ll x = 0 ; for ( int i = 62 ; i >= 0 ; i -- ) { if ( mask [ i ] ) { mask [ i ] -- ; x |= ( 1LL << i ) ; } } if ( x == 0 ) { break ; } ans . push_back ( x ) ; } cout << ans . size ( ) << endl ; forn ( i , ans . size ( ) ) { cout << ans [ i ] << " " ; } cout << endl ; } else { cout << "-1" << endl ; } } } 


score: 0.9875776397515528


501: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9875


502: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9875


503: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9873737373737373


504: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:49:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/E_73462344.cpp:48:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 


score: 0.9873417721518988


505: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73462411.cpp:48:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = Next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/E_73462344.cpp:48:6

void Bfs ( int s ) { memset ( p , 0 , sizeof ( p ) ) ; p [ s ] = - 1 ; memset ( sum , 0 , sizeof ( sum ) ) ; sum [ s ] = 1 ; queue < int > q ; q . push ( s ) ; while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop ( ) ; for ( int i = head [ u ] ; i != - 1 ; i = next [ i ] ) { int v = edges [ i ] . to ; if ( p [ u ] == ( i ^ 1 ) ) continue ; if ( sum [ v ] ) { ans = min ( ans , sum [ v ] + sum [ u ] - 1 ) ; } else { q . push ( v ) ; p [ v ] = i ; sum [ v ] = sum [ u ] + 1 ; } } } } 


score: 0.9873417721518988


506: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9873417721518988


507: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9873417721518988


508: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9872773536895675


509: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 0.9868421052631579


510: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:182:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73442997.cpp:181:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 


score: 0.9868421052631579


511: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73443081.cpp:181:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73442997.cpp:181:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , m , v1 , v2 ; cin >> n >> m ; Graph . resize ( n + 5 ) ; visited . resize ( n + 5 ) ; exists . resize ( n + 5 ) ; tdepth . resize ( n + 5 ) ; parent . resize ( n + 5 ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; } parent [ 1 ] = - 1 ; dfs1 ( 1 , 0 ) ; visited . clear ( ) ; visited . resize ( n + 5 ) ; cout << 1 << '\n' ; dfs2 ( 1 , false ) ; } 


score: 0.9868421052631579


512: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73414193.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 


score: 0.9866666666666667


513: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413399.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v ^ u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 


score: 0.9866666666666667


514: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.9861111111111112


515: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.9861111111111112


516: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.9861111111111112


517: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.9861111111111112


518: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


519: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


520: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


521: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


522: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


523: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


524: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


525: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


526: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


527: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


528: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


529: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


530: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


531: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


532: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


533: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9855072463768116


534: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315985.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315946.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.984984984984985


535: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9848484848484849


536: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368218.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 


score: 0.9848484848484849


537: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ u ] - disc [ v ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ u ] - disc [ v ] + 1 ) ; for ( int i = disc [ v ] ; i <= disc [ u ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 


score: 0.9848484848484849


538: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368218.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368503.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 


score: 0.9848484848484849


539: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ u ] - disc [ v ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ u ] - disc [ v ] + 1 ) ; for ( int i = disc [ v ] ; i <= disc [ u ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } -- discTime ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368503.cpp:11:6

void dfs ( int u ) { st [ discTime ] = u ; disc [ u ] = discTime ++ ; for ( int v : g [ u ] ) { if ( disc [ v ] == - 1 ) dfs ( v ) ; else if ( disc [ v ] - disc [ u ] + 1 >= sq ) { //sq>=3 since n >=5 => u is not v's parent printf ( "2\n%d\n" , disc [ v ] - disc [ u ] + 1 ) ; for ( int i = disc [ u ] ; i <= disc [ v ] ; ++ i ) printf ( "%d " , st [ i ] + 1 ) ; puts ( "" ) ; exit ( 0 ) ; } } if ( ! marked [ u ] ) { for ( int v : g [ u ] ) marked [ v ] = 1 ; } // --discTime; } 


score: 0.9848484848484849


540: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9847328244274809


541: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9847328244274809


542: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


543: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


544: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


545: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


546: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


547: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9846153846153847


548: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 


score: 0.9841269841269841


549: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9841269841269841


550: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9841269841269841


551: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9841269841269841


552: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 0.9841269841269841


553: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 0.9841269841269841


554: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 0.9841269841269841


555: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; if ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:40:13

inline void work ( int x ) { if ( x == 1 ) { puts ( "1" ) ; exit ( 0 ) ; } vector < int > v ; v . clear ( ) ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { int ret = 0 ; while ( x % i == 0 ) x /= i , ret ++ ; if ( ret & 1 ) v . push_back ( i ) ; } } if ( x != 1 ) v . push_back ( x ) ; while ( v . size ( ) < 2 ) v . push_back ( 1 ) ; addedge ( v [ 0 ] , v [ 1 ] ) ; } 


score: 0.9841269841269841


556: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 


score: 0.9838709677419355


557: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/maithinh/B_73295006.cpp:4:5

int main ( ) { //freopen("main.inp","r",stdin); //freopen("main.out","w",stdout); ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( ) ; cout . tie ( ) ; cin >> t ; for ( int k = 1 ; k <= t ; k ++ ) { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + 1 + n ) ; long sl = 1 ; long kq = 1 ; for ( i = 2 ; i <= n ; i ++ ) if ( a [ i ] != a [ i - 1 ] ) { sl ++ ; kq = max ( kq , sl ) ; } cout << kq << '\n' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/maithinh/B_73294923.cpp:4:5

int main ( ) { //freopen("main.inp","r",stdin); //freopen("main.out","w",stdout); ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( ) ; cout . tie ( ) ; cin >> t ; for ( int k = 1 ; k <= t ; k ++ ) { cin >> n ; for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ; sort ( a + 1 , a + 1 + n ) ; long sl = 1 ; long kq = 0 ; for ( i = 2 ; i <= n ; i ++ ) if ( a [ i ] != a [ i - 1 ] ) { sl ++ ; kq = max ( kq , sl ) ; } cout << kq << '\n' ; } } 


score: 0.9836065573770492


558: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9831932773109243


559: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9831932773109243


560: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9831932773109243


561: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9831932773109243


562: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293136.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292945.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


563: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293136.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292857.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


564: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293136.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292665.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || u ^ v ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


565: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292945.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293187.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


566: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292857.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || ! ( u ^ v ) ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293187.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


567: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73292665.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u > v || u ^ v ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loongnight/D_73293187.cpp:7:5

int main ( ) { //cin.tie(0),cout.tie(0),ios::sync_with_stdio(0); cin >> u >> v ; if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u > v || ( ( u & 1 ) ^ ( v & 1 ) ) ) { cout << - 1 ; return 0 ; } v -= u ; do { if ( u & 1 ) a [ x ] = 1 ; x ++ ; } while ( u >>= 1 ) ; do { if ( v & 1 ) b [ y ] = 1 ; y ++ ; } while ( v >>= 1 ) ; for ( int i = 1 ; i < y ; i ++ ) b [ i - 1 ] = b [ i ] ; b [ -- y ] = 0 , m = max ( x , y ) ; for ( int i = 0 ; i < m ; i ++ ) ans = max ( ( res [ i ] = ( ( b [ i ] << 1 ) + a [ i ] ) ) , ans ) ; cout << ans << '\n' ; for ( int i = 0 ; i < ans ; i ++ ) { result = 0 , tmp = 1 ; for ( int j = 0 ; j < m ; j ++ ) result += ( res [ j ] - i > 0 ? tmp : 0 ) , tmp <<= 1 ; cout << result << ' ' ; } } 


score: 0.9830508474576272


568: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9821882951653944


569: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315985.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315753.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ 0 ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9819819819819819


570: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9818181818181818


571: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9818181818181818


572: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449921.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449367.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; return 0 ; } 


score: 0.9818181818181818


573: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/macro_mallo/C_73313679.cpp:45:5

int main ( ) { int n , i ; cin >> n ; int u , v ; int vertex [ n + 1 ] , store = - 1 ; int arr [ n ] [ 2 ] ; for ( i = 1 ; i <= n ; i ++ ) vertex [ i ] = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) { cin >> u >> v ; arr [ i ] [ 0 ] = u ; arr [ i ] [ 1 ] = v ; vertex [ u ] ++ ; vertex [ v ] ++ ; if ( vertex [ u ] >= 3 ) store = u ; if ( vertex [ v ] >= 3 ) store = v ; } if ( store == - 1 ) { for ( i = 0 ; i < n - 1 ; i ++ ) cout << i << endl ; } else { int count1 = 0 , count2 = vertex [ store ] ; for ( i = 0 ; i < n - 1 ; i ++ ) { if ( arr [ i ] [ 0 ] == store || arr [ i ] [ 1 ] == store ) { cout << count1 << endl ; count1 ++ ; } else { cout << count2 << endl ; count2 ++ ; } } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/macro_mallo/C_73300706.cpp:45:5

int main ( ) { int n , i ; cin >> n ; int u , v ; int vertex [ n + 1 ] , store = - 1 ; int arr [ n ] [ 2 ] ; for ( i = 1 ; i <= n ; i ++ ) vertex [ i ] = 0 ; for ( i = 0 ; i < n - 1 ; i ++ ) { cin >> u >> v ; arr [ i ] [ 0 ] = u ; arr [ i ] [ 1 ] = v ; vertex [ u ] ++ ; vertex [ v ] ++ ; if ( vertex [ u ] == 3 ) store = u ; if ( vertex [ v ] == 3 ) store = v ; } if ( store == - 1 ) { for ( i = 0 ; i < n - 1 ; i ++ ) cout << i << endl ; } else { int count1 = 0 , count2 = 3 ; for ( i = 0 ; i < n - 1 ; i ++ ) { if ( arr [ i ] [ 0 ] == store || arr [ i ] [ 1 ] == store ) { cout << count1 << endl ; count1 ++ ; } else { cout << count2 << endl ; count2 ++ ; } } } return 0 ; } 


score: 0.9818181818181818


574: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:100:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } else if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 0.9815668202764977


575: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:95:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } else if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 0.9815668202764977


576: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } else if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288661.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 0.9815668202764977


577: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } else if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 0.9815668202764977


578: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:101:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } else if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; //cout << f[i][0] << " " << f[i][1] << endl; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:96:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; F0R ( i , MX ) dist [ i ] = INF ; vi primes ; primes . pb ( 2 ) ; for ( int i = 3 ; i <= sqrt ( MX ) ; i += 2 ) { if ( ! prime [ i ] ) { dist [ i ] = - 1 ; primes . pb ( i ) ; for ( int j = 3 * i ; j <= sqrt ( MX ) ; j += 2 * i ) { prime [ j ] = true ; } } } int n ; cin >> n ; int a [ n ] ; F0R ( i , n ) cin >> a [ i ] ; vi f [ n ] ; set < int > check ; F0R ( i , n ) { for ( int j = 0 ; j < primes . size ( ) ; j ++ ) { int count = 0 ; while ( ! ( a [ i ] % primes [ j ] ) ) { count ++ ; a [ i ] /= primes [ j ] ; } if ( count & 1 ) f [ i ] . pb ( primes [ j ] ) ; } if ( a [ i ] > 1 ) { f [ i ] . pb ( a [ i ] ) ; dist [ a [ i ] ] = - 1 ; } if ( f [ i ] . size ( ) == 0 ) { cout << 1 << endl ; return 0 ; } int prod = 1 ; trav ( a , f [ i ] ) prod *= a ; int SZ = ( int ) check . size ( ) ; check . insert ( prod ) ; if ( SZ == check . size ( ) ) { cout << 2 << endl ; return 0 ; } if ( f [ i ] . size ( ) == 1 ) marked [ f [ i ] [ 0 ] ] = true ; } F0R ( i , n ) { if ( f [ i ] . size ( ) == 2 ) { edges [ f [ i ] [ 0 ] ] . pb ( f [ i ] [ 1 ] ) ; edges [ f [ i ] [ 1 ] ] . pb ( f [ i ] [ 0 ] ) ; } } int ans = INF ; trav ( p , primes ) { int ret = bfs ( p ) ; ckmin ( ans , ret ) ; //cout << p << " " << ret << endl; } if ( ans == INF ) cout << - 1 << endl ; else cout << ans << endl ; return 0 ; } 


score: 0.9815668202764977


579: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9814814814814815


580: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9814814814814815


581: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9814814814814815


582: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/M.Zal/D_73266342.cpp:14:9

int32_t main ( ) { fast int xr , sum ; cin >> xr >> sum ; if ( abs ( xr - sum ) % 2 == 1 ) { cout << - 1 ; return 0 ; } if ( sum == 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == sum ) { cout << 1 << endl ; cout << xr ; return 0 ; } bool two = 1 ; int ekhtelaf = sum - xr ; //cout << ekhtelaf << endl; for ( int i = 60 ; i > 0 ; i -- ) { if ( ( ( ( ll ) 1 << i ) & ekhtelaf ) and ( ( ( ll ) 1 << ( i - 1 ) ) & xr ) ) { two = 0 ; break ; } } int f = 0 , s = 0 , t = 0 ; if ( two ) { cout << 2 << endl ; for ( int i = 60 ; i > 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & ekhtelaf ) { //cout << '#' << i << endl; f += ( ( ll ) 1 << ( i - 1 ) ) ; s += ( ( ll ) 1 << ( i - 1 ) ) ; } } for ( int i = 60 ; i >= 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & xr ) f += ( ( ll ) 1 << i ) ; } cout << f << ' ' << s << endl ; return 0 ; } cout << 3 << endl ; f = xr ; for ( int i = 60 ; i > 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & ekhtelaf ) { s += ( ( ll ) 1 << ( i - 1 ) ) ; t += ( ( ll ) 1 << ( i - 1 ) ) ; } } cout << f << ' ' << s << ' ' << t << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/M.Zal/D_73267362.cpp:14:9

int32_t main ( ) { fast int xr , sum ; cin >> xr >> sum ; if ( abs ( xr - sum ) % ( ll ) 2 == ( ll ) 1 ) { cout << - 1 ; return 0 ; } if ( sum == ( ll ) 0 ) { cout << 0 << endl ; return 0 ; } if ( xr == sum ) { cout << 1 << endl ; cout << xr ; return 0 ; } bool two = 1 ; int ekhtelaf = sum - xr ; //cout << ekhtelaf << endl; for ( int i = 60 ; i >= 0 ; i -- ) { if ( ( ( ( ll ) 1 << i ) & ekhtelaf ) and ( ( ( ll ) 1 << ( i - 1 ) ) & xr ) ) { two = 0 ; break ; } } int f = 0 , s = 0 , t = 0 ; if ( two ) { cout << 2 << endl ; for ( int i = 60 ; i >= 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & ekhtelaf ) { //cout << '#' << i << endl; f += ( ( ll ) 1 << ( i - 1 ) ) ; s += ( ( ll ) 1 << ( i - 1 ) ) ; } } for ( int i = 60 ; i >= 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & xr ) f += ( ( ll ) 1 << i ) ; } cout << f << ' ' << s << endl ; return 0 ; } cout << 3 << endl ; f = xr ; for ( int i = 60 ; i >= 0 ; i -- ) { if ( ( ( ll ) 1 << i ) & ekhtelaf ) { s += ( ( ll ) 1 << ( i - 1 ) ) ; t += ( ( ll ) 1 << ( i - 1 ) ) ; } } cout << f << ' ' << s << ' ' << t << endl ; return 0 ; } 


score: 0.9813664596273292


583: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LowR/D_73654901.cpp:4:5

int main ( ) { i64 u , v ; scanf ( "%d%d" , & u , & v ) ; if ( u > v || u % 2 != v % 2 ) { printf ( "-1\n" ) ; } else if ( u == v ) { if ( u ) printf ( "1\n%lld\n" , u ) ; else printf ( "0\n" ) ; } else { const i64 d = ( v - u ) / 2 ; if ( d & u ) printf ( "2\n%lld %lld\n" , d ^ u , d ) ; else printf ( "3\n%lld %lld %lld\n" , d , d , u ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LowR/D_73655026.cpp:4:5

int main ( ) { i64 u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u > v || u % 2 != v % 2 ) { printf ( "-1\n" ) ; } else if ( u == v ) { if ( u ) printf ( "1\n%lld\n" , u ) ; else printf ( "0\n" ) ; } else { const i64 d = ( v - u ) / 2 ; if ( d & u ) printf ( "3\n%lld %lld %lld\n" , d , d , u ) ; else printf ( "2\n%lld %lld\n" , d ^ u , d ) ; } return 0 ; } 


score: 0.9811320754716981


584: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449307.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73425342.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < a [ i ] ) { while ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) { j ++ ; k ++ ; } j ++ ; } j = 0 ; k = 0 ; d [ i ] = a [ i ] - k ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 


score: 0.9811320754716981


585: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m4h/F_73565310.cpp:32:5

int main ( ) { ios :: sync_with_stdio ( 0 ) , cin . tie ( 0 ) ; int n , m ; cin >> n >> m ; while ( sqn * sqn < n ) sqn ++ ; while ( m -- ) { int a , b ; cin >> a >> b ; e [ a ] . pb ( b ) ; e [ b ] . pb ( a ) ; } dfs ( 1 , 1 ) ; cout << "1\n" ; auto it = begin ( ind ) ; while ( sqn -- ) cout << * it ++ << ' ' ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m4h/F_73565837.cpp:31:5

int main ( ) { ios :: sync_with_stdio ( 0 ) , cin . tie ( 0 ) ; int n , m ; cin >> n >> m ; while ( sqn * sqn < n ) sqn ++ ; while ( m -- ) { int a , b ; cin >> a >> b ; e [ a ] . pb ( b ) ; e [ b ] . pb ( a ) ; } dfs ( 1 , 1 ) ; cout << "1\n" ; auto it = begin ( ind ) ; while ( sqn -- ) { cout << * it << ' ' ; it ++ ; } } 


score: 0.98


586: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/macro_mallo/E_73299460.cpp:45:5

int main ( ) { int n , d , k , flag = 0 , store = 0 , i , res = 1 ; cin >> n ; int arr [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; for ( d = 1 ; d <= n ; d ++ ) { res = 1 ; for ( k = 0 ; k < d ; k ++ ) res = res * arr [ k ] ; if ( ( ( int ) sqrt ( res ) ) * ( ( int ) sqrt ( res ) ) == ( res ) ) { flag = 1 ; store = d ; break ; } for ( i = d ; i < n ; i ++ ) { res = ( res / arr [ i - d ] ) * arr [ i ] ; if ( ( ( int ) sqrt ( res ) ) * ( ( int ) sqrt ( res ) ) == ( res ) ) { flag = 1 ; store = d ; break ; } } if ( flag == 1 ) break ; } if ( flag == 1 ) cout << store << endl ; else cout << - 1 << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/macro_mallo/E_73299355.cpp:45:5

int main ( ) { int n , d , k , flag = 0 , store = 0 , i , res = 1 ; cin >> n ; int arr [ n ] ; for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; for ( d = 1 ; d <= n ; d ++ ) { res = 1 ; for ( k = 0 ; k < d ; k ++ ) res = res * arr [ k ] ; if ( ( ( int ) sqrt ( res ) ) * ( sqrt ( res ) ) == ( res ) ) { flag = 1 ; store = d ; break ; } for ( i = d ; i < n ; i ++ ) { res = ( res / arr [ i - d ] ) * arr [ i ] ; if ( ( ( int ) sqrt ( res ) ) * ( sqrt ( res ) ) == ( res ) ) { flag = 1 ; store = d ; break ; } } if ( flag == 1 ) break ; } if ( flag == 1 ) cout << store << endl ; else cout << - 1 << endl ; return 0 ; } 


score: 0.98


587: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:72:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 0.98


588: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73499953.cpp:83:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 0.98


589: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9798994974874372


590: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9798994974874372


591: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9798488664987406


592: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9798488664987406


593: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9798488664987406


594: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9797979797979798


595: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73311775.cpp:44:5

int main ( ) { IOS ll n , m , i , j , t , k , q ; ll u , v ; cin >> u >> v ; if ( u == 0 && v == 0 ) cout << 0 ; else if ( u > v ) cout << - 1 ; else if ( ( v - u ) % 2 == 1 ) cout << - 1 ; else if ( v == u ) { cout << 1 << endl ; cout << u ; } else { ll h = v / 2 - u / 2 ; ll r = v / 2 + u / 2 ; r = h ^ r ; if ( r == u ) { cout << 2 << endl ; cout << ( v / 2 - u / 2 ) << " " << ( v / 2 + u / 2 ) ; } else { cout << 3 << endl ; ll diff = v - u ; cout << diff / 2 << " " << diff / 2 << " " << u ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/manangandhi/D_73271936.cpp:44:5

int main ( ) { IOS ll n , m , i , j , t , k , q ; ll u , v ; cin >> u >> v ; if ( u == 0 && v == 0 ) cout << 0 ; else if ( u > v ) cout << - 1 ; else if ( ( v - u ) % 2 == 1 ) cout << - 1 ; else if ( v == u ) { cout << 1 ; cout << u << " " << v ; } else { ll h = v / 2 - u / 2 ; ll r = v / 2 + u / 2 ; r = h ^ r ; if ( r == u ) { cout << 2 << endl ; cout << ( v / 2 - u / 2 ) << " " << ( v / 2 + u / 2 ) ; } else { cout << 3 << endl ; ll diff = v - u ; cout << diff / 2 << " " << diff / 2 << " " << u ; } } } 


score: 0.9791666666666666


596: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9789915966386554


597: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9789915966386554


598: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73316144.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315985.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.978978978978979


599: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/F_73316117.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315985.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.978978978978979


600: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301101.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = sqrt ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73300750.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = up - 1 ; for ( int i = 1 ; i <= n ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 


score: 0.9782608695652174


601: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { ckmin ( ret , x + minDistMarked ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73290366.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { //cout << s << " " << x << endl; ckmin ( ret , dist [ x ] + minDistMarked + 2 ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 


score: 0.9782608695652174


602: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { ckmin ( ret , x + minDistMarked ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289806.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { //cout << s << " " << x << endl; ckmin ( ret , dist [ x ] + minDistMarked + 2 ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 


score: 0.9782608695652174


603: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_i/D_73269730.cpp:133:6

void solve ( ) { ll xorr , v , k = 0 , n = 0 , x = 0 , m = 0 , curr = 0 , num = 0 , n1 = 0 , n2 = 0 , n3 = 0 , n4 = 0 , i = 0 , j = 0 ; ll root = 0 , sum = 0 , diff = 0 , q = 0 , choice = 0 , d = 0 , len = 0 , beg = 0 , end = 0 , pos = 0 , cnt = 0 ; ll lo = 0 , hi = 0 , mid = 0 , ans = 0 ; bool flag = false ; string s1 , s2 , s3 , str ; char ch , ch1 , ch2 , ch3 , * ptr ; double dub = 0 ; ///////////////////////////////////////////////////////////////////////////////////////////////////////////// cin >> xorr >> sum ; n1 = ( int ) ( log2 ( xorr ) ) , n2 = ( int ) ( log2 ( sum ) ) ; if ( xorr == 0 ) { if ( sum == 0 ) { cout << 0 << endl ; return ; } else { if ( sum % 2 == 0 ) { cout << 2 << endl ; cout << sum / 2 << " " << sum / 2 ; return ; } else { cout << - 1 << endl ; return ; } } } else { ll arr [ 61 ] , nxt = 0 ; for ( i = 0 ; i < 61 ; i ++ ) { arr [ i ] = 0 ; } for ( i = 0 ; i < 61 ; i ++ ) { ll xo = ( ( xorr & ( 1ll << i ) ) > 0 ) ; ll ss = ( ( sum & ( 1ll << i ) ) > 0 ) ; //cout<<xo<<" "<<ss<<endl; if ( i == 0 ) { if ( xo == 0 && ss == 1 ) { cout << - 1 << endl ; return ; } else if ( xo == 0 && ss == 0 ) { arr [ i ] = 0 ; } else if ( xo == 1 && ss == 0 ) { cout << - 1 << endl ; return ; } else if ( xo == 1 && ss == 1 ) { arr [ i ] = 1 ; } } else { if ( xo == 0 && ss == 0 ) { if ( nxt == 0 ) arr [ i ] = 0 ; else { cout << - 1 << endl ; return ; } nxt = 0 ; } else if ( xo == 0 && ss == 1 ) { if ( nxt == 0 ) { arr [ i - 1 ] += 2 ; arr [ i ] = 0 ; } else { arr [ i ] = 0 ; } nxt = 0 ; } else if ( xo == 1 && ss == 0 ) { arr [ i - 1 ] += 2 ; arr [ i ] = 1 ; nxt = 1 ; } else if ( xo == 1 && ss == 1 ) { arr [ i ] = 1 ; nxt = 0 ; } } } cnt = 0 ; rep ( i , 61 ) { //cout<<arr[i]<<" "; cnt = max ( cnt , arr [ i ] ) ; } //cout<<endl; ll result [ cnt ] ; cout << cnt << endl ; rep ( i , cnt ) { result [ i ] = 0 ; for ( j = 0 ; j < 61 ; j ++ ) { if ( arr [ j ] > 0 ) { result [ i ] += power ( 2ll , j ) ; arr [ j ] -- ; } } } rep ( i , cnt ) { cout << result [ i ] << " " ; } cout << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_i/D_73271853.cpp:133:6

void solve ( ) { ll xorr , v , k = 0 , n = 0 , x = 0 , m = 0 , curr = 0 , num = 0 , n1 = 0 , n2 = 0 , n3 = 0 , n4 = 0 , i = 0 , j = 0 ; ll root = 0 , sum = 0 , diff = 0 , q = 0 , choice = 0 , d = 0 , len = 0 , beg = 0 , end = 0 , pos = 0 , cnt = 0 ; ll lo = 0 , hi = 0 , mid = 0 , ans = 0 ; bool flag = false ; string s1 , s2 , s3 , str ; char ch , ch1 , ch2 , ch3 , * ptr ; double dub = 0 ; ///////////////////////////////////////////////////////////////////////////////////////////////////////////// cin >> xorr >> sum ; n1 = ( int ) ( log2 ( xorr ) ) , n2 = ( int ) ( log2 ( sum ) ) ; if ( xorr == 0 ) { if ( sum == 0 ) { cout << 0 << endl ; return ; } else { if ( sum % 2 == 0 ) { cout << 2 << endl ; cout << sum / 2 << " " << sum / 2 ; return ; } else { cout << - 1 << endl ; return ; } } } else { ll arr [ 61 ] , nxt = 0 ; for ( i = 0 ; i < 61 ; i ++ ) { arr [ i ] = 0 ; } for ( i = 0 ; i < 61 ; i ++ ) { ll xo = ( ( xorr & ( 1ll << i ) ) > 0 ) ; ll ss = ( ( sum & ( 1ll << i ) ) > 0 ) ; //cout<<xo<<" "<<ss<<endl; if ( i == 0 ) { if ( xo == 0 && ss == 1 ) { cout << - 1 << endl ; return ; } else if ( xo == 0 && ss == 0 ) { arr [ i ] = 0 ; } else if ( xo == 1 && ss == 0 ) { cout << - 1 << endl ; return ; } else if ( xo == 1 && ss == 1 ) { arr [ i ] = 1 ; } } else { if ( xo == 0 && ss == 0 ) { if ( nxt == 0 ) arr [ i ] = 0 ; else { cout << - 1 << endl ; return ; } nxt = 0 ; } else if ( xo == 0 && ss == 1 ) { if ( nxt == 0 ) { arr [ i - 1 ] += 2 ; arr [ i ] = 0 ; } else { arr [ i ] = 0 ; } nxt = 0 ; } else if ( xo == 1 && ss == 0 ) { arr [ i - 1 ] += 2 ; arr [ i ] = 1 ; nxt = 1 ; } else if ( xo == 1 && ss == 1 ) { if ( nxt == 1 ) { cout << - 1 << endl ; return ; } arr [ i ] = 1 ; nxt = 0 ; } } } cnt = 0 ; rep ( i , 61 ) { //cout<<arr[i]<<" "; cnt = max ( cnt , arr [ i ] ) ; } //cout<<endl; ll result [ cnt ] ; cout << cnt << endl ; rep ( i , cnt ) { result [ i ] = 0 ; for ( j = 0 ; j < 61 ; j ++ ) { if ( arr [ j ] > 0 ) { result [ i ] += power ( 2ll , j ) ; arr [ j ] -- ; } } } rep ( i , cnt ) { cout << result [ i ] << " " ; } cout << endl ; } } 


score: 0.9777070063694268


604: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/E_73464179.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73464300.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] + 1 ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.9776119402985075


605: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/LZFeng/C_73300682.cpp:8:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; for ( int i = 1 ; i < n ; i ++ ) { scanf ( "%d %d" , & u [ i ] , & v [ i ] ) ; t [ u [ i ] ] ++ ; t [ v [ i ] ] ++ ; } int flg = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( t [ i ] >= 3 ) { flg = i ; break ; } if ( flg ) { int j = 0 , t = 3 ; for ( int i = 1 ; i < n ; i ++ ) { if ( ( u [ i ] == flg || v [ i ] == flg ) && j <= 2 ) { printf ( "%d\n" , j ) ; j ++ ; } else { printf ( "%d\n" , t ) ; t ++ ; } } } else { for ( int i = 0 ; i < n - 1 ; i ++ ) printf ( "%d\n" , i ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/LZFeng/C_73272037.cpp:8:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; for ( int i = 1 ; i < n ; i ++ ) { scanf ( "%d %d" , & u [ i ] , & v [ i ] ) ; t [ u [ i ] ] ++ ; t [ v [ i ] ] ++ ; } int flg = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( t [ i ] >= 3 ) { flg = i ; break ; } if ( flg ) { int j = 0 , t = 3 ; for ( int i = 1 ; i < n ; i ++ ) { if ( u [ i ] == flg || v [ i ] == flg && j <= 2 ) printf ( "%d\n" , j ++ ) ; else printf ( "%d\n" , t ++ ) ; } } else { for ( int i = 0 ; i < n - 1 ; i ++ ) printf ( "%d\n" , i ) ; } return 0 ; } 


score: 0.9775280898876404


606: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9773299748110831


607: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9773299748110831


608: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9773299748110831


609: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73294122.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295120.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 0.9764705882352941


610: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73294122.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295135.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( v - u ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( v - u ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 0.9764705882352941


611: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9764705882352941


612: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9764705882352941


613: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9764705882352941


614: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9764705882352941


615: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73423163.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/E_73425159.cpp:212:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , mx , v1 , v2 , res = INT_MAX ; cin >> n ; vector < int > vec ( n + 5 ) , sources ; for ( int i = 0 ; i < n ; ++ i ) cin >> vec [ i ] ; mx = * max_element ( vec . begin ( ) , vec . end ( ) ) ; Graph . resize ( mx + 5 ) ; Sieve ( mx ) ; vector < bool > exists ( mx + 5 ) ; for ( int i = 0 ; i < n ; ++ i ) { auto res = factorize ( vec [ i ] ) ; v1 = res . first , v2 = res . second ; if ( ( ll ) v1 * v1 <= mx && ! exists [ v1 ] ) sources . push_back ( v1 ) , exists [ v1 ] = true ; if ( ( ll ) v2 * v2 <= mx && ! exists [ v2 ] ) sources . push_back ( v2 ) , exists [ v2 ] = true ; Graph [ v1 ] . push_back ( v2 ) ; if ( v1 != v2 ) Graph [ v2 ] . push_back ( v1 ) ; } for ( int i = 1 ; i * i <= mx ; ++ i ) sort ( Graph [ i ] . begin ( ) , Graph [ i ] . end ( ) ) ; for ( int i = 1 ; i * i <= mx ; ++ i ) for ( int j = 1 ; j < Graph [ i ] . size ( ) ; ++ j ) if ( Graph [ i ] [ j ] == Graph [ i ] [ j - 1 ] ) { res = 2 ; break ; } for ( auto s : sources ) res = min ( res , bfs ( s , mx ) ) ; cout << ( res == INT_MAX ? - 1 : res ) ; } 


score: 0.9760479041916168


616: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73509327.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 


score: 0.9759036144578314


617: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73443081.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 


score: 0.9759036144578314


618: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73442997.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 


score: 0.9759036144578314


619: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 


score: 0.975609756097561


620: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9753086419753086


621: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9753086419753086


622: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9753086419753086


623: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madeha99/D_73620561.cpp:23:5

int main ( ) { ll u , v ; cin >> u >> v ; ll dif = v - u ; if ( dif < 0 ) cout << - 1 << endl ; else if ( dif == 0 ) { if ( u == 0 ) cout << 0 << endl ; else cout << 1 << endl << u << endl ; } else if ( dif % 2 ) { cout << - 1 << endl ; } else { bitset < 63 > aux ; dif /= 2 ; ll ind = 0 ; while ( dif ) { if ( dif % 2 ) aux [ ind ] = 1 ; dif /= 2 ; ind ++ ; } bitset < 63 > aux2 = aux ; bitset < 63 > aux3 ; ind = 0 ; while ( u ) { if ( u % 2 ) { if ( aux [ ind ] ) aux3 [ ind ] = 1 ; else aux2 [ ind ] = 1 ; } u /= 2 ; ind ++ ; } ll a = aux . to_ulong ( ) ; ll b = aux2 . to_ulong ( ) ; ll c = aux3 . to_ulong ( ) ; if ( c ) cout << 3 << endl << a << " " << b << " " << c << endl ; else cout << 2 << endl << a << " " << b << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madeha99/D_73620417.cpp:23:5

int main ( ) { ll u , v ; cin >> u >> v ; ll dif = v - u ; if ( dif < 0 ) cout << - 1 << endl ; else if ( dif == 0 ) { if ( u == 0 ) cout << 0 << endl ; else cout << 1 << endl << u << endl ; } else if ( dif % 2 ) { cout << - 1 << endl ; } else { bitset < 20 > aux ; dif /= 2 ; ll ind = 0 ; while ( dif ) { if ( dif % 2 ) aux [ ind ] = 1 ; dif /= 2 ; ind ++ ; } bitset < 20 > aux2 = aux ; bitset < 20 > aux3 ; ind = 0 ; while ( u ) { if ( u % 2 ) { if ( aux [ ind ] ) aux3 [ ind ] = 1 ; else aux2 [ ind ] = 1 ; } u /= 2 ; ind ++ ; } ll a = aux . to_ulong ( ) ; ll b = aux2 . to_ulong ( ) ; ll c = aux3 . to_ulong ( ) ; if ( c ) cout << 3 << endl << a << " " << b << " " << c << endl ; else cout << 2 << endl << a << " " << b << endl ; } return 0 ; } 


score: 0.9752066115702479


624: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9748743718592965


625: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9748743718592965


626: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9748743718592965


627: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9747474747474747


628: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9747474747474747


629: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9747474747474747


630: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:47:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; else a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9743589743589743


631: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:47:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; else a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9743589743589743


632: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:47:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; else a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9743589743589743


633: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73332321.cpp:5:5

int main ( ) { cin >> u >> v ; if ( u == 0 && v == 0 ) { puts ( "0" ) ; return 0 ; } if ( u % 2 != v % 2 || u > v ) { puts ( "-1" ) ; return 0 ; } if ( u == v ) { puts ( "1" ) ; cout << u ; return 0 ; } if ( u == 0 ) { puts ( "2" ) ; cout << v / 2 << " " << v / 2 ; return 0 ; } long long x = ( v - u ) / 2 ; if ( ! ( x & u ) ) { puts ( "2" ) ; cout << x << " " << ( x ^ u ) ; return 0 ; } else { puts ( "3" ) ; cout << x << " " << x << " " << u ; return 0 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73332213.cpp:5:5

int main ( ) { cin >> u >> v ; if ( u == 0 && v == 0 ) { puts ( "0" ) ; return 0 ; } if ( u % 2 != v % 2 || u > v ) { puts ( "-1" ) ; return 0 ; } if ( u == v ) { puts ( "1" ) ; cout << u ; return 0 ; } if ( u == 0 ) { puts ( "2" ) ; cout << v / 2 << " " << v / 2 ; } long long x = ( v - u ) / 2 ; if ( ! ( x & u ) ) { puts ( "2" ) ; cout << x << " " << ( x ^ u ) ; return 0 ; } else { puts ( "3" ) ; cout << x << " " << x << " " << u ; return 0 ; } } 


score: 0.9736842105263158


634: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406939.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v && u != 0 ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406801.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 


score: 0.9736842105263158


635: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406939.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v && u != 0 ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406677.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; long long a [ v ] ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 


score: 0.9736842105263158


636: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73414193.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 0.9736842105263158


637: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413399.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ 1000 ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v ^ u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 0.9736842105263158


638: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73377113.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { if ( u > 0 ) { printf ( "1\n" ) ; printf ( "%lld\n" , u ) ; return 0 ; } else { printf ( "0\n" ) ; return 0 ; } } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73377105.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { if ( u > 0 ) { printf ( "1\n" ) ; printf ( "%lld\n" , u ) ; return 0 ; } else { printf ( "0\n" ) ; } } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 


score: 0.9736842105263158


639: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.973568281938326


640: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272416.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; cout << a << " " << b << '\n' ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { cout << cnt [ i ] << '\n' ; if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272719.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; cout << a << " " << b << '\n' ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 


score: 0.9735099337748344


641: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383543.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383666.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ order [ i ] ] ) { hv . push_back ( order [ i ] ) ; for ( auto v : g [ order [ i ] ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 0.9732142857142857


642: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383666.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ order [ i ] ] ) { hv . push_back ( order [ i ] ) ; for ( auto v : g [ order [ i ] ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383571.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 0.9732142857142857


643: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9730290456431535


644: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9730290456431535


645: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9730290456431535


646: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9730290456431535


647: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9726027397260274


648: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9726027397260274


649: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9722814498933902


650: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9722814498933902


651: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9722814498933902


652: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9722814498933902


653: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madlogic/D_73321488.cpp:6:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( nullptr ) ; ll x , s ; cin >> x >> s ; if ( x > s || ( s - x ) & 1 ) { cout << "-1" << endl ; return 0 ; } if ( x == s ) { if ( x == 0 ) { cout << "0\n" ; } else { cout << "2\n" ; cout << "0 " << x << '\n' ; } return 0 ; } ll d = ( s - x ) / 2 ; if ( ( d & x ) == 0 ) { cout << "2\n" ; cout << d << ' ' << d + x << '\n' ; } else { cout << "3\n" ; cout << d << ' ' << d << ' ' << x << ' ' << '\n' ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madlogic/D_73321550.cpp:6:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( nullptr ) ; ll x , s ; cin >> x >> s ; if ( x > s || ( s - x ) & 1 ) { cout << "-1" << endl ; return 0 ; } if ( x == s ) { if ( x == 0 ) { cout << "0\n" ; } else { cout << "1\n" ; cout << x << '\n' ; } return 0 ; } ll d = ( s - x ) / 2 ; if ( ( d & x ) == 0 ) { cout << "2\n" ; cout << d << ' ' << d + x << '\n' ; } else { cout << "3\n" ; cout << d << ' ' << d << ' ' << x << ' ' << '\n' ; } return 0 ; } 


score: 0.9722222222222222


654: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9719887955182073


655: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302623.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.971830985915493


656: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302813.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 


score: 0.971830985915493


657: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9714912280701754


658: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9714912280701754


659: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9714912280701754


660: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9714912280701754


661: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9707602339181286


662: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9707602339181286


663: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9706546275395034


664: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9706546275395034


665: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9706546275395034


666: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9706546275395034


667: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73389951.cpp:81:6

void solve ( ) { ll n ; cin >> n ; vll adj [ n ] ; map < pll , ll > mp ; rep ( i , 0 , n - 1 ) { ll u , v ; cin >> u >> v ; u -- ; v -- ; if ( u > v ) swap ( u , v ) ; adj [ v ] . pb ( u ) ; adj [ u ] . pb ( v ) ; mp [ { u , v } ] = i ; } vll ans ( n - 1 ) ; ll d = n - 1 ; dfs ( adj , 0 , - 1 , d , mp , ans ) ; rep ( i , 0 , n - 1 ) cout << ans [ i ] << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucifer_1502/C_73388931.cpp:81:6

void solve ( ) { ll n ; cin >> n ; vll adj [ n ] ; map < pll , ll > mp ; rep ( i , 0 , n - 1 ) { ll u , v ; cin >> u >> v ; u -- ; v -- ; if ( u > v ) swap ( u , v ) ; adj [ v ] . pb ( u ) ; adj [ u ] . pb ( v ) ; mp [ { u , v } ] = i ; } vll ans ( n - 1 ) ; ll d = 0 ; dfs ( adj , 0 , - 1 , d , mp , ans ) ; rep ( i , 0 , n - 1 ) cout << ans [ i ] << endl ; } 


score: 0.9705882352941176


668: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9701492537313433


669: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9701492537313433


670: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Madhav_Agarwal/D_73401539.cpp:48:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout . tie ( 0 ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u % 2 != v % 2 ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { if ( u == 0 ) cout << "0\n" ; else { cout << "1\n" ; cout << u << "\n" ; } } else if ( u > v ) cout << "-1\n" ; else { long long x = ( v - u ) / 2 ; if ( u & x ) printf ( "3\n%I64d %I64d %I64d" , u , x , x ) ; else printf ( "2\n%I64d %I64d" , ( u ^ x ) , x ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Madhav_Agarwal/D_73401394.cpp:48:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout . tie ( 0 ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u & 1 != v & 1 ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { if ( u == 0 ) cout << "0\n" ; else { cout << "1\n" ; cout << u << "\n" ; } } else if ( u > v ) cout << "-1\n" ; else { long long x = ( v - u ) / 2 ; if ( u & x ) printf ( "3\n%I64d %I64d %I64d" , u , x , x ) ; else printf ( "2\n%I64d %I64d" , ( u ^ x ) , x ) ; } } 


score: 0.9701492537313433


671: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9698492462311558


672: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9697674418604652


673: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9697674418604652


674: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9697674418604652


675: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9697674418604652


676: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/D_73379521.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379165.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; int AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 0.9696969696969697


677: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/D_73379535.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379165.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; int AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 0.9696969696969697


678: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379235.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; long long AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/D_73379165.cpp:3:5

int check ( ) { long long p = 0 , q = 0 ; int AND = ( B - A ) >> 1 ; for ( int i = 64 ; i >= 0 ; -- i ) { long long x1 = A & ( 1ll << i ) , y1 = AND & ( 1ll << i ) ; if ( x1 ) { if ( ! y1 ) p |= 1ll << i ; else return 0 ; } else if ( y1 ) p |= 1ll << i , q |= 1ll << i ; } if ( p + q == B ) return std :: cout << 2 << '\n' << p << ' ' << q << '\n' , 1 ; return 0 ; } 


score: 0.9696969696969697


679: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9696969696969697


680: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.969187675070028


681: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:47:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; else a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9689119170984456


682: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:47:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; else a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first * it . first <= 1000000 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:48:5

int main ( ) { get_prime ( 1000000 ) ; memset ( head , - 1 , sizeof ( head ) ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) { ans = 1 ; a [ i ] = 1e6 + i ; } else { if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; if ( unique ( a + 1 , a + 1 + n ) - ( a + 1 ) < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; if ( ! mp . count ( u ) ) mp [ u ] = ++ id ; if ( ! mp . count ( v ) ) mp [ v ] = ++ id ; AddEdge ( mp [ u ] , mp [ v ] ) ; AddEdge ( mp [ v ] , mp [ u ] ) ; // cout << mp[u] << '-' << mp[v] << '\n'; } // for (auto it : mp) { //     cout << it.first << ' ' << it.second << '\n'; // } for ( auto & it : mp ) { if ( it . first <= 997 ) { ans = min ( ans , Bfs ( it . second ) ) ; } } } } if ( ans == INT_MAX ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9689119170984456


683: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9688249400479616


684: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9688249400479616


685: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9688249400479616


686: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9688249400479616


687: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


688: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 


score: 0.9682539682539683


689: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


690: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


691: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


692: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 


score: 0.9682539682539683


693: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


694: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc ) pas = zx + xc ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] + 1 ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 


score: 0.9682539682539683


695: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9678714859437751


696: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9678714859437751


697: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9678714859437751


698: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9678714859437751


699: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = inf , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 2 ) pas = zx + xc + 2 ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:25:6

void dfs2 ( int q , int w ) { bo [ q ] = cnt ; int zx = k [ q ] , xc = inf ; for ( vector < int > :: iterator it = v [ q ] . begin ( ) ; it != v [ q ] . end ( ) ; it ++ ) { if ( ( * it ) == w ) continue ; if ( bo [ ( * it ) ] == cnt ) { if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } continue ; } dfs2 ( ( * it ) , q ) ; if ( anc ( q , ( * it ) ) == 1 ) { if ( k [ q ] > k [ ( * it ) ] + 1 ) k [ q ] = k [ ( * it ) ] + 1 ; if ( zx >= k [ ( * it ) ] + 1 ) { xc = zx ; zx = k [ ( * it ) ] + 1 ; } else { if ( xc > k [ ( * it ) ] ) { xc = k [ ( * it ) ] + 1 ; } } } } if ( xc != inf ) { if ( pas > zx + xc + 1 ) pas = zx + xc + 1 ; } } 


score: 0.967741935483871


700: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301335.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = up - 1 ; for ( int i = 1 ; i <= m ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lxyc/F_73301101.cpp:46:5

int main ( ) { int n , m ; cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i * i >= n ) { up = i ; break ; } } low = sqrt ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) { int su , sv ; scanf ( "%d%d" , & su , & sv ) ; g [ su ] . push_back ( sv ) ; g [ sv ] . push_back ( su ) ; } h [ 1 ] = 0 ; ans [ 0 ] . push_back ( 1 ) ; mark [ 1 ] = 1 ; pre [ 1 ] = - 1 ; dfs ( 1 ) ; for ( int i = 0 ; i < low ; i ++ ) { if ( SZ ( ans [ i ] ) >= up ) { puts ( "1" ) ; for ( int j = 0 ; j < up ; j ++ ) cout << ans [ i ] [ j ] << ' ' ; return 0 ; } } return 0 ; } 


score: 0.967391304347826


701: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 


score: 0.9669421487603306


702: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 


score: 0.9669421487603306


703: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383543.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ to ] <= dep [ x ] - lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383666.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ x ] - dep [ to ] + 1 >= lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] + 1 << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 


score: 0.9666666666666667


704: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383543.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ to ] <= dep [ x ] - lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383571.cpp:34:6

void dfs ( int x ) { stk . push_back ( x ) ; vis [ x ] = 1 ; for ( auto to : g [ x ] ) { if ( ! vis [ to ] ) { dep [ to ] = dep [ x ] + 1 ; dfs ( to ) ; } else { if ( dep [ x ] - dep [ to ] + 1 >= lmt ) { cout << 2 << endl ; cout << dep [ x ] - dep [ to ] + 1 << endl ; while ( stk . back ( ) != to ) { cout << stk . back ( ) << " " ; stk . pop_back ( ) ; } cout << stk . back ( ) ; exit ( 0 ) ; } } } stk . pop_back ( ) ; } 


score: 0.9666666666666667


705: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m4h/F_73565310.cpp:14:6

void dfs ( int v , int p ) { d [ v ] = d [ p ] + 1 ; bt . pb ( v ) ; for ( int u : e [ v ] ) if ( ind . count ( u ) ) goto kek ; ind . insert ( v ) ; kek : ; int h = 1e9 ; for ( int u : e [ v ] ) if ( u != p ) if ( d [ u ] ) h = min ( h , d [ u ] - 1 ) ; if ( d [ v ] - h >= sqn ) { cout << "2\n" << d [ v ] - h << '\n' ; for ( int i = h ; i < d [ v ] ; i ++ ) cout << bt [ i ] << ' ' ; exit ( 0 ) ; } for ( int u : e [ v ] ) if ( u != p ) if ( ! d [ u ] ) dfs ( u , v ) ; bt . pob ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m4h/F_73565837.cpp:14:6

void dfs ( int v , int p ) { d [ v ] = d [ p ] + 1 ; bt . pb ( v ) ; int h = 1e9 ; for ( int u : e [ v ] ) if ( u != p ) if ( d [ u ] ) h = min ( h , d [ u ] - 1 ) ; if ( d [ v ] - h >= sqn ) { cout << "2\n" << d [ v ] - h << '\n' ; for ( int i = h ; i < d [ v ] ; i ++ ) cout << bt [ i ] << ' ' ; exit ( 0 ) ; } for ( int u : e [ v ] ) if ( u != p ) if ( ! d [ u ] ) dfs ( u , v ) ; bt . pob ( ) ; for ( int u : e [ v ] ) if ( ind . count ( u ) ) return ; ind . insert ( v ) ; } 


score: 0.9666666666666667


706: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/E_73294457.cpp:34:5

int main ( ) { sieve ( ) ; cout << "done sieve" << endl ; cout << idx << endl ; // cout << "done sieve"; // for(int i = 0; i <= MAX_N; ++i){ //     cout << i << ' ' << norm[i].size() << endl; //     for(int j = 0; j < norm[i].size(); ++j) //     cout << norm[i][j] << ' '; //     cout << endl; // } cin >> n ; for ( int i = 0 ; i < n ; ++ i ) { cin >> num ; if ( norm [ num ] . empty ( ) ) { cout << 1 << endl ; return 0 ; } // cout << num << ' ' << norm[num].size() << endl; if ( norm [ num ] . size ( ) == 1 ) norm [ num ] . push_back ( 1 ) ; edges . push_back ( { norm [ num ] [ 0 ] , norm [ num ] [ 1 ] } ) ; g [ norm [ num ] [ 0 ] ] . push_back ( i ) ; g [ norm [ num ] [ 1 ] ] . push_back ( i ) ; } int ans = MAX_N ; for ( int i = 0 ; i < idx ; ++ i ) { int p = primes [ i ] ; // cout << p << endl; if ( p * p > MAX_N ) continue ; for ( int j = 0 ; j < idx ; ++ j ) dist [ primes [ j ] ] = 0 ; queue < pair < int , int >> qu ; for ( int q : g [ p ] ) { qu . push ( { q , ( edges [ q ] [ 0 ] == p ) } ) ; //easy way to get index of next node dist [ edges [ q ] [ 0 ] ^ edges [ q ] [ 1 ] ^ p ] = 1 ; //easy way to access next node value since  we don't  know if it's at index 0 or 1 } while ( ! qu . empty ( ) ) { ii from = qu . front ( ) ; // cout << from.first << ' ' << from.second << endl; int node = edges [ from . first ] [ from . second ] ; qu . pop ( ) ; for ( int j : g [ node ] ) { if ( j == from . first ) continue ; int nnode = edges [ j ] [ edges [ j ] [ 0 ] == node ] ; if ( nnode == p || dist [ nnode ] ) ans = min ( ans , dist [ node ] + dist [ nnode ] + 1 ) ; else { dist [ nnode ] = dist [ node ] + 1 ; qu . push ( { j , ( edges [ j ] [ 0 ] == node ) } ) ; } } } } cout << ( ans != MAX_N ? ans : - 1 ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/E_73294474.cpp:34:5

int main ( ) { sieve ( ) ; // cout << "done sieve"<< endl; // cout << idx << endl; // cout << "done sieve"; // for(int i = 0; i <= MAX_N; ++i){ //     cout << i << ' ' << norm[i].size() << endl; //     for(int j = 0; j < norm[i].size(); ++j) //     cout << norm[i][j] << ' '; //     cout << endl; // } cin >> n ; for ( int i = 0 ; i < n ; ++ i ) { cin >> num ; if ( norm [ num ] . empty ( ) ) { cout << 1 << endl ; return 0 ; } // cout << num << ' ' << norm[num].size() << endl; if ( norm [ num ] . size ( ) == 1 ) norm [ num ] . push_back ( 1 ) ; edges . push_back ( { norm [ num ] [ 0 ] , norm [ num ] [ 1 ] } ) ; g [ norm [ num ] [ 0 ] ] . push_back ( i ) ; g [ norm [ num ] [ 1 ] ] . push_back ( i ) ; } int ans = MAX_N ; for ( int i = 0 ; i < idx ; ++ i ) { int p = primes [ i ] ; // cout << p << endl; if ( p * p > MAX_N ) continue ; for ( int j = 0 ; j < idx ; ++ j ) dist [ primes [ j ] ] = 0 ; queue < pair < int , int >> qu ; for ( int q : g [ p ] ) { qu . push ( { q , ( edges [ q ] [ 0 ] == p ) } ) ; //easy way to get index of next node dist [ edges [ q ] [ 0 ] ^ edges [ q ] [ 1 ] ^ p ] = 1 ; //easy way to access next node value since  we don't  know if it's at index 0 or 1 } while ( ! qu . empty ( ) ) { ii from = qu . front ( ) ; // cout << from.first << ' ' << from.second << endl; int node = edges [ from . first ] [ from . second ] ; qu . pop ( ) ; for ( int j : g [ node ] ) { if ( j == from . first ) continue ; int nnode = edges [ j ] [ edges [ j ] [ 0 ] == node ] ; if ( nnode == p || dist [ nnode ] ) ans = min ( ans , dist [ node ] + dist [ nnode ] + 1 ) ; else { dist [ nnode ] = dist [ node ] + 1 ; qu . push ( { j , ( edges [ j ] [ 0 ] == node ) } ) ; } } } } cout << ( ans != MAX_N ? ans : - 1 ) << endl ; } 


score: 0.9666666666666667


707: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9663865546218487


708: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272991.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272719.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; cout << a << " " << b << '\n' ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 


score: 0.9659863945578231


709: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 10005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9653679653679653


710: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9649122807017544


711: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9649122807017544


712: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9649122807017544


713: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vi edge [ 1000005 ] ; //ll par[1000005], dist[1000005]; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:37:4

long long # define ld long double # define f ( i , a , n ) for ( int i = a ; i < n ; i ++ ) # define f1 ( i , a , n ) for ( int i = n ; i >= a ; i -- ) # define pb push_back # define mp make_pair # define ins insert # define ers erase # define ff first # define ss second # define pii pair < int , int > # define pll pair < ll , ll > # define vi vector < int > # define vll vector < ll > # define vvi vector < vi > # define vpii vector < pii > # define vpll vector < pll > # define vvpii vector < vpii > # define vbl vector < bool > # define upb upper_bound # define lwb lower_bound # define acc ( v ) accumulate ( v . begin ( ) , v . end ( ) , 0 ) # define umap unordered_map # define uset unordered_set # define gcd __gcd const ll MOD = 1e9 + 7 ; # define INF INT_MAX using namespace std ; vll prime [ 1000005 ] ; bool vis [ 1000005 ] ; ll n , arr [ 100005 ] ; vll edge [ 1000005 ] ; ll par [ 1000005 ] , dist [ 1000005 ] ; ll norm ( ll num ) { ll res = 1 ; for ( auto i : prime [ num ] ) { ll cnt = 0 , temp = num ; while ( temp % i == 0 ) { temp /= i ; cnt ++ ; } if ( cnt % 2 == 1 ) res *= i ; } return res ; } 


score: 0.9649122807017544


714: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/looser-atul/A_73315962.cpp:4:5

int main ( ) { int t ; cin >> t ; while ( t -- ) { ll x ; cin >> x ; for ( ll i = 1 ; i <= x ; i ++ ) { double y = sqrt ( ( x * x ) - ( 4 * i ) ) ; int p = y ; if ( floor ( y ) == ceil ( y ) && ( x - p ) % 2 == 0 && ( x + p ) % 2 == 0 && x > y && ( ( x + p ) / 2 ) > 0 && ( ( x - p ) / 2 > 0 ) ) { cout << "1 " << i << "\n" ; break ; } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/looser-atul/A_73316136.cpp:4:5

int main ( ) { int t ; cin >> t ; while ( t -- ) { ll x ; cin >> x ; for ( ll i = 1 ; i <= 1000000 ; i ++ ) { double y = sqrt ( ( x * x ) - ( 4 * i ) ) ; ll p = y ; if ( floor ( y ) == ceil ( y ) && ( x - p ) % 2 == 0 && ( x + p ) % 2 == 0 && x > y && ( ( x + p ) / 2 ) > 0 && ( ( x - p ) / 2 > 0 ) ) { cout << "1 " << i << "\n" ; break ; } } } } 


score: 0.9649122807017544


715: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luotc_why/F_73295466.cpp:41:5

int main ( ) { n = read ( ) ; m = read ( ) ; k = sqrt ( n ) ; if ( k * k < n ) k ++ ; for ( int i = 1 , x , y ; i <= m ; i ++ ) x = read ( ) , y = read ( ) , add ( x , y ) , add ( y , x ) ; dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) a [ dep [ i ] % ( k - 1 ) ] . push_back ( i ) ; for ( int i = 0 ; i < k - 1 ; i ++ ) { if ( a [ i ] . size ( ) >= k ) { for ( int j = 0 ; j < a [ i ] . size ( ) ; j ++ ) { cout << a [ i ] [ j ] << " " ; } break ; } } cout << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luotc_why/F_73295499.cpp:41:5

int main ( ) { n = read ( ) ; m = read ( ) ; k = sqrt ( n ) ; if ( k * k < n ) k ++ ; for ( int i = 1 , x , y ; i <= m ; i ++ ) x = read ( ) , y = read ( ) , add ( x , y ) , add ( y , x ) ; dfs ( 1 , 0 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) a [ dep [ i ] % ( k - 1 ) ] . push_back ( i ) ; for ( int i = 0 ; i < k - 1 ; i ++ ) { if ( a [ i ] . size ( ) >= k ) { for ( int j = 0 ; j < k ; j ++ ) { cout << a [ i ] [ j ] << " " ; } break ; } } cout << endl ; return 0 ; } 


score: 0.9647058823529412


716: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383543.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383467.cpp:53:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { cout << hv . size ( ) << endl ; for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 0.9646017699115044


717: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383467.cpp:53:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { cout << hv . size ( ) << endl ; for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383666.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ order [ i ] ] ) { hv . push_back ( order [ i ] ) ; for ( auto v : g [ order [ i ] ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 0.9646017699115044


718: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383467.cpp:53:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { cout << hv . size ( ) << endl ; for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MagicSpark/F_73383571.cpp:54:5

int main ( ) { srand ( time ( 0 ) ) ; cin >> n >> m ; while ( lmt * lmt < n ) lmt ++ ; for ( int i = 1 ; i <= m ; i ++ ) { int x , y ; cin >> x >> y ; g [ x ] . push_back ( y ) ; g [ y ] . push_back ( x ) ; } dfs ( 1 ) ; cout << 1 << endl ; for ( int i = 1 ; i <= n ; i ++ ) order [ i ] = i ; while ( 1 ) { random_shuffle ( order + 1 , order + n + 1 ) ; memset ( ban , 0 , sizeof ban [ 0 ] * ( n + 3 ) ) ; vector < int > hv ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ! ban [ i ] ) { hv . push_back ( i ) ; for ( auto v : g [ i ] ) ban [ v ] = 1 ; if ( hv . size ( ) >= lmt ) break ; } } if ( hv . size ( ) >= lmt ) { for ( auto vv : hv ) cout << vv << " " ; return 0 ; } } return 0 ; } 


score: 0.9646017699115044


719: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu=%d deg=%d\n",u.id,u.deg); if ( del [ u . id ] ) continue ; if ( u . deg + 1 >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) { int v = g [ u . id ] [ i ] ; if ( del [ v ] ) continue ; else del [ v ] = 1 ; remove_edge ( v ) ; } if ( ans1 . size ( ) >= sq ) break ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu=%d deg=%d\n",u.id,u.deg); if ( del [ u . id ] ) continue ; if ( u . deg + 1 >= sq ) { printf ( "2\n" ) ; memset ( dfn , 50 , sizeof ( dfn ) ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) { int v = g [ u . id ] [ i ] ; if ( del [ v ] ) continue ; else del [ v ] = 1 ; remove_edge ( v ) ; } if ( ans1 . size ( ) >= sq ) break ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9640287769784173


720: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73316144.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315946.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.963963963963964


721: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/F_73316117.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315946.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.963963963963964


722: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:57:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = sqrt ( n ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == t ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:55:5

int main ( ) { scanf ( "%d%d" , & n , & m ) ; t = ceil ( sqrt ( n ) ) ; for ( int i = 1 , u , v ; i <= m ; i ++ ) { scanf ( "%d%d" , & u , & v ) ; addEdge ( u , v ) ; } dfs ( 1 , 0 ) ; printf ( "1\n" ) ; int jet = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( ! vis [ i ] ) { if ( jet == ( t + 1 ) ) break ; printf ( "%d " , i ) ; jet ++ ; } return 0 ; } 


score: 0.9636363636363636


723: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449921.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449307.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 


score: 0.9636363636363636


724: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449307.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449367.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; return 0 ; } 


score: 0.9636363636363636


725: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9634146341463414


726: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9634146341463414


727: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73267261.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; cout < endl ; break ; x = true ; } if ( x = true ) { break ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73266926.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; break ; x = true ; } if ( x = true ) { break ; } } } } } 


score: 0.9629629629629629


728: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73267534.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; cout < endl ; break ; x = true ; } if ( x = true ) { break ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahdi_mef/A_73266926.cpp:11:5

int main ( ) { int a , b ; bool x = false ; cin >> a ; for ( int i = 0 ; i < a ; i ++ ) { cin >> b ; for ( int z = 1 ; z <= b ; z ++ ) { for ( int j = 1 ; j <= b ; j ++ ) { if ( __gcd ( z , j ) + lcm ( z , j ) == b ) { cout << z << " " << j ; break ; x = true ; } if ( x = true ) { break ; } } } } } 


score: 0.9629629629629629


729: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9629629629629629


730: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9617834394904459


731: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9617834394904459


732: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73298143.cpp:5:5

int main ( ) { int n , k = - 1 ; scanf ( "%d" , & n ) ; for ( int i = 1 ; i < n ; i ++ ) scanf ( "%d%d" , & u [ i ] , & v [ i ] ) , a [ u [ i ] ] . push_back ( v [ i ] ) , a [ v [ i ] ] . push_back ( u [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] . size ( ) > 2 ) { k = i ; break ; } if ( k == - 1 ) { for ( int i = 1 ; i < n ; i ++ ) printf ( "%d\n" , i - 1 ) ; return 0 ; } int now = 3 ; for ( int i = 1 ; i < n ; i ++ ) if ( u [ i ] == k ) if ( v [ i ] == a [ k ] [ 0 ] ) printf ( "0\n" ) ; else if ( v [ i ] == a [ k ] [ 1 ] ) printf ( "1\n" ) ; else if ( v [ i ] == a [ k ] [ 2 ] ) printf ( "2\n" ) ; else printf ( "%d\n" , now ++ ) ; else now = now ; else if ( v [ i ] == k ) if ( u [ i ] == a [ k ] [ 0 ] ) printf ( "0\n" ) ; else if ( u [ i ] == a [ k ] [ 1 ] ) printf ( "1\n" ) ; else if ( u [ i ] == a [ k ] [ 2 ] ) printf ( "2\n" ) ; else printf ( "%d\n" , now ++ ) ; else now = now ; else printf ( "%d\n" , now ++ ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/C_73298462.cpp:5:5

int main ( ) { int n , k = - 1 ; scanf ( "%d" , & n ) ; for ( int i = 1 ; i < n ; i ++ ) scanf ( "%d%d" , & u [ i ] , & v [ i ] ) , a [ u [ i ] ] . push_back ( v [ i ] ) , a [ v [ i ] ] . push_back ( u [ i ] ) ; for ( int i = 1 ; i <= n ; i ++ ) if ( a [ i ] . size ( ) > 2 ) { k = i ; break ; } if ( k == - 1 ) { for ( int i = 1 ; i < n ; i ++ ) printf ( "%d\n" , i - 1 ) ; return 0 ; } int now = 3 ; for ( int i = 1 ; i < n ; i ++ ) if ( u [ i ] == k ) { if ( v [ i ] == a [ k ] [ 0 ] ) printf ( "0\n" ) ; else if ( v [ i ] == a [ k ] [ 1 ] ) printf ( "1\n" ) ; else if ( v [ i ] == a [ k ] [ 2 ] ) printf ( "2\n" ) ; else printf ( "%d\n" , now ++ ) ; } else if ( v [ i ] == k ) { if ( u [ i ] == a [ k ] [ 0 ] ) printf ( "0\n" ) ; else if ( u [ i ] == a [ k ] [ 1 ] ) printf ( "1\n" ) ; else if ( u [ i ] == a [ k ] [ 2 ] ) printf ( "2\n" ) ; else printf ( "%d\n" , now ++ ) ; } else printf ( "%d\n" , now ++ ) ; return 0 ; } 


score: 0.9615384615384616


733: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9615384615384616


734: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9615384615384616


735: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:172:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:81:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 0.9615384615384616


736: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:172:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:75:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 0.9615384615384616


737: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:159:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:81:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 0.9615384615384616


738: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:159:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; // cin >> t; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:75:8

signed main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; # ifdef MADHAV freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; freopen ( "error.txt" , "w" , stderr ) ; # endif clock_t t1 , t2 ; t1 = clock ( ) ; int t = 1 ; cin >> t ; while ( t -- ) { solve ( ) ; } # ifdef MADHAV t2 = clock ( ) ; cerr << "time taken: " << ( t2 - t1 ) / ( dbl ) CLOCKS_PER_SEC ; # endif return 0 ; } 


score: 0.9615384615384616


739: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9615384615384616


740: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9615384615384616


741: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788576.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789837.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 


score: 0.9612903225806452


742: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788292.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n + 1 ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789837.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 


score: 0.9612903225806452


743: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73316144.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315753.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ 0 ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.960960960960961


744: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/F_73316117.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= lim ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= lim ; i ++ ) { for ( int j = 1 ; j <= lim ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73315753.cpp:19:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ 0 ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.960960960960961


745: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9603960396039604


746: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9603960396039604


747: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9603960396039604


748: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9603960396039604


749: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mango_lassi/E_73267488.cpp:32:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; vector < int > primes , div_ind ; tie ( primes , div_ind ) = sieve ( A + 1 ) ; int n ; cin >> n ; vector < pair < int , int >> vals ( n ) ; for ( int i = 0 ; i < n ; ++ i ) { int a ; cin >> a ; pair < int , int > res = { - 1 , - 1 } ; while ( a != 1 ) { int j = div_ind [ a ] ; bool pr = 0 ; while ( div_ind [ a ] == j ) { a /= primes [ j ] ; pr ^= 1 ; } int v = ( pr ? j : 1 ) ; if ( v > res . first ) swap ( v , res . first ) ; if ( v > res . second ) swap ( v , res . second ) ; } vals [ i ] = res ; } sort ( vals . begin ( ) , vals . end ( ) ) ; vals . erase ( unique ( vals . begin ( ) , vals . end ( ) ) , vals . end ( ) ) ; if ( vals [ 0 ] . first == - 1 ) cout << 1 << '\n' ; else if ( vals . size ( ) < n ) cout << 2 << '\n' ; else { for ( int i = 0 ; i < N ; ++ i ) { near [ i ] = INF ; for ( int j = 0 ; j < N ; ++ j ) dist [ i ] [ j ] = ( i != j ) * INF ; } int res = INF ; for ( int i = 0 ; i < vals . size ( ) ; ) { int x = vals [ i ] . first ; vector < int > tars ; bool act = false ; int j = i ; while ( j < vals . size ( ) && vals [ j ] . first == x ) { if ( vals [ j ] . second == - 1 ) act = true ; else tars . push_back ( vals [ j ] . second ) ; ++ j ; } // Get cycles with this node for ( int a : tars ) { for ( int b : tars ) { if ( a != b ) res = min ( res , dist [ a ] [ b ] + 2 ) ; } } // Calculate cur for ( int y = 0 ; y < min ( N , x ) ; ++ y ) cur [ y ] = INF ; if ( x < N ) cur [ x ] = 0 ; for ( int a : tars ) { for ( int y = 0 ; y < min ( N , x ) ; ++ y ) { cur [ y ] = min ( cur [ y ] , dist [ y ] [ a ] + 1 ) ; } } // Update shortest paths for ( int a = 0 ; a < min ( N , x + 1 ) ; ++ a ) { for ( int b = 0 ; b < min ( N , x + 1 ) ; ++ b ) { dist [ a ] [ b ] = min ( dist [ a ] [ b ] , cur [ a ] + cur [ b ] ) ; } } // Update nears if ( act ) { for ( int y = 0 ; y < min ( N , x + 1 ) ; ++ y ) { res = min ( res , near [ y ] + cur [ y ] + 1 ) ; near [ y ] = min ( near [ y ] , cur [ y ] + 1 ) ; } } i = j ; /*
			cerr << "Handle edges " << i << ' ' << j << " with endpoint " << x << '\n';
			cerr << "tars: ";
			for (auto v : tars) cerr << v << ' '; cerr << '\n';
			cerr << "distances: ";
			for (int y = 0; y < x; ++y) cerr << dist[y][x] << ' '; cerr << '\n';
			*/ } if ( res == INF ) cout << - 1 << '\n' ; else cout << res << '\n' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mango_lassi/E_73271601.cpp:32:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; vector < int > primes , div_ind ; tie ( primes , div_ind ) = sieve ( A + 1 ) ; int n ; cin >> n ; vector < pair < int , int >> vals ( n ) ; for ( int i = 0 ; i < n ; ++ i ) { int a ; cin >> a ; pair < int , int > res = { - 1 , - 1 } ; while ( a != 1 ) { int j = div_ind [ a ] ; bool pr = 0 ; while ( div_ind [ a ] == j ) { a /= primes [ j ] ; pr ^= 1 ; } int v = ( pr ? j : - 1 ) ; if ( v > res . first ) swap ( v , res . first ) ; if ( v > res . second ) swap ( v , res . second ) ; } vals [ i ] = res ; } sort ( vals . begin ( ) , vals . end ( ) ) ; vals . erase ( unique ( vals . begin ( ) , vals . end ( ) ) , vals . end ( ) ) ; if ( vals [ 0 ] . first == - 1 ) cout << 1 << '\n' ; // Some number is a square else if ( vals . size ( ) < n ) cout << 2 << '\n' ; // Some edge appears twice else { for ( int i = 0 ; i < N ; ++ i ) { near [ i ] = INF ; for ( int j = 0 ; j < N ; ++ j ) dist [ i ] [ j ] = ( i != j ) * INF ; } int res = INF ; for ( int i = 0 ; i < vals . size ( ) ; ) { int x = vals [ i ] . first ; vector < int > tars ; bool act = false ; int j = i ; while ( j < vals . size ( ) && vals [ j ] . first == x ) { if ( vals [ j ] . second == - 1 ) act = true ; else tars . push_back ( vals [ j ] . second ) ; ++ j ; } // Get cycles with this node for ( int a : tars ) { for ( int b : tars ) { if ( a != b ) res = min ( res , dist [ a ] [ b ] + 2 ) ; } } // Calculate cur for ( int y = 0 ; y < N ; ++ y ) cur [ y ] = INF ; if ( x < N ) cur [ x ] = 0 ; for ( int a : tars ) { for ( int y = 0 ; y < N ; ++ y ) { cur [ y ] = min ( cur [ y ] , dist [ y ] [ a ] + 1 ) ; } } // Update nears if ( act ) { for ( int y = 0 ; y < N ; ++ y ) { res = min ( res , near [ y ] + cur [ y ] + 1 ) ; near [ y ] = min ( near [ y ] , cur [ y ] + 1 ) ; } } // Update shortest paths for ( int a = 0 ; a < N ; ++ a ) { for ( int b = 0 ; b < N ; ++ b ) { dist [ a ] [ b ] = min ( dist [ a ] [ b ] , cur [ a ] + cur [ b ] ) ; near [ a ] = min ( near [ a ] , near [ b ] + dist [ a ] [ b ] ) ; } } i = j ; } if ( res > n ) cout << - 1 << '\n' ; else cout << res << '\n' ; } } 


score: 0.9589905362776026


750: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9588688946015425


751: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9588688946015425


752: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9588688946015425


753: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9588688946015425


754: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73303408.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } } 


score: 0.9583333333333334


755: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302925.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } outendl ( ) ; exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } used . pop_back ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lunabbit/F_73302402.cpp:102:6

void func ( int place ) { used . push_back ( place ) ; depth [ place ] = used . size ( ) ; foreach ( i , edges [ place ] ) { if ( depth [ i ] ) { int dis = depth [ place ] - depth [ i ] + 1 ; if ( dis >= sqn ) { cout << 2 << endl ; cout << dis << endl ; while ( true ) { int place = used . back ( ) ; output ( place ) ; if ( place == i ) break ; used . pop_back ( ) ; } exit ( 0 ) ; } } else { func ( i ) ; } } if ( ! cant [ place ] ) { cant [ place ] = true ; foreach ( i , edges [ place ] ) { cant [ i ] = true ; } distinct . push_back ( place ) ; } } 


score: 0.9583333333333334


756: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:65:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; i ++ ) printf ( "%d " , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.957983193277311


757: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9578059071729957


758: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:65:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; i ++ ) printf ( "%d " , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9576271186440678


759: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9573170731707317


760: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; // sq = 1; sq = ceil ( sqrt ( n ) ) ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368503.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = 1 ; // sq = ceil(sqrt(n)); while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 


score: 0.9571428571428572


761: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9567901234567902


762: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9567901234567902


763: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73389524.cpp:96:5

int main ( ) { pre ( 1e6 ) , n = read ( ) ; for ( rint i = 1 ; i <= n ; i ++ ) { int x = read ( ) ; vector < int > inc ; sieve ( x , inc ) ; if ( inc . size ( ) == 0 ) { // 1 puts ( "1" ) ; exit ( 0 ) ; } inc . push_back ( 0 ) ; //printf("%d: ", i); //for (auto v: inc) printf("%d ", v); //puts(""); add ( inc [ 1 ] , inc [ 0 ] ) ; add ( inc [ 0 ] , inc [ 1 ] ) ; } int ans = 1e9 ; for ( rint i = 0 ; pr [ i ] <= 1000 ; i ++ ) { //printf("%d\n", i); ans = min ( ans , bfs ( i ) ) ; } if ( ans == 1e9 ) ans = - 1 ; printf ( "%d\n" , ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73390274.cpp:99:5

int main ( ) { pre ( 1e6 ) , n = read ( ) ; for ( rint i = 1 ; i <= n ; i ++ ) { int x = read ( ) ; vector < int > inc ; sieve ( x , inc ) ; if ( inc . size ( ) == 0 ) { // 1 puts ( "1" ) ; exit ( 0 ) ; } inc . push_back ( 1 ) ; //printf("%d: ", i); //for (auto v: inc) printf("%d ", v); //puts(""); add ( inc [ 1 ] , inc [ 0 ] ) ; add ( inc [ 0 ] , inc [ 1 ] ) ; } int ans = 1e9 ; for ( rint i = 1 ; pr [ i ] <= 1000 ; i ++ ) { //printf("%d\n", i); ans = min ( ans , bfs ( i ) ) ; } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; return 0 ; } 


score: 0.9565217391304348


764: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


765: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


766: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


767: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


768: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


769: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


770: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


771: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


772: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


773: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330605.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


774: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333708.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


775: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73335889.cpp:43:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


776: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


777: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


778: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


779: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333571.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


780: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ v ] - dep [ u ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ v ] - dep [ u ] + 1 ) ; for ( int i = v ; i != u ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , u ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


781: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


782: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


783: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73330540.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != fa [ v ] ; i = fa [ i ] ) printf ( "%d " , i ) ; puts ( "" ) ; exit ( 0 ) ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:44:6

void dfs ( int u ) { int v ; vis [ u ] = 1 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( ! vis [ v = e [ i ] . to ] ) { dep [ v ] = dep [ u ] + 1 ; fa [ v ] = u ; dfs ( v ) ; } else if ( dep [ u ] - dep [ v ] >= V - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int i = u ; i != v ; i = fa [ i ] ) printf ( "%d " , i ) ; printf ( "%d\n" , v ) ; exit ( 0 ) ; } } 


score: 0.9565217391304348


784: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9563106796116505


785: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9563106796116505


786: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9563106796116505


787: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9563106796116505


788: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95625


789: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95625


790: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95625


791: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95625


792: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95625


793: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 


score: 0.9555555555555556


794: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:19:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } 


score: 0.9555555555555556


795: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 


score: 0.9547325102880658


796: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 


score: 0.9547325102880658


797: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 


score: 0.9547325102880658


798: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:50:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:51:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } ll ExtGCD ( ll a , ll b , ll & x , ll & y ) { if ( ! b ) { x = 1 ; y = 0 ; re a ; } ll r = ExtGCD ( b , a % b , y , x ) ; y -= a / b * x ; re r ; } ll mult ( ll a , ll b ) { re ( 1LL * a * b ) % MOD ; } 


score: 0.9547325102880658


799: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


800: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73657743.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


801: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


802: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73657636.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


803: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73659788.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73585766.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


804: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73659663.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } else if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73585766.cpp:25:6

void dfs ( int u , int fa ) { dfn [ u ] = dfn [ fa ] + 1 ; sta [ ++ top ] = u ; for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; if ( v == fa ) continue ; if ( ! dfn [ v ] ) { dfs ( v , u ) ; } if ( ( dfn [ u ] - dfn [ v ] + 1 ) >= t ) { printf ( "2\n" ) ; printf ( "%d\n" , dfn [ u ] - dfn [ v ] + 1 ) ; for ( int i = dfn [ v ] ; i <= dfn [ u ] ; i ++ ) printf ( "%d " , sta [ i ] ) ; exit ( 0 ) ; } } if ( ! vis [ u ] ) { for ( Edge * p = h [ u ] ; p ; p = p -> next ) { int v = p -> v ; vis [ v ] = 1 ; } } top -- ; } 


score: 0.9545454545454546


805: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9539951573849879


806: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9537815126050421


807: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9537815126050421


808: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73270714.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( v == 2 && u == 0 ) { printf ( "2\n" ) ; printf ( "1 1" ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73294122.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 0.9534883720930233


809: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


810: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


811: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


812: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


813: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


814: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


815: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


816: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


817: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


818: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


819: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


820: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


821: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


822: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


823: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.9533527696793003


824: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:65:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } int modinv ( int a , int mod = MOD ) { return takemod ( fast_exp ( takemod ( a ) , mod - 2 , mod ) , mod ) ; } 


score: 0.9533527696793003


825: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.952020202020202


826: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9518987341772152


827: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73509327.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73443081.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 


score: 0.9518072289156626


828: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73509327.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73442997.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; } 


score: 0.9518072289156626


829: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9516908212560387


830: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9515738498789347


831: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


832: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


833: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


834: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


835: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


836: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9514563106796117


837: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9512195121951219


838: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9512195121951219


839: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9512195121951219


840: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9512195121951219


841: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9512195121951219


842: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9512195121951219


843: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9512195121951219


844: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9512195121951219


845: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 


score: 0.95


846: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 


score: 0.95


847: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 


score: 0.95


848: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:48:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:49:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } ll PowMod ( ll bs , ll ex , ll M ) { if ( ! ex ) re 1 ; ll p = PowMod ( ( bs * bs ) % M , ex >> 1 , M ) ; re ( ex & 1 ) ? ( p * bs ) % M : p ; } ll ModInverse ( ll a ) { re PowMod ( a , MOD - 2 , MOD ) ; } 


score: 0.95


849: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.95


850: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73327073.cpp:61:5

int main ( ) { n = rd ( ) ; init ( ) ; ans = 1e9 ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) ans = 1 ; if ( vis [ a [ i ] ] ) chkmin ( ans , 2 ) ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; if ( A == 1 && B == 1 ) return puts ( "1" ) , 0 ; } memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73326835.cpp:61:5

int main ( ) { n = rd ( ) ; init ( ) ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) return puts ( "1" ) , 0 ; if ( vis [ a [ i ] ] ) return puts ( "2" ) , 0 ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; } ans = 1e9 ; memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 


score: 0.949748743718593


851: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73335876.cpp:60:5

int main ( ) { n = rd ( ) ; init ( ) ; ans = 1e9 ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) ans = 1 ; if ( vis [ a [ i ] ] ) chkmin ( ans , 2 ) ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; if ( A == 1 && B == 1 ) return puts ( "1" ) , 0 ; } memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/E_73326835.cpp:61:5

int main ( ) { n = rd ( ) ; init ( ) ; for ( int A , B , i = 1 ; i <= n ; ++ i ) { a [ i ] = rd ( ) ; if ( sqr ( a [ i ] ) ) return puts ( "1" ) , 0 ; if ( vis [ a [ i ] ] ) return puts ( "2" ) , 0 ; vis [ a [ i ] ] = 1 ; A = B = 1 ; for ( int x , j = 1 ; j <= num ; ++ j ) if ( a [ i ] % p [ j ] == 0 ) { for ( x = 0 ; a [ i ] % p [ j ] == 0 ; x ^= 1 , a [ i ] /= p [ j ] ) ; if ( x ) { if ( A == 1 ) A = p [ j ] ; else B = p [ j ] ; } } if ( a [ i ] != 1 ) B = a [ i ] ; add ( A , B ) ; } ans = 1e9 ; memset ( dis , 127 , sizeof ( dis ) ) ; for ( int x = 1 ; x <= 1000 ; ++ x ) { q [ hd = tl = 1 ] = x ; dis [ x ] = 0 ; fa [ x ] = - 1 ; for ( int u , v , flg ; hd <= tl ; ) { u = q [ hd ++ ] ; flg = 0 ; for ( int i = h [ u ] ; i ; i = e [ i ] . nxt ) if ( dis [ v = e [ i ] . to ] > dis [ u ] + 1 ) { dis [ v ] = dis [ u ] + 1 ; fa [ v ] = u ; q [ ++ tl ] = v ; } else if ( fa [ u ] == v && ! flg ) flg = 1 ; else chkmin ( ans , dis [ u ] + dis [ v ] + 1 ) ; } for ( int i = 1 ; i <= tl ; ++ i ) dis [ q [ i ] ] = dis [ 0 ] ; } printf ( "%d\n" , ans < inf ? ans : - 1 ) ; return 0 ; } 


score: 0.949748743718593


852: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:65:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq <= n ) sq ++ ; sq -- ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; for ( int i = 0 ; i < sq ; i ++ ) printf ( "%d " , ans1 [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:66:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d%d" , & n , & m ) ; for ( int i = 0 ; i < m ; i ++ ) { int x , y ; scanf ( "%d%d" , & x , & y ) ; Addedge ( x , y ) ; deg [ x ] ++ ; deg [ y ] ++ ; } int sq = 0 ; while ( sq * sq < n ) sq ++ ; for ( int i = 1 ; i <= n ; i ++ ) q . push ( Node { i , deg [ i ] } ) ; vector < int > ans1 ; while ( ! q . empty ( ) ) { Node u = q . top ( ) ; q . pop ( ) ; //printf("quchu %d\n",u.id); if ( del [ u . id ] ) continue ; if ( u . deg + 1 >= sq ) { printf ( "2\n" ) ; Dfs ( u . id ) ; return 0 ; } else { del [ u . id ] = 1 ; ans1 . push_back ( u . id ) ; for ( int i = 0 ; i < g [ u . id ] . size ( ) ; i ++ ) del [ g [ u . id ] [ i ] ] = 1 ; } } printf ( "1\n" ) ; printf ( "%d" , ans1 [ 0 ] ) ; for ( int i = 1 ; i < sq ; i ++ ) printf ( " %d" , ans1 [ i ] ) ; } 


score: 0.9495798319327731


853: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9494949494949495


854: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9492753623188406


855: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9491525423728814


856: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9491525423728814


857: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9491094147582697


858: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9491094147582697


859: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9491094147582697


860: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:72:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 1005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 0.9490445859872612


861: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73499953.cpp:83:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 1005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 0.9490445859872612


862: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.948849104859335


863: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhur4127/C_73484287.cpp:265:9

int32_t main ( void ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; cout << fixed << setprecision ( 13 ) ; cerr << fixed << setprecision ( 3 ) ; FastIO :: Reader cin ; FastIO :: Writer cout ; int n ; cin >> n ; adj . resize ( n ) ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int u , v ; cin >> u >> v ; -- u , -- v ; adj [ u ] . eb ( v , i ) ; adj [ v ] . eb ( u , i ) ; } int ct = 0 ; vv < int > ans ( n - 1 , - 1 ) ; for ( int i = 0 ; i < n ; ++ i ) { if ( SZ ( adj [ i ] ) == 1 ) { q . push_back ( i ) ; } } while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop_front ( ) ; for ( auto & [ v , idx ] : adj [ u ] ) { if ( ans [ idx ] == - 1 ) { ans [ idx ] = ct ++ ; q . push_back ( v ) ; } } } for ( auto i : ans ) cout << i << el ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhur4127/C_73483784.cpp:42:9

int32_t main ( void ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; cout << fixed << setprecision ( 13 ) ; cerr << fixed << setprecision ( 3 ) ; int n ; cin >> n ; adj . resize ( n ) ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int u , v ; cin >> u >> v ; -- u , -- v ; adj [ u ] . eb ( v , i ) ; adj [ v ] . eb ( u , i ) ; } int ct = 0 ; vv < int > ans ( n - 1 , - 1 ) ; for ( int i = 0 ; i < n ; ++ i ) { if ( SZ ( adj [ i ] ) == 1 ) { q . push_back ( i ) ; } } while ( ! q . empty ( ) ) { int u = q . front ( ) ; q . pop_front ( ) ; for ( auto & p : adj [ u ] ) { int v = p . first , idx = p . second ; if ( ans [ idx ] == - 1 ) { ans [ idx ] = ct ++ ; q . push_back ( v ) ; } } } for ( auto i : ans ) cout << i << el ; return 0 ; } 


score: 0.9487179487179487


864: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.946969696969697


865: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.946969696969697


866: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.946969696969697


867: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9468599033816425


868: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9468599033816425


869: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9468354430379747


870: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9468354430379747


871: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323775.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } memset ( e , 0x3f , sizeof ( e ) ) ; memset ( e2 , 0x3f , sizeof ( e2 ) ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9467787114845938


872: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9466019417475728


873: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9466019417475728


874: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373538.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9465648854961832


875: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9462915601023018


876: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.946058091286307


877: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.946058091286307


878: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.946058091286307


879: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.946058091286307


880: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:53:6

void solve ( ) { int ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vi dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < int > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { int s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:53:6

void solve ( ) { ll ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vll dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < ll > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { ll s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9459459459459459


881: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:53:6

void solve ( ) { ll ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vll dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < ll > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { ll s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:53:6

void solve ( ) { int ans = INT_MAX ; f ( src , 1 , 1005 ) { // vll visited; // visited.pb(src); // dist[src] = 0; vi dist ( 1e6 + 5 , 1e9 ) ; dist [ src ] = 0 ; queue < int > qu ; qu . push ( src ) ; while ( ! qu . empty ( ) ) { int s = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ s ] ) { if ( dist [ s ] + 1 < dist [ child ] ) { dist [ child ] = 1 + dist [ s ] ; qu . push ( child ) ; } else if ( dist [ s ] <= dist [ child ] ) { ans = min ( ans , 1 + dist [ s ] + dist [ child ] ) ; } } } // for(auto i : visited) // { //     dist[i] = -1; //     par[i] = -1; // } } if ( ans == INT_MAX ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9459459459459459


882: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449921.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73425342.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < a [ i ] ) { while ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) { j ++ ; k ++ ; } j ++ ; } j = 0 ; k = 0 ; d [ i ] = a [ i ] - k ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 


score: 0.9454545454545454


883: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73425342.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < a [ i ] ) { while ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) { j ++ ; k ++ ; } j ++ ; } j = 0 ; k = 0 ; d [ i ] = a [ i ] - k ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449367.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; return 0 ; } 


score: 0.9454545454545454


884: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9451219512195121


885: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9450980392156862


886: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9450980392156862


887: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9450980392156862


888: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9450980392156862


889: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9447236180904522


890: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9447236180904522


891: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9447236180904522


892: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9445628997867804


893: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9445628997867804


894: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9445628997867804


895: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9445628997867804


896: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9444444444444444


897: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9444444444444444


898: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9444444444444444


899: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9444444444444444


900: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9443099273607748


901: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; //cout << norm(n) << "\n"; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << ' '; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } //cout << "\n"; f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9441340782122905


902: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << ' '; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } //cout << "\n"; f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9441340782122905


903: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845955.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << ' '; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } //cout << "\n"; f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9441340782122905


904: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789597.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73790536.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > temp = tree [ i ] [ 0 ] ; tree [ temp . first ] [ i ] . second = counter ; temp . second = counter ++ ; tree [ i ] [ 0 ] = temp ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.9440559440559441


905: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9440203562340967


906: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9440203562340967


907: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9440203562340967


908: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:73:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73462411.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 


score: 0.944


909: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:73:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/E_73462344.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 


score: 0.944


910: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/E_73462411.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:75:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.944


911: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/E_73462344.cpp:72:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",x); if ( x == 1 ) { printf ( "%d" , B [ i ] ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } printf ( "%d" , ans ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:75:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.944


912: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/C_73369243.cpp:140:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , v1 , v2 , i , cnt1 , cnt2 , n2 ; cin >> n ; vector < vector < int >> Graph ( n + 1 ) ; vector < int > deg ( n + 1 ) ; vector < pair < int , int >> edges ; n2 = n - 1 ; while ( n2 -- ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; if ( v1 > v2 ) swap ( v1 , v2 ) ; edges . push_back ( { v1 , v2 } ) ; ++ deg [ v1 ] , ++ deg [ v2 ] ; } for ( i = 1 ; i <= n ; ++ i ) if ( deg [ i ] == 3 ) break ; cnt1 = 0 , cnt2 = 3 ; if ( i == n + 1 ) cnt2 = 0 ; for ( auto e : edges ) { if ( e . first == i || e . second == i ) cout << cnt1 ++ ; else cout << cnt2 ++ ; cout << '\n' ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/C_73369504.cpp:140:6

auto main ( ) -> int { ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; int n , v1 , v2 , i , cnt1 , cnt2 , n2 ; cin >> n ; vector < vector < int >> Graph ( n + 1 ) ; vector < int > deg ( n + 1 ) ; vector < pair < int , int >> edges ; n2 = n - 1 ; while ( n2 -- ) { cin >> v1 >> v2 ; Graph [ v1 ] . push_back ( v2 ) ; Graph [ v2 ] . push_back ( v1 ) ; edges . push_back ( { v1 , v2 } ) ; ++ deg [ v1 ] , ++ deg [ v2 ] ; } for ( i = 1 ; i <= n ; ++ i ) if ( deg [ i ] >= 3 ) break ; cnt1 = 0 , cnt2 = 3 ; if ( i == n + 1 ) cnt2 = 0 ; for ( auto e : edges ) { if ( ( e . first == i || e . second == i ) && cnt1 != 3 ) cout << cnt1 ++ ; else cout << cnt2 ++ ; cout << '\n' ; } } 


score: 0.9439252336448598


913: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73877747.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; //cout << norm(n) << "\n"; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9438202247191011


914: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73853813.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9438202247191011


915: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73854207.cpp:93:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; //cout << norm(7)<< "  raj\n"; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = 2 * i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } // for(auto i : prime[7]) // cout << i <<' '; // cout << '\n'; bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { //cout << arr[i] << " "; arr [ i ] = norm ( arr [ i ] ) ; //cout << arr[i] << '\n'; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; //for(auto z : prime[arr[i]]) cout << z << " "; //cout << "\n\n"; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << arr[i] << "  --> " << p << " " << q << '\n'; } } //cout << "\n"; // f(i,0,1000005) // { //     par[i] = -1; //     dist[i] = -1; // } //cout << "raj\n"; solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73845596.cpp:94:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 2 , 1000005 ) { if ( vis [ i ] ) continue ; prime [ i ] . pb ( i ) ; for ( int j = i ; j < 1000005 ; j += i ) { vis [ j ] = true ; prime [ j ] . pb ( i ) ; } } bool flag = false ; cin >> n ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( arr [ i ] == 1 ) flag = true ; } if ( flag ) { cout << 1 ; return 0 ; } f ( i , 0 , 1000005 ) vis [ i ] = false ; f ( i , 0 , n ) { arr [ i ] = norm ( arr [ i ] ) ; if ( arr [ i ] == 1 || vis [ arr [ i ] ] ) { if ( arr [ i ] == 1 ) cout << 1 ; else if ( vis [ arr [ i ] ] ) cout << 2 ; return 0 ; } vis [ arr [ i ] ] = true ; ll len = prime [ arr [ i ] ] . size ( ) ; if ( len == 1 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = 1 ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } else if ( len == 2 ) { ll p = prime [ arr [ i ] ] [ 0 ] ; ll q = prime [ arr [ i ] ] [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } } f ( i , 0 , 1000005 ) { par [ i ] = - 1 ; dist [ i ] = - 1 ; } //cout << "raj\n"; solve ( ) ; return 0 ; } 


score: 0.9438202247191011


916: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.94375


917: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.94375


918: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9437340153452686


919: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9437340153452686


920: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Ma3str0/C_73271190.cpp:21:5

int main ( ) { # ifdef _DEBUG freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; # endif ios :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll t = 0 , n , m , k , l , r ; cin >> n ; ll mx = 0 , ver = 0 ; vector < pair < ll , ll >> ans ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> l >> r ; g [ l ] . pb ( r ) ; g [ r ] . pb ( l ) ; ans . pb ( { l , r } ) ; } queue < ll > q ; for ( int i = 1 ; i < 100001 ; i ++ ) if ( g [ i ] . size ( ) == 1 ) { q . push ( i ) ; } vector < ll > pos ; for ( int i = 0 ; i < n ; i ++ ) { pos . push_back ( i ) ; } ll w = 0 ; while ( q . size ( ) ) { ll p = q . front ( ) ; q . pop ( ) ; used [ p ] = 1 ; for ( auto & e : g [ p ] ) { if ( color [ p ] [ e ] ) continue ; color [ p ] [ e ] = pos [ w ] ; color [ e ] [ p ] = pos [ w ] ; w ++ ; q . push ( e ) ; } } for ( int i = 0 ; i < n - 1 ; i ++ ) cout << color [ ans [ i ] . fs ] [ ans [ i ] . sc ] << '\n' ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Ma3str0/C_73272185.cpp:21:5

int main ( ) { # ifdef _DEBUG freopen ( "input.txt" , "r" , stdin ) ; freopen ( "output.txt" , "w" , stdout ) ; # endif ios :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll t = 0 , n , m , k , l , r ; cin >> n ; ll mx = 0 , ver = 0 ; vector < pair < ll , ll >> ans ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> l >> r ; g [ l ] . pb ( r ) ; g [ r ] . pb ( l ) ; ans . pb ( { l , r } ) ; } queue < ll > q ; for ( int i = 1 ; i < 100001 ; i ++ ) if ( g [ i ] . size ( ) == 1 ) { q . push ( i ) ; used [ i ] = 1 ; } vector < ll > pos ; for ( int i = 0 ; i < n ; i ++ ) { pos . push_back ( i + 1 ) ; } ll w = 0 ; while ( q . size ( ) ) { ll p = q . front ( ) ; q . pop ( ) ; used [ p ] = 1 ; for ( auto & e : g [ p ] ) { if ( ! color [ p ] [ e ] ) { color [ p ] [ e ] = pos [ w ] ; color [ e ] [ p ] = pos [ w ] ; w ++ ; } if ( ! used [ e ] ) q . push ( e ) ; } } for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << color [ ans [ i ] . fs ] [ ans [ i ] . sc ] - 1 << '\n' ; } 


score: 0.9433962264150944


921: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73509327.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73508168.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; deg [ v ] = Graph [ v ] . size ( ) ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 


score: 0.9431818181818182


922: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9429824561403509


923: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9429824561403509


924: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9429824561403509


925: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9429824561403509


926: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maaddy/D_73334223.cpp:21:5

int main ( ) { FASTIO ; ll x , s ; cin >> x >> s ; ll ans [ 3 ] ; memset ( ans , 0 , sizeof ans ) ; ll len = 1 ; ans [ 0 ] = x ; s -= x ; if ( s < 0 || s & 1 ) return cout << - 1 << endl , 0 ; for ( ll k = 1 ; k < 61 ; k ++ ) { if ( s & ( 1ll << k ) ) { if ( x & ( 1ll << ( k - 1 ) ) ) { ans [ 1 ] |= ( 1ll << ( k - 1 ) ) ; ans [ 2 ] |= ( 1ll << ( k - 1 ) ) ; len = 3 ; } else { ans [ 1 ] |= ( 1ll << ( k - 1 ) ) ; ans [ 0 ] |= ( 1ll << ( k - 1 ) ) ; len = max ( len , 2ll ) ; } } } if ( ans [ 0 ] == 0 ) return cout << 0 << endl , 0 ; cout << len << endl ; for ( int k = 0 ; k < len ; k ++ ) cout << ans [ k ] << " " ; cout << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maaddy/D_73334025.cpp:21:5

int main ( ) { FASTIO ; ll x , s ; cin >> x >> s ; ll ans [ 3 ] ; memset ( ans , 0 , sizeof ans ) ; ll len = 1 ; ans [ 0 ] = x ; s -= x ; if ( s < 0 || s & 1 ) return cout << - 1 << endl , 0 ; for ( ll k = 1 ; k < 61 ; k ++ ) { if ( s & ( 1 << k ) ) { if ( x & ( 1 << ( k - 1 ) ) ) { ans [ 1 ] |= ( 1 << ( k - 1 ) ) ; ans [ 2 ] |= ( 1 << ( k - 1 ) ) ; len = 3 ; } else { ans [ 1 ] |= ( 1 << ( k - 1 ) ) ; ans [ 0 ] |= ( 1 << ( k - 1 ) ) ; len = max ( len , 2ll ) ; } } } if ( ans [ 0 ] == 0 ) return cout << 0 << endl , 0 ; cout << len << endl ; for ( int k = 0 ; k < len ; k ++ ) cout << ans [ k ] << " " ; cout << endl ; return 0 ; } 


score: 0.9428571428571428


927: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322380.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73319375.cpp:18:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9428571428571428


928: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 1005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 


score: 0.9426751592356688


929: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9422110552763819


930: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9421487603305785


931: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9420289855072463


932: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9419191919191919


933: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9419191919191919


934: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/m4h/E_73557806.cpp:18:5

int main ( ) { ios :: sync_with_stdio ( 0 ) , cin . tie ( 0 ) ; V < int > pr ; for ( int i = 2 ; i < sqA ; i ++ ) { for ( int p : pr ) if ( i % p == 0 ) goto not_pr ; pr . pb ( i ) ; not_pr : ; } int n ; cin >> n ; V < int > src ; { int m = 0 ; bool c2 = 0 ; map < int , int > idx ; for ( int i = 0 ; i < n ; i ++ ) { int x ; cin >> x ; int a = 0 , b = 1 ; for ( int p : pr ) if ( x % p == 0 ) { while ( x % ( p * p ) == 0 ) x /= p * p ; if ( x % p ) continue ; ( a ? b : a ) = p ; x /= p ; } if ( x > 1 ) ( a ? b : a ) = x ; if ( ! a ) { cout << 1 ; return 0 ; } if ( ! idx . count ( a ) ) { if ( a < sqA ) src . pb ( m ) ; idx [ a ] = m ++ ; } if ( ! idx . count ( b ) ) { if ( b < sqA ) src . pb ( m ) ; idx [ b ] = m ++ ; } a = idx [ a ] ; b = idx [ b ] ; c2 |= ( e [ a ] . count ( b ) ) ; e [ a ] . insert ( b ) ; e [ b ] . insert ( a ) ; } if ( c2 ) { cout << 2 ; return 0 ; } } int ans = 1e9 ; for ( int a : src ) { V < int > dst ( N ) ; queue < pii > bfs ; bfs . push ( { a , a } ) ; dst [ a ] = 1 ; while ( bfs . size ( ) ) { auto [ v , p ] = bfs . front ( ) ; bfs . pop ( ) ; int d = dst [ v ] ; if ( d * 2 > ans ) break ; for ( int u : e [ v ] ) if ( u != p ) { if ( dst [ u ] ) ans = min ( ans , d + dst [ u ] - 1 ) ; else { dst [ u ] = d + 1 ; bfs . push ( { u , v } ) ; } } } } cout << ( ans == 1e9 ? - 1 : ans ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/m4h/E_73557765.cpp:38:5

int main ( ) { ios :: sync_with_stdio ( 0 ) , cin . tie ( 0 ) ; V < int > pr ; for ( int i = 2 ; i < sqA ; i ++ ) { for ( int p : pr ) if ( i % p == 0 ) goto not_pr ; pr . pb ( i ) ; not_pr : ; } int n ; cin >> n ; V < int > src ; { int m = 0 ; bool c2 = 0 ; map < int , int > idx ; for ( int i = 0 ; i < n ; i ++ ) { int x ; cin >> x ; int a = 0 , b = 1 ; for ( int p : pr ) if ( x % p == 0 ) { while ( x % ( p * p ) == 0 ) x /= p * p ; if ( x % p ) continue ; ( a ? b : a ) = p ; x /= p ; } if ( x > 1 ) ( a ? b : a ) = x ; if ( ! a ) { cout << 1 ; return 0 ; } if ( ! idx . count ( a ) ) { if ( a < sqA ) src . pb ( m ) ; idx [ a ] = m ++ ; } if ( ! idx . count ( b ) ) { if ( b < sqA ) src . pb ( m ) ; idx [ b ] = m ++ ; } a = idx [ a ] ; b = idx [ b ] ; c2 |= ( e [ a ] . count ( b ) ) ; e [ a ] . insert ( b ) ; e [ b ] . insert ( a ) ; } if ( c2 ) { cout << 2 ; return 0 ; } } // find cycles for ( int a : src ) if ( ! tin [ a ] ) bico ( a , a ) ; int ans = 1e9 ; for ( int a : src ) { if ( ! cyclic [ a ] ) continue ; V < int > dst ( N ) ; queue < pii > bfs ; bfs . push ( { a , a } ) ; dst [ a ] = 1 ; while ( bfs . size ( ) ) { auto [ v , p ] = bfs . front ( ) ; bfs . pop ( ) ; int d = dst [ v ] ; if ( d * 2 > ans ) break ; for ( int u : e [ v ] ) if ( u != p ) { if ( dst [ u ] ) ans = min ( ans , d + dst [ u ] - 1 ) ; else { dst [ u ] = d + 1 ; bfs . push ( { u , v } ) ; } } } } cout << ( ans == 1e9 ? - 1 : ans ) ; } 


score: 0.941908713692946


935: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9418886198547215


936: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9418886198547215


937: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9418886198547215


938: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9417721518987342


939: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9417721518987342


940: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9417670682730924


941: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9417670682730924


942: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9417670682730924


943: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9417670682730924


944: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373805.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9414758269720102


945: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9413092550790068


946: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9413092550790068


947: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9413092550790068


948: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9413092550790068


949: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9411764705882353


950: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9411764705882353


951: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73377061.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { printf ( "1\n" ) ; printf ( "%lld\n" , u ) ; return 0 ; } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73376553.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { printf ( "0\n" ) ; return 0 ; } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 


score: 0.9411764705882353


952: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335066.cpp:28:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : edge ) { bitset < 1000005 > visited , used ; visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; map < ll , ll > shortest ; bfs . push_back ( mp ( mp ( x . first , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9408284023668639


953: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucky_21/C_73309882.cpp:33:8

signed main ( ) { FastIO ; int n ; cin >> n ; vector < pii > order ; vector < int > v [ n + 5 ] ; map < pii , int > ans ; int cnt = 0 ; rep ( i , 1 , n - 1 ) { int a , b ; cin >> a >> b ; if ( a > b ) swap ( a , b ) ; v [ a ] . pb ( b ) ; v [ b ] . pb ( a ) ; order . pb ( { a , b } ) ; } rep ( i , 1 , n ) { if ( v [ i ] . size ( ) == 1 ) { int a = i , b = v [ i ] [ 0 ] ; if ( a > b ) swap ( a , b ) ; if ( ans . count ( { a , b } ) ) continue ; ans [ { a , b } ] = cnt ++ ; } } for ( pii p : order ) { if ( ans . count ( p ) ) { cout << ans [ p ] << '\n' ; } else { cout << cnt ++ << '\n' ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucky_21/C_73309619.cpp:33:8

signed main ( ) { FastIO ; int n ; cin >> n ; vector < pii > order ; vector < int > v [ n + 5 ] ; map < pii , int > ans ; int cnt = 0 ; rep ( i , 1 , n - 1 ) { int a , b ; cin >> a >> b ; if ( a > b ) swap ( a , b ) ; v [ a ] . pb ( b ) ; v [ b ] . pb ( a ) ; order . pb ( { a , b } ) ; } rep ( i , 1 , n ) { if ( v [ i ] . size ( ) == 1 ) { int a = i , b = v [ i ] [ 0 ] ; if ( a > b ) swap ( a , b ) ; ans [ { a , b } ] = cnt ++ ; } } for ( pii p : order ) { if ( ans . count ( p ) ) { cout << ans [ p ] << '\n' ; } else { cout << cnt ++ << '\n' ; } } return 0 ; } 


score: 0.9405940594059405


954: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272416.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; cout << a << " " << b << '\n' ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { cout << cnt [ i ] << '\n' ; if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MahdiGMK/D_73272991.cpp:48:5

int main ( ) { ll a , b ; cin >> a >> b ; if ( a == 0 ) cout << 0 ; else { if ( a == b ) cout << 1 << '\n' << a ; else { b -= a ; if ( b % 2 || b < 0 ) { cout << - 1 ; } else { v < int > allBits2Add ; for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( a & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i ) ; } } for ( ll i = 0 ; i < 60 ; i ++ ) { if ( ( b & ( ll ( 1 ) << i ) ) == ( ll ( 1 ) << i ) ) { allBits2Add . pb ( i - 1 ) ; allBits2Add . pb ( i - 1 ) ; } } for ( var idx : allBits2Add ) { cnt [ idx ] ++ ; } bool should3 = false ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] == 3 ) should3 = true ; } if ( should3 ) { cout << "3\n" << a << " " << b / 2 << ' ' << b / 2 ; } else { ll frst = 0 ; ll scnd = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { if ( cnt [ i ] > 0 ) frst += ( 1 << i ) ; if ( cnt [ i ] > 1 ) scnd += ( 1 << i ) ; } cout << "2\n" << frst << ' ' << scnd ; } } } } } 


score: 0.9403973509933775


955: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/D_73272884.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { if ( u == 0 ) cout << 0 ; else { cout << 1 << '\n' ; cout << u ; } return 0 ; } if ( ( v - u ) % 2 == 1 ) { cout << - 1 ; return 0 ; } ll dif = ( v - u ) / 2 ; ll bit = 0 ; ll temp = v ; ll ans1 = 0 , ans2 = 0 ; while ( temp > 0 ) { temp = temp >> 1 ; bit ++ ; } //cout << bit <<'\n'; bool flag = false ; f ( i , 0 , bit ) { ll vv = ( u & ( 1 << i ) ) ; ll di = ( dif & ( 1 << i ) ) ; if ( vv == 0 && di > 0 ) { ans1 = ( ( 1 << i ) | ans1 ) ; ans2 = ( ( 1 << i ) | ans2 ) ; } else if ( vv > 0 && di == 0 ) { ans1 = ( ( 1 << i ) | ans1 ) ; } else if ( di > 0 && vv > 0 ) { flag = true ; break ; } } if ( flag ) { cout << 3 << '\n' ; cout << u << " " << dif << ' ' << dif ; return 0 ; } cout << 2 << "\n" ; cout << min ( ans1 , ans2 ) << ' ' << max ( ans1 , ans2 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/D_73272311.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 0 ; return 0 ; } if ( ( v - u ) % 2 == 1 ) { cout << - 1 ; return 0 ; } ll dif = ( v - u ) / 2 ; ll bit = 0 ; ll temp = v ; ll ans1 = 0 , ans2 = 0 ; while ( temp > 0 ) { temp = temp >> 1 ; bit ++ ; } //cout << bit <<'\n'; bool flag = false ; f ( i , 0 , bit ) { ll vv = ( u & ( 1 << i ) ) ; ll di = ( dif & ( 1 << i ) ) ; if ( vv == 0 && di > 0 ) { ans1 = ( ( 1 << i ) | ans1 ) ; ans2 = ( ( 1 << i ) | ans2 ) ; } else if ( vv > 0 && di == 0 ) { ans1 = ( ( 1 << i ) | ans1 ) ; } else if ( di > 0 && vv > 0 ) { flag = true ; break ; } } if ( flag ) { cout << 3 << '\n' ; cout << u << " " << dif << ' ' << dif ; return 0 ; } cout << 2 << "\n" ; cout << min ( ans1 , ans2 ) << ' ' << max ( ans1 , ans2 ) ; return 0 ; } 


score: 0.9403973509933775


956: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373251.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9396135265700483


957: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373230.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9396135265700483


958: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373399.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u < v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // if (n == 1038)  cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9396135265700483


959: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788576.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73790536.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > temp = tree [ i ] [ 0 ] ; tree [ temp . first ] [ i ] . second = counter ; temp . second = counter ++ ; tree [ i ] [ 0 ] = temp ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.9395973154362416


960: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9395465994962217


961: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9395465994962217


962: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9395465994962217


963: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9395348837209302


964: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9395348837209302


965: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9395348837209302


966: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9395348837209302


967: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9393939393939394


968: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9393939393939394


969: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9393939393939394


970: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9393939393939394


971: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73319375.cpp:18:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321952.cpp:18:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9392857142857143


972: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9392405063291139


973: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9392405063291139


974: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302177.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9390243902439024


975: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9386189258312021


976: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9386189258312021


977: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9370277078085643


978: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9369747899159664


979: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73267326.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9369747899159664


980: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9368686868686869


981: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73319375.cpp:18:5

int main ( ) { get_prime ( 1000000 ) ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73321424.cpp:18:5

int main ( ) { return 0 ; int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % t == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; //a[i] = u * v; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } vector < int > vec ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { vec . push_back ( i ) ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { // memset(vis, 0, sizeof(vis)); // memset(dps, 0, sizeof(dps)); for ( int j = 0 ; j < ( int ) vec . size ( ) ; j ++ ) vis [ vec [ j ] ] = dps [ vec [ j ] ] = 0 ; queue < pair < int , int >> Q ; Q . push ( make_pair ( i , i ) ) ; vis [ i ] = dps [ i ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) . first , fath = Q . front ( ) . second ; Q . pop ( ) ; for ( int j = 0 ; j < ( int ) son [ u ] . size ( ) ; j ++ ) { int v = son [ u ] [ j ] ; if ( vis [ v ] ) { if ( v != fath ) { ans = min ( ans , dps [ u ] + dps [ v ] - 1 ) ; } } else { vis [ v ] = 1 ; dps [ v ] = dps [ u ] + 1 ; Q . push ( make_pair ( v , u ) ) ; } } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9361702127659575


982: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73515644.cpp:145:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; indSets [ depth % ( sq - 1 ) ] . push_back ( v ) ; deg [ v ] = Graph [ v ] . size ( ) ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73508168.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; deg [ v ] = Graph [ v ] . size ( ) ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 


score: 0.9361702127659575


983: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9360613810741688


984: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9360613810741688


985: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73306734.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; // freopen("data.in", "r", stdin); // freopen("tst.out", "w", stdout); // int cntr = 0; int n = 0 ; scanf ( "%d" , & n ) ; // for (int i = 0; i < cnt && n < 10000; i++) { //     for (int j = i + 1; j < cnt && n < 10000; j++) { //         a[++n] = prime[i] * prime[j]; //     } // } int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) ans = 1 ; else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; } if ( ans != 1 ) { vector < int > vec ; for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; vec . push_back ( u ) ; vec . push_back ( v ) ; } sort ( vec . begin ( ) , vec . end ( ) ) ; vec . erase ( unique ( vec . begin ( ) , vec . end ( ) ) , vec . end ( ) ) ; for ( int i = 0 ; i < vec . size ( ) ; i ++ ) { mp [ vec [ i ] ] = i + 1 ; } for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ mp [ u ] ] . push_back ( mp [ v ] ) ; son [ mp [ v ] ] . push_back ( mp [ u ] ) ; } // cout << mp.size() << '\n'; for ( auto & it : mp ) { if ( it . first > 997 ) { for ( int i = 0 ; i < ( int ) son [ it . second ] . size ( ) ; i ++ ) { for ( int j = i + 1 ; j < ( int ) son [ it . second ] . size ( ) ; j ++ ) { int u = son [ it . second ] [ i ] , v = son [ it . second ] [ j ] ; e [ u ] [ v ] ++ ; } } } else { for ( int i = 0 ; i < ( int ) son [ it . second ] . size ( ) ; i ++ ) { int u = it . second , v = son [ it . second ] [ i ] ; if ( v <= 200 ) { e [ u ] [ v ] ++ ; } } } } for ( int i = 1 ; i <= 200 && ans != 2 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] == 2 ) { ans = 2 ; break ; } e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? e [ i ] [ j ] : 1e7 ; } } if ( ans != 2 ) { for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73313690.cpp:20:5

int main ( ) { get_prime ( 1000000 ) ; // freopen("data.in", "r", stdin); // freopen("tst.out", "w", stdout); // int cntr = 0; int n = 0 ; scanf ( "%d" , & n ) ; // for (int i = 0; i < cnt && n < 10000; i++) { //     for (int j = i + 1; j < cnt && n < 10000; j++) { //         a[++n] = prime[i] * prime[j]; //     } // } int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; for ( int j = 0 ; j < cnt && a [ i ] > 1 ; j ++ ) { if ( a [ i ] % prime [ j ] == 0 ) { int p1 = prime [ j ] , p2 = 0 ; while ( a [ i ] % prime [ j ] == 0 ) { p2 ++ ; a [ i ] /= prime [ j ] ; } if ( p2 & 1 ) { b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } } if ( b [ i ] . empty ( ) ) ans = 1 ; else if ( ( int ) b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; } if ( ans != 1 ) { vector < int > vec ; for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; vec . push_back ( u ) ; vec . push_back ( v ) ; } sort ( vec . begin ( ) , vec . end ( ) ) ; vec . erase ( unique ( vec . begin ( ) , vec . end ( ) ) , vec . end ( ) ) ; for ( int i = 0 ; i < vec . size ( ) ; i ++ ) { mp [ vec [ i ] ] = i + 1 ; } for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ mp [ u ] ] . push_back ( mp [ v ] ) ; son [ mp [ v ] ] . push_back ( mp [ u ] ) ; } for ( int i = 201 ; i <= 200000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ u ] [ v ] ++ ; } } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 200 ) { e [ u ] [ v ] ++ ; } } } for ( int i = 1 ; i <= 200 && ans != 2 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] == 2 ) { ans = 2 ; break ; } e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? e [ i ] [ j ] : 1e7 ; } } if ( ans != 2 ) { for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.935933147632312


986: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:72:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( vis [ arr [ i ] ] ) { flag = true ; } else vis [ arr [ i ] ] = true ; } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9354838709677419


987: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73499953.cpp:83:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = temp / p ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( vis [ arr [ i ] ] ) { flag = true ; } else vis [ arr [ i ] ] = true ; } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9354838709677419


988: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; //if(p < 1005){ edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //} //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; //if(p < 1005 && q < 1005){ edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //} //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( vis [ arr [ i ] ] ) { flag = true ; } else vis [ arr [ i ] ] = true ; } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9354838709677419


989: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/MahinHossen/B_73313212.cpp:3:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) , cout . tie ( 0 ) ; int t ; cin >> t ; while ( t -- ) { int n ; cin >> n ; int arr [ n ] ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( arr [ i ] == arr [ i + 1 ] ) cnt ++ ; } cout << n - cnt << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/MahinHossen/B_73312974.cpp:3:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) , cout . tie ( 0 ) ; int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n ; scanf ( "%d" , & n ) ; int arr [ n ] ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ; sort ( arr , arr + n ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( arr [ i ] == arr [ i + 1 ] ) cnt ++ ; } cout << n - cnt << endl ; } } 


score: 0.9354838709677419


990: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 


score: 0.9349593495934959


991: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332937.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


992: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


993: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


994: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


995: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333007.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


996: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73333066.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


997: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332197.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.9349593495934959


998: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373079.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9343434343434344


999: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323775.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } memset ( e , 0x3f , sizeof ( e ) ) ; memset ( e2 , 0x3f , sizeof ( e2 ) ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9342857142857143


1000: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788292.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n + 1 ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73790536.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > temp = tree [ i ] [ 0 ] ; tree [ temp . first ] [ i ] . second = counter ; temp . second = counter ++ ; tree [ i ] [ 0 ] = temp ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.9333333333333333


1001: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = 1 ; for ( auto j : factor ) { temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9327354260089686


1002: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luismo/C_73281559.cpp:35:6

void solve ( ) { cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> a >> b ; adj [ a ] . push_back ( mkp ( i , b ) ) ; adj [ b ] . push_back ( mkp ( i , a ) ) ; } if ( n == 2 ) { cout << 0 ; return ; } int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( adj [ i ] . size ( ) == 1 ) { int id = adj [ i ] [ 0 ] . first ; answ [ id ] = cnt ++ ; visited [ id ] = 1 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) if ( ! visited [ i ] ) { answ [ i ] = cnt ++ ; visited [ i ] = 1 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) cout << answ [ i ] << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luismo/C_73271222.cpp:54:6

void solve ( ) { cin >> n ; for ( int i = 0 ; i < n - 1 ; i ++ ) { cin >> a >> b ; adj [ a ] . push_back ( mkp ( i , b ) ) ; adj [ b ] . push_back ( mkp ( i , a ) ) ; } int cnt = 0 ; int leaf = - 1 ; for ( int i = 1 ; i <= n ; i ++ ) if ( adj [ i ] . size ( ) == 1 ) { int id = adj [ i ] [ 0 ] . first ; answ [ id ] = cnt ++ ; visited [ id ] = 1 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) if ( ! visited [ i ] ) { answ [ i ] = cnt ++ ; visited [ i ] = 1 ; } for ( int i = 0 ; i < n - 1 ; i ++ ) cout << answ [ i ] << endl ; } 


score: 0.9325842696629213


1003: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358743.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << ! << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9324894514767933


1004: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73450957.cpp:4:5

int main ( ) { unsigned long int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( unsigned long int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( unsigned long int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( unsigned long int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449921.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 


score: 0.9322033898305084


1005: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9321608040201005


1006: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9320987654320988


1007: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9320987654320988


1008: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288919.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9320388349514563


1009: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323775.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } memset ( e , 0x3f , sizeof ( e ) ) ; memset ( e2 , 0x3f , sizeof ( e2 ) ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9318181818181818


1010: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323775.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } memset ( e , 0x3f , sizeof ( e ) ) ; memset ( e2 , 0x3f , sizeof ( e2 ) ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9314285714285714


1011: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.93125


1012: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.93125


1013: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.93125


1014: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9304556354916067


1015: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9304556354916067


1016: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9304556354916067


1017: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9304556354916067


1018: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73270714.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( v == 2 && u == 0 ) { printf ( "2\n" ) ; printf ( "1 1" ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295120.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 0.9302325581395349


1019: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73270714.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( v == 2 && u == 0 ) { printf ( "2\n" ) ; printf ( "1 1" ) ; return 0 ; } if ( abs ( u - v ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = abs ( u - v ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/long_double_y/D_73295135.cpp:4:5

int main ( ) { scanf ( "%lld%lld" , & u , & v ) ; if ( u == 0 && v == 0 ) { printf ( "0" ) ; return 0 ; } if ( u > v ) { printf ( "-1" ) ; return 0 ; } if ( u == v ) { printf ( "1\n" ) ; printf ( "%lld" , u ) ; return 0 ; } if ( ( v - u ) % 2 ) { printf ( "-1" ) ; return 0 ; } long long cnt = ( v - u ) / 2 ; if ( ( ( u + cnt ) ^ cnt ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , u + cnt , cnt ) ; return 0 ; } if ( ( ( 2 * cnt ) ^ u ) == u ) { printf ( "2\n" ) ; printf ( "%lld %lld" , 2 * cnt , u ) ; return 0 ; } printf ( "3\n" ) ; printf ( "%lld %lld %lld" , u , cnt , cnt ) ; return 0 ; } 


score: 0.9302325581395349


1020: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 1005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; if ( vis [ arr [ i ] ] ) { flag = true ; } else vis [ arr [ i ] ] = true ; } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9299363057324841


1021: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373091.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 1 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( e [ u ] [ v ] <= 2 ) { ans = min ( ans , e [ u ] [ v ] + 2 ) ; } e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9296482412060302


1022: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.929471032745592


1023: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490654.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1024: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1025: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73490213.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1026: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73481257.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1027: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73479498.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1028: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73492801.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; //vll dist(1005, 1e9), par(1005, -1); map < ll , ll > dist , par ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { //if(dist[child] == 1e9) if ( dist . find ( child ) == dist . end ( ) ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:36:6

void solve ( ) { ll ans = 1e9 ; f ( i , 1 , 1005 ) { if ( edge [ i ] . size ( ) == 0 ) continue ; vll dist ( 1005 , 1e9 ) , par ( 1005 , - 1 ) ; dist [ i ] = 0 ; queue < ll > qu ; qu . push ( i ) ; while ( ! qu . empty ( ) ) { ll src = qu . front ( ) ; qu . pop ( ) ; for ( auto child : edge [ src ] ) { if ( dist [ child ] == 1e9 ) { dist [ child ] = 1 + dist [ src ] ; qu . push ( child ) ; par [ child ] = src ; } else if ( par [ child ] != src && par [ src ] != child ) { ans = min ( ans , dist [ child ] + dist [ src ] + 1 ) ; } } } } if ( ans == 1e9 ) cout << - 1 ; else cout << ans ; return ; } 


score: 0.9294117647058824


1029: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahfel/B_73234785.cpp:9:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; int t ; cin >> t ; while ( t -- ) { int n , x ; cin >> n ; set < int > s ; for ( int i = 0 ; i < n ; i ++ ) { cin >> x ; s . insert ( x ) ; } cout << s . size ( ) << "\n" ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Madhav_Agarwal/B_73399785.cpp:48:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout . tie ( 0 ) ; cin . tie ( NULL ) ; int t ; cin >> t ; while ( t -- ) { int n ; cin >> n ; int x ; set < int > s ; for ( int i = 0 ; i < n ; i ++ ) { cin >> x ; s . insert ( x ) ; } cout << s . size ( ) << "\n" ; } } 


score: 0.9285714285714286


1030: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = ceil ( sqrt ( n ) ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; // sq = 1; sq = ceil ( sqrt ( n ) ) ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 


score: 0.9285714285714286


1031: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358830.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9285714285714286


1032: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358779.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout < 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9285714285714286


1033: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.928374655647383


1034: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9281914893617021


1035: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9281914893617021


1036: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288778.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9271844660194175


1037: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288835.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { if ( k [ kk [ 0 ] ] == 0 ) { cout << 2 ; return 0 ; } k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas >= inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9271844660194175


1038: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373379.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && u <= v ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= v && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; if ( n == 1038 ) cout << u << ' ' << v << '\n' ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9269521410579346


1039: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331363.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.926829268292683


1040: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73331660.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 20021114 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; memset ( vis + 1 , 0 , n << 2 ) ; dfs ( 1 ) ; for ( int k = 1 ; k <= 100 ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lzoilxy/F_73332547.cpp:60:5

int main ( ) { n = rd ( ) ; m = rd ( ) ; srand ( 19260817 ) ; for ( int i = 1 ; i <= m ; ++ i ) add ( rd ( ) , rd ( ) ) ; for ( int i = 1 ; i <= n ; ++ i ) id [ i ] = i ; for ( V = 1 ; ; ++ V ) if ( V * V >= n ) break ; dfs ( 1 ) ; for ( int k = 1 ; ; ++ k ) { memset ( vis + 1 , 0 , n << 2 ) ; random_shuffle ( id + 1 , id + n + 1 ) ; cnt = 0 ; for ( int i = 1 ; i <= n ; ++ i ) if ( ! vis [ id [ i ] ] ) { q [ ++ cnt ] = id [ i ] ; vis [ id [ i ] ] = 1 ; for ( int j = h [ id [ i ] ] ; j ; j = e [ j ] . nxt ) vis [ e [ j ] . to ] = 1 ; } if ( cnt >= V ) { puts ( "1" ) ; for ( int i = 1 ; i <= V ; ++ i ) printf ( "%d " , q [ i ] ) ; puts ( "" ) ; return 0 ; } } return 0 ; } 


score: 0.926829268292683


1041: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = ceil ( sqrt ( n ) ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368503.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = 1 ; // sq = ceil(sqrt(n)); while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 


score: 0.9264705882352942


1042: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73340822.cpp:36:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 && prime [ 0 ] < DIM ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else if ( prime [ 0 ] < DIM && prime [ 1 ] < DIM ) { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= DIM ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341535.cpp:35:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= n ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 


score: 0.9261744966442953


1043: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73340822.cpp:36:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 && prime [ 0 ] < DIM ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else if ( prime [ 0 ] < DIM && prime [ 1 ] < DIM ) { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= DIM ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magi/E_73341603.cpp:35:5

int main ( ) { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int x , x1 , newx = 1 ; prime . clear ( ) ; cin >> x ; x1 = x ; for ( int j = 2 ; j * j <= x && x1 > 1 ; j ++ ) if ( x1 % j == 0 ) { int nr = 0 ; while ( x1 % j == 0 ) x1 /= j , nr ++ ; if ( nr % 2 == 1 ) prime . push_back ( j ) , newx = newx * j ; ; } if ( x1 > 1 ) prime . push_back ( x1 ) , newx = newx * x1 ; if ( prime . empty ( ) ) { cout << 1 << '\n' ; return 0 ; } if ( fr [ newx ] ) ok2 = 1 ; fr [ newx ] = 1 ; if ( prime . size ( ) == 1 ) { nod [ 1 ] . push_back ( prime [ 0 ] ) ; nod [ prime [ 0 ] ] . push_back ( 1 ) ; } else { nod [ prime [ 0 ] ] . push_back ( prime [ 1 ] ) ; nod [ prime [ 1 ] ] . push_back ( prime [ 0 ] ) ; } } if ( ok2 ) { cout << 2 << '\n' ; return 0 ; } for ( int i = 1 ; i <= 1000 ; i ++ ) sol = min ( sol , bfs ( i ) ) ; if ( sol == inf ) cout << - 1 << '\n' ; else cout << sol << '\n' ; return 0 ; } 


score: 0.9261744966442953


1044: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 


score: 0.9259259259259259


1045: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 


score: 0.9259259259259259


1046: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 


score: 0.9259259259259259


1047: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:47:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } ll lcm ( ll a , ll b ) { re ( ( a * b ) / gcd ( a , b ) ) ; } 


score: 0.9259259259259259


1048: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9259259259259259


1049: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9259259259259259


1050: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 


score: 0.9257142857142857


1051: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 


score: 0.9257142857142857


1052: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 


score: 0.9257142857142857


1053: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 


score: 0.9257142857142857


1054: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/F_73350494.cpp:46:13

inline void dfs ( int u ) { mp [ dep [ u ] ] = u ; for ( int i = head [ u ] ; i ; i = edge [ i ] . nxt ) { int v = edge [ i ] . to ; if ( dep [ v ] ) { if ( dep [ u ] - dep [ v ] >= sz - 1 ) { puts ( "2" ) ; printf ( "%d\n" , dep [ u ] - dep [ v ] + 1 ) ; for ( int j = dep [ v ] ; j <= dep [ u ] ; j ++ ) printf ( "%d " , mp [ j ] ) ; //				printf ("dep[%d] = %d\n dep[%d] = %d\n", u, dep[u], v, dep[v]); exit ( 0 ) ; } } else { dep [ v ] = dep [ u ] + 1 ; dfs ( v ) ; } } if ( ! tag [ u ] ) { ans . push_back ( u ) ; for ( int i = head [ u ] ; i ; i = edge [ i ] . nxt ) { int v = edge [ i ] . to ; tag [ v ] = true ; } } mp [ dep [ u ] ] = - 1 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/F_73350381.cpp:46:13

inline void dfs ( int u ) { mp [ dep [ u ] ] = u ; for ( int i = head [ u ] ; i ; i = edge [ i ] . nxt ) { int v = edge [ i ] . to ; if ( dep [ v ] ) { if ( dep [ u ] - dep [ v ] >= sz - 1 ) { puts ( "2" ) ; //				printf ("%d ? %d\n", dep[u] - dep[v] + 1, sz); for ( int j = dep [ v ] ; j <= dep [ u ] ; j ++ ) printf ( "%d " , mp [ j ] ) ; //				printf ("dep[%d] = %d\n dep[%d] = %d\n", u, dep[u], v, dep[v]); exit ( 0 ) ; } } else { dep [ v ] = dep [ u ] + 1 ; dfs ( v ) ; } } if ( ! tag [ u ] ) { ans . push_back ( u ) ; for ( int i = head [ u ] ; i ; i = edge [ i ] . nxt ) { int v = edge [ i ] . to ; tag [ v ] = true ; } } mp [ dep [ u ] ] = - 1 ; } 


score: 0.925531914893617


1055: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/D_73298150.cpp:5:8

signed main ( ) { for ( int i = 1 ; i < 63 ; i ++ ) qwq [ i ] = qwq [ i - 1 ] << 1 ; scanf ( "%lld%lld" , & a , & b ) ; for ( int i = 62 ; i >= 0 ; -- i ) if ( qwq [ i ] & a ) sum [ i ] = 1 ; else a = a ; b -= a ; if ( b < 0 || ( b & 1 ) ) return 0 & puts ( "-1" ) ; for ( int i = 62 ; i >= 0 ; -- i ) { int c = b / qwq [ i ] / 2 * 2 ; sum [ i ] += c , b -= qwq [ i ] * c , siz = max ( siz , sum [ i ] ) ; } printf ( "%lld\n" , siz ) ; for ( int i = 1 ; i <= siz ; i ++ ) { int t = 0 ; for ( int i = M - 1 ; i >= 0 ; i -- ) if ( sum [ i ] ) sum [ i ] -- , t += qwq [ i ] ; printf ( "%lld " , t ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/D_73298480.cpp:5:8

signed main ( ) { for ( int i = 1 ; i < 63 ; i ++ ) p [ i ] = p [ i - 1 ] << 1 ; scanf ( "%lld%lld" , & a , & b ) ; for ( int i = 62 ; i >= 0 ; i -- ) if ( p [ i ] & a ) sum [ i ] = 1 ; else a = a ; b -= a ; if ( b < 0 || ( b & 1 ) ) return 0 & puts ( "-1" ) ; int c ; for ( int i = 62 ; i >= 0 ; i -- ) c = b / p [ i ] / 2 * 2 , sum [ i ] += c , b -= p [ i ] * c , siz = max ( siz , sum [ i ] ) ; printf ( "%lld\n" , siz ) ; for ( int i = 1 ; i <= siz ; i ++ ) { int t = 0 ; for ( int i = 62 ; i >= 0 ; i -- ) if ( sum [ i ] ) sum [ i ] -- , t += p [ i ] ; printf ( "%lld " , t ) ; } return 0 ; } 


score: 0.9252336448598131


1056: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.925


1057: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.925


1058: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336512.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.925


1059: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303486.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9240506329113924


1060: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302850.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9240506329113924


1061: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302886.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9240506329113924


1062: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73302043.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] && v == s ) { res = min ( res , vis1 [ u ] + 1 ) ; } else if ( ! vis [ v ] ) { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73303357.cpp:25:5

int Bfs ( int s ) { int res = INT_MAX ; memset ( vis1 , 0 , sizeof ( vis1 ) ) ; memset ( vis2 , 0 , sizeof ( vis2 ) ) ; queue < int > Q ; Q . push ( s ) ; vis1 [ s ] = 1 ; while ( ! Q . empty ( ) ) { int u = Q . front ( ) ; Q . pop ( ) ; for ( int i = head [ u ] ; ~ i ; i = nxt [ i ] ) { int v = to [ i ] ; if ( ! vis2 [ i ] && ! vis2 [ i ^ 1 ] ) { vis2 [ i ] = 1 ; if ( vis1 [ v ] ) { res = min ( res , vis1 [ v ] + vis1 [ u ] - 1 ) ; } else { vis1 [ v ] = vis1 [ u ] + 1 ; Q . push ( v ) ; } } } } return res ; } 


score: 0.9240506329113924


1063: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loud_mouth/C_73302723.cpp:38:8

signed solve ( ) { in ( v ) int n = v ; if ( v == 2 ) { cout << 0 ; return 0 ; } vii adj [ v + 1 ] ; for ( int i = 0 ; i < v - 1 ; ++ i ) { in ( a ) in ( b ) adj [ a ] . pb ( { b , i } ) ; adj [ b ] . pb ( { a , i } ) ; } int assign = 0 ; vector < int > answer ( v - 1 , - 1 ) ; for ( int i = 1 ; i < v + 1 ; ++ i ) { if ( adj [ i ] . size ( ) == 1 ) { answer [ adj [ i ] [ 0 ] . sc ] = assign ; assign ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( answer [ i ] == - 1 ) { answer [ i ] = assign ; assign ++ ; } } trav ( answer ) cout << x << endl ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loud_mouth/C_73302558.cpp:38:8

signed solve ( ) { in ( v ) int n = v ; vii adj [ v + 1 ] ; for ( int i = 0 ; i < v - 1 ; ++ i ) { in ( a ) in ( b ) adj [ a ] . pb ( { b , i } ) ; adj [ b ] . pb ( { a , i } ) ; } int assign = 0 ; vector < int > answer ( v - 1 , - 1 ) ; for ( int i = 1 ; i < v + 1 ; ++ i ) { if ( adj [ i ] . size ( ) == 1 ) { answer [ adj [ i ] [ 0 ] . sc ] = assign ; assign ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( answer [ i ] == - 1 ) { answer [ i ] = assign ; assign ++ ; } } trav ( answer ) cout << x << endl ; return 0 ; } 


score: 0.9239130434782609


1064: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73489972.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; for ( int i = start ; i < ans . size ( ) ; i ++ ) printf ( "%d " , ans [ i ] ) ; } 


score: 0.9230769230769231


1065: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; for ( int i = start ; i < ans . size ( ) ; i ++ ) printf ( "%d " , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487610.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 0.9230769230769231


1066: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; for ( int i = start ; i < ans . size ( ) ; i ++ ) printf ( "%d " , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot3/F_73490780.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 0.9230769230769231


1067: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; for ( int i = start ; i < ans . size ( ) ; i ++ ) printf ( "%d " , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/F_73488626.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 0.9230769230769231


1068: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/F_73487276.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; for ( int i = start ; i < ans . size ( ) ; i ++ ) printf ( "%d " , ans [ i ] ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/F_73487855.cpp:45:6

void Dfs ( int u ) { ans . push_back ( u ) ; dfn [ u ] = ans . size ( ) - 1 ; del [ u ] = 1 ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) { int v = g [ u ] [ i ] ; if ( del [ v ] ) continue ; else { Dfs ( v ) ; return ; } } int start = inf ; for ( int i = 0 ; i < g [ u ] . size ( ) ; i ++ ) start = min ( start , dfn [ g [ u ] [ i ] ] ) ; printf ( "%d\n" , ans . size ( ) - start ) ; printf ( "%d" , ans [ start ] ) ; for ( int i = start + 1 ; i < ans . size ( ) ; i ++ ) printf ( " %d" , ans [ i ] ) ; } 


score: 0.9230769230769231


1069: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340926.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans ) ; return 0 ; } 


score: 0.9230769230769231


1070: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341086.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans ) ; return 0 ; } 


score: 0.9230769230769231


1071: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73340829.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lx_zjk/E_73341249.cpp:69:5

int main ( ) { read ( n ) ; for ( int i = 1 , x ; i <= n ; i ++ ) { read ( x ) ; work ( x ) ; } ans = INF ; for ( int i = 1 ; i <= 1000 ; i ++ ) if ( G [ i ] . size ( ) ) BFS ( i ) ; printf ( "%d\n" , ans == INF ? - 1 : ans ) ; return 0 ; } 


score: 0.9230769230769231


1072: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9225352112676056


1073: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9225352112676056


1074: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9215686274509803


1075: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 


score: 0.9214285714285714


1076: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 


score: 0.9214285714285714


1077: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/B_73232580.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 


score: 0.9214285714285714


1078: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:26:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahiman12/A_73225347.cpp:32:4

long long int # define ld long double # define pb push_back # define ff first # define ss second # define rep ( a , b , c ) for ( a = b ; a < c ; a ++ ) # define repj ( a , b , c ) for ( a = b ; a >= c ; a -- ) # define repr for ( i = n - 1 ; i >= 0 ; i -- ) # define pii pair < ll , ll > # define pll pair < ll , ll > # define inf 100000001 # define mod 1000000007 # define lb lower_bound # define up upper_bound # define rep1 for ( i = 1 ; i <= n ; i ++ ) # define vr vector # define ef else if # define SORT ( A ) sort ( A . begin ( ) , A . end ( ) ) ; # define all ( x ) ( x ) . begin ( ) , ( x ) . end ( ) # define REVERSE ( A ) reverse ( A . begin ( ) , A . end ( ) ) ; # define fastio ios_base :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; using namespace std ; ll nxt ( ) { ll x ; cin >> x ; return x ; } ll myXOR ( ll x , ll y ) { return ( x | y ) & ( ~ x | ~ y ) ; } 


score: 0.9214285714285714


1079: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406939.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v && u != 0 ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 0.9210526315789473


1080: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9207317073170732


1081: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9207317073170732


1082: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73444737.cpp:144:6

void dfs1 ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs1 ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Magdy_Sedra/F_73508168.cpp:144:6

void dfs ( int v , int depth ) { s . push ( v ) ; tdepth [ v ] = depth ; deg [ v ] = Graph [ v ] . size ( ) ; visited [ v ] = exists [ v ] = true ; for ( auto vv : Graph [ v ] ) if ( ! visited [ vv ] ) { parent [ vv ] = v ; dfs ( vv , depth + 1 ) ; } else if ( parent [ v ] != vv && exists [ vv ] && ( ll ) ( tdepth [ v ] - tdepth [ vv ] + 1 ) * ( tdepth [ v ] - tdepth [ vv ] + 1 ) >= n ) { cout << 2 << '\n' << tdepth [ v ] - tdepth [ vv ] + 1 << '\n' ; int t ; while ( true ) { t = s . top ( ) ; s . pop ( ) ; cout << t << " " ; if ( t == vv ) break ; } exit ( 0 ) ; } exists [ v ] = false ; s . pop ( ) ; } 


score: 0.9204545454545454


1083: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/C_73297619.cpp:11:5

int main ( ) { int n ; cin >> n ; memset ( ans , - 1 , sizeof ( ans ) ) ; int pr = - 1 ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; in [ u ] ++ , in [ v ] ++ ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } int tot = 0 ; for ( int i = 1 ; i < n ; ++ i ) { if ( a [ i ] . u == pr && tot < 3 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot < 3 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { cout << ans [ i ] << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/C_73332827.cpp:11:5

int main ( ) { int n , pr = - 1 ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) ans [ i ] = - 1 ; for ( int i = 1 ; i < n ; i ++ ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; in [ u ] ++ , in [ v ] ++ ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i ] . u == pr && tot <= 2 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot <= 2 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; i ++ ) cout << ans [ i ] << endl ; //system("pause"); return 0 ; } 


score: 0.9203539823008849


1084: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/C_73332827.cpp:11:5

int main ( ) { int n , pr = - 1 ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) ans [ i ] = - 1 ; for ( int i = 1 ; i < n ; i ++ ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; in [ u ] ++ , in [ v ] ++ ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i ] . u == pr && tot <= 2 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot <= 2 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; i ++ ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; i ++ ) cout << ans [ i ] << endl ; //system("pause"); return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot5/C_73302072.cpp:11:5

int main ( ) { int n ; cin >> n ; memset ( ans , - 1 , sizeof ( ans ) ) ; int pr = - 1 ; for ( int i = 1 ; i < n ; ++ i ) { int u , v ; cin >> u >> v ; a [ i ] . u = u , a [ i ] . v = v ; ++ in [ u ] , ++ in [ v ] ; if ( in [ u ] >= 3 && pr == - 1 ) { pr = u ; } if ( in [ v ] >= 3 && pr == - 1 ) { pr = v ; } } int tot = 0 ; for ( int i = 1 ; i < n ; ++ i ) { if ( a [ i ] . u == pr && tot < 3 ) { ans [ i ] = tot ++ ; } if ( a [ i ] . v == pr && tot < 3 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { if ( ans [ i ] == - 1 ) { ans [ i ] = tot ++ ; } } for ( int i = 1 ; i < n ; ++ i ) { cout << ans [ i ] << endl ; } return 0 ; } 


score: 0.9203539823008849


1085: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337889.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9197530864197531


1086: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366092.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . push_back ( mp ( b , j ) ) ; edge [ b ] . push_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9197530864197531


1087: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9196078431372549


1088: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9196078431372549


1089: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9196078431372549


1090: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:192:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } //########################################################################################### ll lcm ( ll a , ll b ) { return a / gcd ( a , b ) * b ; } 


score: 0.9196078431372549


1091: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788576.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789597.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.9194630872483222


1092: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9190871369294605


1093: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9190871369294605


1094: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9190871369294605


1095: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:180:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } 


score: 0.9190871369294605


1096: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73377105.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { if ( u > 0 ) { printf ( "1\n" ) ; printf ( "%lld\n" , u ) ; return 0 ; } else { printf ( "0\n" ) ; } } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyslyslys/D_73377061.cpp:5:5

int main ( ) { ll u , v ; scanf ( "%lld%lld" , & u , & v ) ; if ( u <= v ) { if ( ( v - u ) % 2 == 0 ) { ll h = v - u ; if ( h == 0 ) { printf ( "1\n" ) ; printf ( "%lld\n" , u ) ; return 0 ; } ll g = ( h >> 1 ) ^ u ; if ( g == ( h >> 1 ) + u ) { printf ( "2\n" ) ; printf ( "%lld %lld\n" , u + h / 2 , h / 2 ) ; } else { printf ( "3\n" ) ; printf ( "%lld %lld %lld\n" , u , h / 2 , h / 2 ) ; } } else { printf ( "-1\n" ) ; } } else { printf ( "-1\n" ) ; } return 0 ; } 


score: 0.918918918918919


1097: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73267320.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73270101.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; ll temp = 0 ; for ( auto x : ans1 ) { temp ^= x ; } if ( temp != a ) { cout << "-1\n" ; return 0 ; } cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 


score: 0.9187817258883249


1098: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73267320.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/D_73272521.cpp:14:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cin >> a >> b ; if ( a > b ) { cout << "-1\n" ; return 0 ; } else if ( a == b ) { cout << "1\n" << a << '\n' ; return 0 ; } else { for ( ll i = 62 ; i != - 1 ; i -- ) { if ( b & ( 1ll << i ) ) { if ( a & ( 1ll << i ) ) { for ( auto & x : ans ) { if ( ! ( x & ( 1ll << i ) ) ) { x += ( 1ll << i ) ; break ; } } } else { if ( ! i ) { cout << "-1\n" ; return 0 ; } if ( ! ( a & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { if ( ! ( b & ( 1ll << ( i - 1 ) ) ) ) { ll nd = 1 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } nd = 2 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 2 ) ) ) ) { x += ( 1ll << ( i - 2 ) ) ; nd -- ; if ( ! nd ) break ; } } } else { ll nd = 3 ; for ( auto & x : ans ) { if ( ! ( x & ( 1ll << ( i - 1 ) ) ) ) { x += ( 1ll << ( i - 1 ) ) ; nd -- ; if ( ! nd ) break ; } } b -= ( 1ll << ( i - 1 ) ) ; } } } } } } multiset < ll > ans1 ( BG ( ans ) , ED ( ans ) ) ; ans1 . erase ( 0 ) ; ll temp = 0 ; for ( auto x : ans1 ) { temp ^= x ; } if ( temp != a ) { cout << "-1\n" ; return 0 ; } cout << ans1 . size ( ) << '\n' ; for ( auto x : ans1 ) cout << x << ' ' ; return 0 ; } 


score: 0.9187817258883249


1099: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9187817258883249


1100: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9187817258883249


1101: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337836.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.91875


1102: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366406.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . emplace ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . emplace ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.91875


1103: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73337790.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } //	if(x == 1) { //		cout << "1\n"; //		return 0; //	} ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.91875


1104: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73366050.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( b , j ) ; edge [ b ] . emplace_back ( a , j ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.91875


1105: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335887.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73365944.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( ( b , j ) ) ; edge [ b ] . emplace_back ( ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; //	used.reset(); queue < pair < pair < ll , ll > , ll >> bfs ; bfs . push ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.91875


1106: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288724.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; if ( marked [ a ] && marked [ s ] ) return dist [ a ] + 2 ; } else if ( a != p ) { return dist [ a ] + dist [ x ] + 1 ; } } } return INF ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; if ( marked [ a ] && marked [ s ] ) ckmin ( ret , dist [ a ] + 2 ) ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 


score: 0.9186046511627907


1107: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:73:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/E_73464179.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.917910447761194


1108: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/E_73464179.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:75:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.917910447761194


1109: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9178082191780822


1110: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9178082191780822


1111: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9178082191780822


1112: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9178082191780822


1113: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335066.cpp:28:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : edge ) { bitset < 1000005 > visited , used ; visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; map < ll , ll > shortest ; bfs . push_back ( mp ( mp ( x . first , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336945.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } if ( x == 1 ) { cout << "1\n" ; return 0 ; } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9171597633136095


1114: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9168443496801706


1115: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9168443496801706


1116: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9168443496801706


1117: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:174:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } 


score: 0.9168443496801706


1118: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot4/E_73462937.cpp:73:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73464300.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] + 1 ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.9166666666666666


1119: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73463421.cpp:75:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; B [ i ] = x ; for ( int j = 0 ; j < prime_num ; j ++ ) { int p = prime [ j ] , power = 0 ; //printf("p=%d\n",p); while ( x % p == 0 ) { x /= p ; power ++ ; } //printf("p=%d pow=%d\n",p,power); if ( power & 1 ) { x *= p ; g [ i ] . push_back ( j + 1 ) ; } } //printf("x=%d\n",); if ( x == 1 ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/E_73464300.cpp:76:5

int main ( ) { //freopen("C:\\Users\\deii\\Desktop\\test.txt","r",stdin);	 scanf ( "%d" , & n ) ; int prime_num = get_prime ( ) ; memset ( head , - 1 , sizeof ( head ) ) ; //printf("p_n=%d\n\n",prime_num); for ( int i = 0 ; i < n ; i ++ ) { int x ; scanf ( "%d" , & x ) ; for ( int j = 0 ; prime [ j ] < 1000 ; j ++ ) { int p = prime [ j ] , power = 0 ; while ( x % p == 0 ) { x /= p ; power ++ ; } if ( power & 1 ) g [ i ] . push_back ( j + 1 ) ; } if ( x > 1 ) g [ i ] . push_back ( id [ x ] + 1 ) ; if ( ! g [ i ] . size ( ) ) { printf ( "1" ) ; return 0 ; } } for ( int i = 0 ; i < n ; i ++ ) { if ( g [ i ] . size ( ) == 1 ) { Addedge ( g [ i ] [ 0 ] , 0 ) ; Addedge ( 0 , g [ i ] [ 0 ] ) ; } if ( g [ i ] . size ( ) == 2 ) { Addedge ( g [ i ] [ 0 ] , g [ i ] [ 1 ] ) ; Addedge ( g [ i ] [ 1 ] , g [ i ] [ 0 ] ) ; } } //printf("OK"); for ( int i = 0 ; prime [ i - 1 ] < 1000 ; i ++ ) { Bfs ( i ) ; } if ( ans < inf ) printf ( "%d" , ans ) ; else printf ( "-1" ) ; } 


score: 0.9166666666666666


1120: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9156626506024096


1121: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9156626506024096


1122: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9156626506024096


1123: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:186:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll max ( ll a , int b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll max ( int a , ll b ) { if ( a > b ) return a ; return b ; } //########################################################################################### ll gcd ( ll a , ll b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } 


score: 0.9156626506024096


1124: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:24:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } ll lcm ( ll a , ll b ) { return a * ( b / gcd ( a , b ) ) ; } 


score: 0.9154929577464789


1125: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368218.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = ceil ( sqrt ( n ) ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; int cnt = 0 ; for ( int i = 0 ; i < n && cnt < sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , ++ cnt ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73370497.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; // sq = 1; sq = ceil ( sqrt ( n ) ) ; while ( sq * sq < n ) ++ sq ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 


score: 0.9154929577464789


1126: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73450957.cpp:4:5

int main ( ) { unsigned long int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( unsigned long int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( unsigned long int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( unsigned long int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( unsigned long int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/B_73449367.cpp:4:5

int main ( ) { int t ; cin >> t ; unsigned long int a [ t ] ; unsigned long int b [ t ] [ 100000 ] ; for ( int i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; for ( int j = 0 ; j < a [ i ] ; j ++ ) { cin >> b [ i ] [ j ] ; } } int d [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { sort ( b [ i ] , b [ i ] + a [ i ] ) ; d [ i ] = 0 ; } unsigned long int j = 0 , k = 0 ; for ( int i = 0 ; i < t ; i ++ ) { while ( j < ( a [ i ] - 1 ) ) { if ( b [ i ] [ j ] == b [ i ] [ j + 1 ] ) k ++ ; j ++ ; } d [ i ] = a [ i ] - k ; j = 0 ; k = 0 ; } for ( int i = 0 ; i < t ; i ++ ) cout << d [ i ] << "\n" ; return 0 ; } 


score: 0.9152542372881356


1127: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9152542372881356


1128: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9148936170212766


1129: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323671.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] >= 1 ? e [ i ] [ j ] : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9148936170212766


1130: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272997.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 400 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73271086.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } for ( int i = 0 ; i < n ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { cout << t [ diu ] + 1 << endl ; return 0 ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << - 1 << endl ; } 


score: 0.914572864321608


1131: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73271086.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } for ( int i = 0 ; i < n ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { cout << t [ diu ] + 1 << endl ; return 0 ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << - 1 << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272893.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 500 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.914572864321608


1132: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73271086.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } for ( int i = 0 ; i < n ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { cout << t [ diu ] + 1 << endl ; return 0 ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << - 1 << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272686.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 800 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.914572864321608


1133: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73271086.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } for ( int i = 0 ; i < n ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { cout << t [ diu ] + 1 << endl ; return 0 ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << - 1 << endl ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longhuenchan/E_73272353.cpp:21:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; for ( int i = 2 ; i <= 1000000 ; i ++ ) pr [ i ] = 1 ; for ( int i = 2 ; i <= 1000 ; i ++ ) { if ( pr [ i ] ) { for ( int j = i * i ; j <= 1000000 ; j += i ) pr [ j ] = 0 ; pp . pb ( i ) ; } } int n ; cin >> n ; for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; for ( auto x : pp ) { while ( a [ i ] % ( x * x ) == 0 ) a [ i ] /= x * x ; } } sort ( a , a + n ) ; if ( a [ 0 ] == 1 ) { cout << 1 << endl ; return 0 ; } for ( int i = 1 ; i < n ; i ++ ) if ( a [ i ] == a [ i - 1 ] ) { cout << 2 << endl ; return 0 ; } for ( int i = 0 ; i < n ; i ++ ) { int nw = a [ i ] ; for ( auto x : pp ) { if ( nw % x == 0 ) { g [ i ] . pb ( x ) ; nw /= x ; } } } int cnt = min ( n , 6000 ) , ans = 1e9 ; random_shuffle ( a , a + n ) ; for ( int i = 0 ; i < cnt ; i ++ ) { int diu = 0 ; for ( auto x : g [ i ] ) diu ^= power ( 998244353 , x ) ; if ( t . find ( diu ) != t . end ( ) ) { ans = min ( ans , t [ diu ] + 1 ) ; } t [ diu ] = 1 ; vector < pii > tmp ; for ( auto x : t ) { tmp . pb ( { x . fi ^ diu , x . se + 1 } ) ; } for ( auto x : tmp ) t [ x . fi ] = x . se ; } cout << ( ans == 1e9 ? - 1 : ans ) << endl ; } 


score: 0.914572864321608


1134: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9144736842105263


1135: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9144736842105263


1136: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 


score: 0.9144736842105263


1137: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:144:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:168:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } //########################################################################################### ll min ( int a , ll b ) { if ( a < b ) return a ; return b ; } 


score: 0.9144736842105263


1138: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahfel/D_73267136.cpp:9:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; int x , s ; cin >> x >> s ; if ( x > s ) { cout << - 1 << endl ; } else if ( x % 2 != s % 2 ) { cout << - 1 << endl ; } else if ( x == 0 && s == 0 ) { cout << 0 << endl ; } else if ( x == s ) { cout << 1 << endl << x << endl ; } else { int a = x ^ 1 ; int n = s - a ; if ( a != 0 ) { cout << n + 1 << endl ; } else { cout << n << endl ; } for ( int i = 0 ; i < n ; i ++ ) { cout << 1 << " " ; } if ( a != 0 ) cout << a << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahfel/D_73270631.cpp:9:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; long long int x , s ; cin >> x >> s ; if ( x > s ) { cout << - 1 << endl ; } else if ( x % 2 != s % 2 ) { cout << - 1 << endl ; } else if ( x == 0 && s == 0 ) { cout << 0 << endl ; } else if ( x == s ) { cout << 1 << endl << x << endl ; } else { long long int a = x ^ 1 ; long long int n = s - a ; if ( a != 0 ) { cout << n + 1 << endl ; } else { cout << n << endl ; } for ( long long int i = 0 ; i < n ; i ++ ) { cout << 1 << " " ; } if ( a != 0 ) cout << a << endl ; } return 0 ; } 


score: 0.9139784946236559


1139: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73272895.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9137055837563451


1140: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73273039.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = inf ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } /*for(i=1; i<=20; i++){        cout<<i<<" "<<k[i]<<endl;    }*/ if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329292.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9137055837563451


1141: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73634031.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u == v ) { cout << 1 << "\n" << u ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1 << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73633884.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1 << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 


score: 0.9134615384615384


1142: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73658767.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } if ( u == v ) { cout << 1 << "\n" << u ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1LL << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lo_0l/D_73633884.cpp:12:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; ll x = v - u ; if ( x < 0 || x % 2 ) { cout << - 1 ; return 0 ; } if ( u == 0 && v == 0 ) { cout << 0 ; return 0 ; } ll a = 0 , b = 0 ; x /= 2 ; F ( i , 0 , 65 ) { ll val = 1 << i , p = u & ( val ) , q = x & ( val ) ; //cout<<p<<" "<<q<<endl; if ( p == 0 && q > 0 ) { a = ( val | a ) ; b = ( val | b ) ; } else if ( p > 0 ) { if ( q == 0 ) a = ( val | a ) ; else { cout << "3\n" << u << " " << x << " " << x ; return 0 ; } } } cout << "2\n" << a << " " << b ; return 0 ; } 


score: 0.9134615384615384


1143: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789597.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73788292.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n + 1 ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 


score: 0.9133333333333333


1144: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9130434782608695


1145: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9130434782608695


1146: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9130434782608695


1147: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9128329297820823


1148: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9122340425531915


1149: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323652.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 2 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9122340425531915


1150: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9119638826185101


1151: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9119638826185101


1152: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 


score: 0.9119638826185101


1153: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:137:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:162:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , int b ) { if ( a < b ) return a ; return b ; } 


score: 0.9119638826185101


1154: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahfel/D_73272326.cpp:9:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; long long int x , s ; cin >> x >> s ; if ( x > s ) { cout << - 1 << endl ; } else if ( x % 2 != s % 2 ) { cout << - 1 << endl ; } else if ( x == 0 && s == 0 ) { cout << 0 << endl ; } else if ( x == s ) { cout << 1 << endl << x << endl ; } else { long long int a ; // x^1 if ( x % 2 == 0 ) { a = x + 1 ; } else { a = x - 1 ; } long long int n = s - a ; if ( a != 0 ) { cout << n + 1 << endl ; } else { cout << n << endl ; } for ( long long int i = 0 ; i < n ; i ++ ) { cout << 1 << " " ; } if ( a != 0 ) cout << a << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahfel/D_73270631.cpp:9:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; long long int x , s ; cin >> x >> s ; if ( x > s ) { cout << - 1 << endl ; } else if ( x % 2 != s % 2 ) { cout << - 1 << endl ; } else if ( x == 0 && s == 0 ) { cout << 0 << endl ; } else if ( x == s ) { cout << 1 << endl << x << endl ; } else { long long int a = x ^ 1 ; long long int n = s - a ; if ( a != 0 ) { cout << n + 1 << endl ; } else { cout << n << endl ; } for ( long long int i = 0 ; i < n ; i ++ ) { cout << 1 << " " ; } if ( a != 0 ) cout << a << endl ; } return 0 ; } 


score: 0.9117647058823529


1155: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73359055.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9117647058823529


1156: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73358933.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } if ( v == u ) { cout << 1 << endl ; cout << v << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 64 ] = { } ; ll sum [ 64 ] = { } ; ll po2 [ 64 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 64 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 63 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 63 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; if ( c == 0 ) { c = 1 ; break ; } } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/ManavJ07/D_73266151.cpp:32:8

signed main ( ) { fastio ( ) ; # ifndef ONLINE_JUDGE freopen ( "input.txt" , "r" , stdin ) ; freopen ( "outpu.txt" , "w" , stdout ) ; # endif ll u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 << endl ; return 0 ; } if ( v == 0 ) { cout << 0 << endl ; return 0 ; } ll ar [ 100 ] = { } ; ll xo [ 63 ] = { } ; ll sum [ 63 ] = { } ; ll po2 [ 63 ] = { } ; po2 [ 0 ] = 1 ; for ( ll i = 1 ; i < 63 ; i ++ ) po2 [ i ] = po2 [ i - 1 ] * 2 ; for ( ll i = 62 ; i >= 0 ; i -- ) { if ( po2 [ i ] <= u ) { xo [ i ] = 1 ; u -= po2 [ i ] ; } if ( po2 [ i ] <= v ) { sum [ i ] = 1 ; v -= po2 [ i ] ; } } ll c = 0 ; //oa(sum,4); //oa(xo,4); for ( ll i = 62 ; i >= 0 ; i -- ) { if ( xo [ i ] == 1 && sum [ i ] == 1 ) { if ( c == 0 ) ar [ 0 ] += po2 [ i ] ; else { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; ar [ 2 ] += po2 [ i ] ; } } if ( xo [ i ] == 1 && sum [ i ] == 0 ) { ar [ 0 ] += po2 [ i ] ; } if ( xo [ i ] == 0 && sum [ i ] == 0 ) { if ( c == 1 ) { c = 0 ; ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } if ( xo [ i ] == 0 && sum [ i ] == 1 ) { if ( c == 0 ) { c = 1 ; } else if ( c == 1 ) { ar [ 0 ] += po2 [ i ] ; ar [ 1 ] += po2 [ i ] ; } } } if ( c != 0 ) { cout << - 1 << endl ; return 0 ; } if ( ar [ 2 ] == 0 ) { cout << 2 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << endl ; } else { cout << 3 << endl ; cout << ar [ 0 ] << " " << ar [ 1 ] << " " << ar [ 2 ] << endl ; } } 


score: 0.9117647058823529


1157: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9106280193236715


1158: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9095744680851063


1159: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322609.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = 1 ; } } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9095744680851063


1160: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9095744680851063


1161: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73322492.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] ++ ; } } } // for (int i = 1; i <= 10; i++) { //     for (int j = 1; j <= 10; j++) { //         cout << e[i][j] << ' '; //     } cout << '\n'; // } cout << '\n'; for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { if ( e [ i ] [ j ] >= 2 ) { ans = 2 ; break ; } } } if ( ans != 2 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = e [ i ] [ j ] = e [ i ] [ j ] == 1 ? 1 : 1e7 ; } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9095744680851063


1162: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1163: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1164: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1165: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1166: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1167: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1168: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/E_73292018.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1169: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1170: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1171: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1172: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1173: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/C_73238748.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1174: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1175: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1176: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/B_73224315.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 


score: 0.908256880733945


1177: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:55:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/madhav_1999/A_73222345.cpp:57:5

long long # define pii pair < int , int > # define len ( x ) ( int ) x . size ( ) # define rev ( a ) reverse ( all ( a ) ) # define oiint ostream_iterator < int > ( cout , " " ) # define pb push_back # define mp make_pair # define ff first # define ss second # define endl '\n' # define all ( a ) a . begin ( ) , a . end ( ) # define initialise ( a , x ) memset ( a , x , sizeof ( a ) ) # define onlyunique ( v ) v . erase ( unique ( all ( v ) ) , v . end ( ) ) ; //only for sorted vector # define inf 2e18 # pragma comment ( linker , "/stack:200000000" ) # pragma GCC optimize ( "O3" ) # pragma GCC optimize ( "unroll-loops" ) # pragma GCC target ( "sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native" ) # define _CRT_SECURE_NO_WARNINGS # ifdef MADHAV # define dbg ( ... ) __f ( # __VA_ARGS__ , __VA_ARGS__ ) template < typename Arg1 > void __f ( const char * name , Arg1 && arg1 ) { cerr << name << " : " << arg1 << endl ; } template < typename Arg1 , typename ... Args > void __f ( const char * names , Arg1 && arg1 , Args && ... args ) { const char * comma = strchr ( names + 1 , ',' ) ; cerr . write ( names , comma - names ) << " : " << arg1 << "  " ; __f ( comma + 1 , args ... ) ; } # else # define dbg ( ... ) 42 # endif template < typename X > ostream & operator << ( ostream & x , const vector < X > & v ) { for ( int i = 0 ; i < v . size ( ) ; ++ i ) x << v [ i ] << " " ; return x ; } template < typename X > ostream & operator << ( ostream & x , const set < X > & v ) { for ( auto it : v ) x << it << " " ; return x ; } template < typename X , typename Y > ostream & operator << ( ostream & x , const pair < X , Y > & v ) { x << v . ff << " " << v . ss ; return x ; } template < typename T , typename S > ostream & operator << ( ostream & os , const map < T , S > & v ) { for ( auto it : v ) os << it . first << "=>" << it . second << endl ; return os ; } typedef tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update > ordered_set ; mt19937_64 rng ( chrono :: steady_clock :: now ( ) . time_since_epoch ( ) . count ( ) ) ; struct pair_hash { inline std :: size_t operator ( ) ( const std :: pair < int , int > & v ) const { return v . first * 31 + v . second ; } } ; const int MOD = 1e9 + 7 ; int takemod ( int a , int mod = MOD ) { a %= mod ; if ( a < 0 ) a += mod ; return a ; } int fast_exp ( int base , int expo , int mod = MOD ) { int res = 1 ; while ( expo > 0 ) { if ( expo & 1 ) res = ( res * base ) % mod ; base = ( base * base ) % mod ; expo >>= 1 ; } return res ; } 


score: 0.908256880733945


1178: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406939.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v && u != 0 ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 


score: 0.9078947368421053


1179: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406801.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 


score: 0.9078947368421053


1180: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73413246.cpp:4:5

int main ( ) { long long u , v , c ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v / u ] ; int i = 0 ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = v - u ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) cout << a [ j ] << " " ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406677.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; long long a [ v ] ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 


score: 0.9078947368421053


1181: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9076923076923077


1182: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9076923076923077


1183: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 


score: 0.9074074074074074


1184: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 


score: 0.9074074074074074


1185: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 


score: 0.9074074074074074


1186: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:85:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:97:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } 


score: 0.9074074074074074


1187: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 


score: 0.9066666666666666


1188: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 


score: 0.9066666666666666


1189: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/A_73229296.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 


score: 0.9066666666666666


1190: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:45:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Mahmoud_Monem/B_73238800.cpp:46:4

long long int # define ld long double # define FOR ( i , b , e ) for ( ll i = ( b ) - ( ( b ) > ( e ) ) ; i != ( e ) - ( ( b ) > ( e ) ) ; i += 1 - 2 * ( ( b ) > ( e ) ) ) # define EPS 1e-9 # define all ( v ) v . begin ( ) , v . end ( ) # define X first # define Y second # define IO std :: ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( NULL ) ; # define endl '\n' # define re return # define mp make_pair # define NumofDigits ( n ) ( ( int ) log10 ( n ) + 1 ) # define fixedpre ( n ) fixed << setprecision ( n ) ; # define sz size ( ) # define MAXN 100005 # define MAXM 100005 using namespace std ; string alpha = "abcdefghijklmnopqrstuvwxyz" ; const double PI = acos ( - 1 ) ; const int N = 1e7 + 5 ; ll MOD = 1e9 + 7 ; ll OO = 1e18 + 8 ; int oo = 1e9 + 9 ; ll pw ( ll b , ll p ) { if ( ! p ) re 1 ; ll sq = pw ( b , p / 2 ) ; sq *= sq ; if ( p % 2 ) sq *= b ; re sq ; } ll gcd ( ll a , ll b ) { re ( b == 0 ? a : gcd ( b , a % b ) ) ; } 


score: 0.9066666666666666


1191: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406801.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } long long a [ v ] ; int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 


score: 0.9066666666666666


1192: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73408962.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; if ( u > v ) { cout << - 1 ; return 0 ; } long long a [ v ] ; int i = 0 , c ; while ( v != 0 ) { if ( u == v ) { a [ i ] = u ; i ++ ; break ; } c = ( u ^ v ) ; if ( c % 2 != 0 ) { cout << - 1 ; return 0 ; } a [ i ] = c >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Maheswar17031/D_73406677.cpp:4:5

int main ( ) { long long u , v ; cin >> u >> v ; long long a [ v ] ; if ( u > v ) { cout << - 1 ; return 0 ; } if ( u == v ) { cout << 2 << "\n" ; cout << 0 << " " << u ; return 0 ; } int i = 0 ; while ( v != 0 ) { a [ i ] = ( u ^ v ) >> 1 ; u = a [ i ] ^ u ; v = v - a [ i ] ; i ++ ; if ( u == v ) { a [ i ] = u ; i ++ ; break ; } } cout << i << "\n" ; for ( int j = 0 ; j < i ; j ++ ) { cout << a [ j ] << " " ; } } 


score: 0.9066666666666666


1193: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789837.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73791788.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > temp = tree [ i ] [ 0 ] ; for ( int j = 0 ; j < tree [ temp . first ] . size ( ) ; ++ j ) { if ( tree [ temp . first ] [ j ] . first == i ) { tree [ temp . first ] [ j ] . second = counter ; } } temp . second = counter ++ ; tree [ i ] [ 0 ] = temp ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.90625


1194: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9055690072639225


1195: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9055690072639225


1196: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9055690072639225


1197: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73335066.cpp:28:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = 2 ; i * i <= x ; i ++ ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; i -- ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( y * y > x ) break ; if ( ! ( x % y ) ) { a = y ; b = x / y ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : edge ) { bitset < 1000005 > visited , used ; visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; map < ll , ll > shortest ; bfs . push_back ( mp ( mp ( x . first , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lrt1088/E_73336750.cpp:31:5

int main ( ) { ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; gen_prime ( ) ; cin >> n ; a . resize ( n ) ; for ( ll j = 0 ; j < n ; j ++ ) { ll x ; cin >> x ; for ( ll i = ( ll ) ceil ( sqrt ( x ) ) ; i > 0 ; i -- ) { if ( ! ( x % ( i * i ) ) ) { x /= i * i ; } } ll a = 1 , b = x ; for ( ll & y : prime ) { if ( ! ( x % y ) ) { a = y ; b = x / y ; break ; } } //	cout << a << ' ' << b << '\n'; edge [ a ] . emplace_back ( mp ( b , j ) ) ; edge [ b ] . emplace_back ( mp ( a , j ) ) ; } for ( auto & x : prime ) { visited . reset ( ) ; used . reset ( ) ; deque < pair < pair < ll , ll > , ll >> bfs ; bfs . push_back ( mp ( mp ( x , - 1 ) , 0 ) ) ; while ( bfs . size ( ) ) { auto y = bfs . front ( ) ; //	cout << y.first.first << ' ' << y.second << '\n'; bfs . pop_front ( ) ; if ( visited [ y . first . first ] ) { ans = min ( ans , y . second + shortest [ y . first . first ] ) ; break ; } visited [ y . first . first ] = 1 ; shortest [ y . first . first ] = y . second ; for ( auto & z : edge [ y . first . first ] ) { //	cout << ' ' << z.first << ' ' << z.second << '\n'; if ( z . second != y . first . second ) { bfs . push_back ( mp ( z , y . second + 1 ) ) ; } } } } cout << ( ans == llinf ? - 1 : ans ) << '\n' ; return 0 ; } 


score: 0.9053254437869822


1198: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73307407.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73307708.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } if ( n == 2 ) { cout << "1" << endl ; return 0 ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 


score: 0.9047619047619048


1199: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73307407.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Lyyyf/C_73308207.cpp:9:5

int main ( ) { ios :: sync_with_stdio ( false ) ; cin . tie ( 0 ) ; int n , u , v ; cin >> n ; for ( int i = 1 ; i < n ; i ++ ) { cin >> u >> v ; a [ u ] ++ ; a [ v ] ++ ; b [ u ] = i ; b [ v ] = i ; } if ( n == 2 ) { cout << "0" << endl ; return 0 ; } int x = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 1 ) c [ b [ i ] ] = ++ x ; } int y = x ; for ( int i = 1 ; i < n ; i ++ ) { if ( c [ i ] ) cout << c [ i ] - 1 << endl ; else cout << y ++ << endl ; } return 0 ; } 


score: 0.9047619047619048


1200: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324225.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9037974683544304


1201: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324056.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9033816425120773


1202: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373147.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9033816425120773


1203: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373177.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ v ] [ u ] + 1 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; // cout << u << ' ' << v << '\n'; ans = min ( ans , e [ v ] [ u ] + 2 ) ; e2 [ u ] [ v ] = e [ u ] [ v ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9033816425120773


1204: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73789837.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; if ( second > first ) swap ( first , second ) ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > & temp = tree [ i ] [ 0 ] ; temp . second = counter ++ ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { if ( tree [ arr [ i ] . first ] . size ( ) != 1 ) for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } else { cout << tree [ arr [ i ] . first ] [ 0 ] . second << endll ; } } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mahmoud.manfy159/C_73790536.cpp:13:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; /*#ifdef _A    freopen("d_tough_choices.txt", "r", stdin);    freopen("outd.txt", "w", stdout);#endif*/ int n ; cin >> n ; vector < pair < int , int >> tree [ n ] ; pair < int , int > arr [ n - 1 ] ; for ( int i = 0 ; i < n - 1 ; ++ i ) { int first , second ; cin >> first >> second ; first -- ; second -- ; tree [ first ] . push_back ( make_pair ( second , - 1 ) ) ; tree [ second ] . push_back ( make_pair ( first , - 1 ) ) ; arr [ i ] = make_pair ( first , second ) ; } int counter = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( tree [ i ] . size ( ) == 1 ) { pair < int , int > temp = tree [ i ] [ 0 ] ; tree [ temp . first ] [ i ] . second = counter ; temp . second = counter ++ ; tree [ i ] [ 0 ] = temp ; } } for ( int i = 0 ; i < n - 1 ; ++ i ) { for ( int j = 0 ; j < tree [ arr [ i ] . first ] . size ( ) ; ++ j ) { if ( tree [ arr [ i ] . first ] [ j ] . first == arr [ i ] . second ) { if ( tree [ arr [ i ] . second ] . size ( ) == 1 ) { cout << tree [ arr [ i ] . second ] [ 0 ] . second << endll ; } else cout << counter ++ << endll ; break ; } } } return 0 ; } 


score: 0.9032258064516129


1205: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 


score: 0.9032258064516129


1206: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 


score: 0.9032258064516129


1207: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/A_73223350.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 


score: 0.9032258064516129


1208: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:16:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/longnight/B_73228348.cpp:27:4

long long # define ss second # define ff first # define pb push_back # define mkp mak # define pll pair < long long , long long > # define FIO ios_base :: sync_with_stdio ( 0 ) ; cin . tie ( 0 ) ; cout . tie ( 0 ) ; ll lim = 3e16 + 5 ; const int mod = 998244353 ; const int sz = 2e5 + 5 ; ll n , m , t , k ; ll Power ( ll a , ll b ) { if ( a == 0 ) return 0 ; if ( b == 0 ) return 1 ; ll ans = Power ( ( a * a ) % mod , b / 2 ) ; if ( b & 1 ) return ( a * ans ) % mod ; return ans % mod ; } ll Inv ( ll a ) { return Power ( a , mod - 2 ) ; } 


score: 0.9032258064516129


1209: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373955.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i %= 20 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9031476997578692


1210: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9029850746268657


1211: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9029850746268657


1212: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/B_73255046.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 


score: 0.9029850746268657


1213: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/A_73247405.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) # define v vector < ll > # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9029850746268657


1214: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9023255813953488


1215: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9023255813953488


1216: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9023255813953488


1217: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:153:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } //########################################################################################### //function to calculate inverse modulo under mod...assuming gcd is 1 ll invmod ( ll a , ll modulo ) { ll check = powmod ( a , modulo - 2 , modulo ) % modulo ; return check ; } //########################################################################################### ll max ( ll a , ll b ) { if ( a > b ) { /* code */ return a ; } return b ; } //########################################################################################### ll min ( ll a , ll b ) { if ( a < b ) { /* code */ return a ; } return b ; } 


score: 0.9023255813953488


1218: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9020618556701031


1219: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9020618556701031


1220: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/B_73231368.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 


score: 0.9020618556701031


1221: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:114:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/mad_nik/A_73226791.cpp:126:4

long long int # define ull unsigned long long # define p1 ( x ) cout << x << "\n" ; # define p2 ( x , y ) cout << x << " " << y << "\n" ; # define p3 ( x , y , z ) cout << x << " " << y << " " << z << "\n" ; # define nl cout << "\n" ; # define lp ( i , l , r ) for ( long long int i = l ; i < r ; i ++ ) # define lpr ( i , r , l ) for ( long long int i = r - 1 ; i >= l ; i -- ) # define mem ( a , x ) memset ( a , x , sizeof ( a ) ) //set elements of array to some value # define pi 3.1415926535897932384626 # define mod 1000000007 # define vi vector < int > # define vii vector < vector < long long int > > # define vpi vector < pair < long long int , long long int > > # define mp ( a , b ) make_pair ( a , b ) # define pb ( x ) push_back ( x ) # define ff first # define ss second # define siz 256 # define bc ( n ) __builtin_popcountll ( n ) # define leadzero ( a ) __builtin_clz ( a ) // count leading zeroes # define trailzero ( a ) __builtin_ctz ( a ) // count trailing zeroes # define bitcount ( a ) __builtin_popcount ( a ) // count set bits # define lps ( v , x ) ( lower_bound ( all ( v ) , x ) - v . begin ( ) ) # define ups ( v , x ) ( upper_bound ( all ( v ) , x ) - v . begin ( ) ) //######################################################################################### bool isPrime [ 5000005 ] ; void sieve ( long long int N ) { for ( ll i = 0 ; i <= N ; ++ i ) { isPrime [ i ] = true ; } isPrime [ 0 ] = false ; isPrime [ 1 ] = false ; for ( int i = 2 ; i * i <= N ; ++ i ) { if ( isPrime [ i ] == true ) { //Mark all the multiples of i as composite numbers for ( int j = i * i ; j <= N ; j += i ) isPrime [ j ] = false ; } } } //######################################################################################### bool anagram ( char * s1 , char * s2 ) { ll count [ siz ] ; mem ( count , 0 ) ; ll i ; for ( i = 0 ; s1 [ i ] && s2 [ i ] ; i ++ ) { count [ s1 [ i ] ] ++ ; count [ s2 [ i ] ] -- ; } if ( s1 [ i ] || s2 [ i ] ) { return false ; } lp ( i , 0 , siz ) { if ( count [ i ] ) { return false ; } } return true ; } //########################################################################################### int find_largest_digit ( int n ) { int mx = 0 ; while ( n > 0 ) { mx = max ( mx , n % 10 ) ; n /= 10 ; } return mx ; } //########################################################################################### ll no_of_digits ( ll n ) { ll ans = 0 ; while ( n > 0 ) { ans ++ ; n /= 10 ; } return ans ; } //########################################################################################### // modulo Multiplication ll moduloMultiplication ( ll a , ll b , ll zz ) { ll res = 0 ; a %= zz ; while ( b ) { if ( b & 1 ) res = ( res + a ) % zz ; a = ( 2 * a ) % zz ; b >>= 1 ; } return res ; } //########################################################################################### ll convert ( string s ) { bool o = true ; ll ans = 0 ; for ( ll i = 0 ; i < s . length ( ) ; i ++ ) { ans = ans * 10 + ( s [ i ] - 48 ) ; } return ans ; } //########################################################################################### //function to calculate a^b under mod... ll powmod ( ll a , ll b , ll modulo ) { if ( b == 0 || a == 1 ) return 1 ; ll half = powmod ( a , ( b / 2 ) , modulo ) % modulo ; ll full = ( half * half ) % modulo ; if ( b % 2 ) return ( full * a ) % modulo ; return full % modulo ; } 


score: 0.9020618556701031


1222: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73269877.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9019607843137255


1223: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73329406.cpp:22:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } io [ f [ i ] ] = 0 ; } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { io [ kk [ 0 ] ] ++ ; if ( io [ kk [ 0 ] ] >= 2 ) { cout << 2 ; return 0 ; } v [ kk [ 0 ] ] . push_back ( 1 ) ; v [ 1 ] . push_back ( kk [ 0 ] ) ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } if ( pas > a ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lukamosiashvili/E_73288314.cpp:61:5

int main ( ) { ios_base :: sync_with_stdio ( false ) , cin . tie ( 0 ) , cout . tie ( 0 ) ; cin >> a ; for ( i = 0 ; i <= 1000002 ; i ++ ) k [ i ] = 1000002 ; for ( i = 1 ; i <= a ; i ++ ) { cin >> f [ i ] ; c = sqrt ( f [ i ] ) ; if ( c * c == f [ i ] ) { cout << 1 ; return 0 ; } io [ f [ i ] ] ++ ; } inf = 1000009 ; pas = 1000009 ; for ( i = 1 ; i <= a ; i ++ ) { if ( io [ f [ i ] ] >= 2 ) { cout << 2 ; return 0 ; } } for ( i = 2 ; i <= 1000 ; i ++ ) { if ( sac [ i ] == 0 ) { pi ++ ; p [ pi ] = i ; for ( j = i * i ; j <= 1000 ; j += i ) { sac [ j ] = 1 ; } } } for ( i = 1 ; i <= a ; i ++ ) { c = f [ i ] ; kk . clear ( ) ; for ( j = 1 ; j <= pi ; j ++ ) { d = 0 ; while ( c % p [ j ] == 0 ) { d ++ ; c /= p [ j ] ; } if ( d % 2 == 1 ) { kk . push_back ( p [ j ] ) ; } } if ( c != 1 ) { kk . push_back ( c ) ; } if ( kk . size ( ) >= 2 ) { v [ kk [ 0 ] ] . push_back ( kk [ 1 ] ) ; v [ kk [ 1 ] ] . push_back ( kk [ 0 ] ) ; } if ( kk . size ( ) == 1 ) { k [ kk [ 0 ] ] = 0 ; } } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs ( i , 0 ) ; } cnt ++ ; for ( i = 1 ; i <= 1000000 ; i ++ ) { if ( bo [ i ] == cnt ) continue ; dfs2 ( i , 0 ) ; } if ( pas == inf ) { cout << - 1 ; } else { cout << pas ; } return 0 ; } 


score: 0.9019607843137255


1224: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Madhav_Agarwal/D_73401162.cpp:48:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout . tie ( 0 ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u == v ) { if ( u == 0 ) cout << "0\n" ; else { cout << "1\n" ; cout << u << "\n" ; } } else if ( u > v ) cout << "-1\n" ; else { cout << "2\n" ; cout << ( ( v + u ) / 2 ) << ' ' << ( ( v - u ) / 2 ) << "\n" ; } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Madhav_Agarwal/D_73400915.cpp:48:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout . tie ( 0 ) ; cin . tie ( NULL ) ; ll u , v ; cin >> u >> v ; if ( u == v ) { if ( u == 0 ) cout << "0\n" ; else { cout << "3\n" ; cout << u << " 0 0\n" ; } } else if ( u > v ) cout << "-1\n" ; else { cout << "3\n" ; cout << u << ' ' << ( ( v - u ) / 2 ) << ' ' << ( ( v - u ) / 2 ) << "\n" ; } } 


score: 0.9019607843137255


1225: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73324249.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( u <= 1000 && v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323859.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9015151515151515


1226: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73295382.cpp:11:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } if ( N == 2 ) { printf ( "%d" , 0 ) ; return ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) { if ( answer [ i ] ) { printf ( "%d\n" , answer [ i ] - 1 ) ; } else { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/C_73295331.cpp:23:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) { if ( answer [ i ] ) { printf ( "%d\n" , answer [ i ] - 1 ) ; } else { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 


score: 0.9014084507042254


1227: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot2/C_73661964.cpp:11:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } if ( N == 2 ) //注意特判2 { printf ( "%d" , 0 ) ; return ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) //在前三个度为1的点的出边赋值上0,1,2,为了方便处理这里就用了1,2,3 { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) //输出 { if ( answer [ i ] ) //如果有答案就输出答案 { printf ( "%d\n" , answer [ i ] - 1 ) ; } else //没有反正可以乱输出 { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/luogu_bot1/C_73295331.cpp:23:6

void work ( ) { scanf ( "%d" , & N ) ; int f , t ; REP ( i , 1 , N - 1 ) { scanf ( "%d%d" , & f , & t ) ; out [ f ] ++ ; out [ t ] ++ ; p [ f ] = p [ t ] = i ; } int cnt = 0 ; REP ( i , 1 , N ) { if ( out [ i ] == 1 ) { answer [ p [ i ] ] = ++ cnt ; if ( cnt == 3 ) { break ; } } } REP ( i , 1 , N - 1 ) { if ( answer [ i ] ) { printf ( "%d\n" , answer [ i ] - 1 ) ; } else { ++ cnt ; printf ( "%d\n" , cnt - 1 ) ; } } } 


score: 0.9014084507042254


1228: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368395.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = ceil ( sqrt ( n ) ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; for ( int i = 0 ; sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , -- sq ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lyhehehe/F_73368218.cpp:32:5

int main ( ) { cin >> n >> m ; int v , u ; sq = ceil ( sqrt ( n ) ) ; for ( int i = 0 ; i < m ; ++ i ) { cin >> u >> v ; -- u , -- v ; g [ u ] . push_back ( v ) ; g [ v ] . push_back ( u ) ; } for ( int i = 0 ; i < n ; ++ i ) { disc [ i ] = - 1 ; marked [ i ] = 0 ; } discTime = 0 ; dfs ( 0 ) ; printf ( "1\n" ) ; int cnt = 0 ; for ( int i = 0 ; i < n && cnt < sq ; ++ i ) if ( ! marked [ i ] ) printf ( "%d " , i + 1 ) , ++ cnt ; } 


score: 0.9014084507042254


1229: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73373981.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 && mp [ u ] < mp [ v ] ) { // cout << u << ' ' << v << '\n'; u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 1 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = 0 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; if ( mp [ u ] < mp [ v ] && v <= 1000 ) { u = mp [ u ] , v = mp [ v ] ; ans = min ( ans , e [ u ] [ v ] + 2 ) ; e2 [ u ] [ v ] = e2 [ v ] [ u ] = e [ u ] [ v ] = e [ v ] [ u ] = min ( e [ u ] [ v ] , 2 ) ; } } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } if ( n == 77829 ) { for ( int i = 1 ; i <= 200 ; i ++ ) { cout << e [ i ] [ i ] << ' ' ; if ( i % 20 == 0 ) cout << '\n' ; } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/Macaron_lin/E_73323972.cpp:19:5

int main ( ) { int n ; scanf ( "%d" , & n ) ; int ans = INT_MAX ; for ( int i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , a + i ) ; int t = sqrt ( a [ i ] + 0.5 ) ; for ( int j = 2 ; j <= t ; j ++ ) { if ( a [ i ] % j == 0 ) { int p1 = j , p2 = 0 ; while ( a [ i ] % j == 0 ) { p2 ++ ; a [ i ] /= j ; } if ( p2 & 1 ) b [ i ] . push_back ( make_pair ( p1 , p2 ) ) ; } } if ( a [ i ] > 1 ) b [ i ] . push_back ( make_pair ( a [ i ] , 1 ) ) ; if ( b [ i ] . empty ( ) ) { ans = 1 ; break ; } if ( b [ i ] . size ( ) == 1 ) b [ i ] . push_back ( make_pair ( 1 , 1 ) ) ; a [ i ] = b [ i ] [ 0 ] . first * b [ i ] [ 1 ] . first ; } if ( ans != 1 ) { sort ( a + 1 , a + 1 + n ) ; int nn = unique ( a + 1 , a + 1 + n ) - ( a + 1 ) ; if ( nn < n ) { ans = 2 ; } else { for ( int i = 1 ; i <= n ; i ++ ) { int u = b [ i ] [ 0 ] . first , v = b [ i ] [ 1 ] . first ; son [ u ] . push_back ( v ) ; son [ v ] . push_back ( u ) ; } for ( int i = 1 ; i <= 1000000 ; i ++ ) { if ( ! son [ i ] . empty ( ) ) { mp [ i ] = ++ id ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e [ i ] [ j ] = e2 [ i ] [ j ] = 1e7 ; } } for ( int i = 1 ; i <= 1000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { int u = i , v = son [ i ] [ j ] ; if ( v <= 1000 ) { e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int i = 1001 ; i <= 1000000 ; i ++ ) { for ( int j = 0 ; j < ( int ) son [ i ] . size ( ) ; j ++ ) { for ( int k = j + 1 ; k < ( int ) son [ i ] . size ( ) ; k ++ ) { int u = son [ i ] [ j ] , v = son [ i ] [ k ] ; e [ mp [ u ] ] [ mp [ v ] ] = e [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 2 ) ; e2 [ mp [ u ] ] [ mp [ v ] ] = e2 [ mp [ v ] ] [ mp [ u ] ] = min ( e [ mp [ u ] ] [ mp [ v ] ] , 1 ) ; } } } for ( int k = 1 ; k <= 200 ; k ++ ) { for ( int i = 1 ; i < k ; i ++ ) { for ( int j = 1 ; j < i ; j ++ ) { ans = min ( ans , e2 [ i ] [ j ] + e [ i ] [ k ] + e [ k ] [ j ] ) ; } } for ( int i = 1 ; i <= 200 ; i ++ ) { for ( int j = 1 ; j <= 200 ; j ++ ) { e2 [ i ] [ j ] = min ( e2 [ i ] [ j ] , e2 [ i ] [ k ] + e2 [ k ] [ j ] ) ; } } } } } if ( ans > n ) ans = - 1 ; printf ( "%d\n" , ans ) ; getchar ( ) ; getchar ( ) ; return 0 ; } 


score: 0.9009661835748792


1230: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73480263.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = 1 ; for ( auto j : factor ) { temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lostdesire/E_73484459.cpp:70:5

int main ( ) { ios_base :: sync_with_stdio ( false ) ; cout << fixed << setprecision ( 10 ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; for ( int i = 2 ; i * i < 1000005 ; i ++ ) { if ( prime [ i ] . size ( ) > 0 ) continue ; for ( int j = i ; j < 1000005 ; j += i ) { prime [ j ] . pb ( i ) ; } } cin >> n ; bool flag = false ; f ( i , 0 , n ) { cin >> arr [ i ] ; vll factor = prime [ arr [ i ] ] ; ll temp = arr [ i ] ; for ( auto j : factor ) { ll cnt = 0 ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) temp *= j ; } if ( vis [ temp ] ) flag = true ; else vis [ temp ] = true ; ll len = factor . size ( ) ; // cout << len << '\n'; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; //cout << p << " " << q << '\n'; } } if ( flag || vis [ 1 ] ) { if ( vis [ 1 ] ) cout << 1 ; else cout << 2 ; return 0 ; } f ( i , 0 , n ) { vll factor ; for ( auto j : prime [ arr [ i ] ] ) { ll cnt = 0 ; ll temp = arr [ i ] ; while ( temp % j == 0 ) { temp /= j ; cnt ++ ; } if ( cnt % 2 == 1 ) factor . pb ( j ) ; } ll len = factor . size ( ) ; // f(i,0,len) cout << factor[i] << " "; // cout << "\n"; if ( len == 1 ) { ll p = factor [ 0 ] ; ll q = 1 ; if ( p < 10005 ) { edge [ q ] . pb ( p ) ; edge [ p ] . pb ( q ) ; } //cout << p << ' ' << q << '\n'; } if ( len == 2 ) { ll p = factor [ 0 ] ; ll q = factor [ 1 ] ; if ( p < 1005 && q < 1005 ) { edge [ p ] . pb ( q ) ; edge [ q ] . pb ( p ) ; } //cout << p << " " << q << '\n'; } } solve ( ) ; return 0 ; } 


score: 0.9004329004329005


1231: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73289714.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; int minDistMarked = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; if ( marked [ x ] ) { ckmin ( ret , x + minDistMarked ) ; ckmin ( minDistMarked , dist [ x ] ) ; } //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/lucasxia01/E_73288954.cpp:70:5

int bfs ( int s ) { F0R ( i , MX ) if ( dist [ i ] != INF ) dist [ i ] = - 1 ; queue < int > q , par ; q . push ( s ) ; par . push ( - 1 ) ; dist [ s ] = 0 ; int ret = INF ; while ( ! q . empty ( ) ) { int x = q . front ( ) , p = par . front ( ) ; //cout << x << endl; q . pop ( ) ; par . pop ( ) ; trav ( a , edges [ x ] ) { if ( dist [ a ] == - 1 ) { q . push ( a ) ; par . push ( x ) ; dist [ a ] = dist [ x ] + 1 ; if ( marked [ a ] && marked [ s ] ) ckmin ( ret , dist [ a ] + 2 ) ; } else if ( a != p ) { ckmin ( ret , dist [ a ] + dist [ x ] + 1 ) ; } } } return ret ; } 


score: 0.9


1232: ************************************************
/Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:21:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } 
xxxxxxxxxxxxxxxxxx
 /Users/xuyisen/Downloads/Code_pack/data/data3/loophole_121/D_73267458.cpp:23:4

long long # define pb push_back # define f ( a ) for ( ll i = 0 ; i < a ; i ++ ) # define rep ( i , a , b ) for ( ll i = a ; i < b ; i ++ ) # define rrep ( i , a , b ) for ( ll i = a ; i > b ; i -- ) // #define v vector<ll> # define mp make_pair # define fir first # define sec second # define _fast_ ios_base :: sync_with_stdio ( false ) ; cin . tie ( NULL ) ; cout . tie ( NULL ) ; using namespace std ; //using boost :: multiprecision :: cpp_int; //using boost :: multiprecision :: cpp_dec_float_50; //using boost :: multiprecision :: cpp_dec_float_100; ll power ( ll a , ll n ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; } n >>= 1 ; a *= a ; } return p ; } ll power ( ll a , ll n , ll mod ) { ll p = 1 ; while ( n > 0 ) { if ( n % 2 ) { p = p * a ; p %= mod ; } n >>= 1 ; a *= a ; a %= mod ; } return p % mod ; } ll gcd ( ll a , ll b ) { return b ? gcd ( b , a % b ) : a ; } 


score: 0.9


